<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
	<channel>
		<title>RBleug</title>
		<description>Regilero's blog; Mostly tech things about web stuff.</description>
		<link>http://regilero.github.io/</link>
		
			<item>
				<title>Drupal - Mongodb statistics module published</title>
				<description>&lt;h3&gt;What is this about?&lt;/h3&gt;

&lt;p&gt;Just a few words, as I've other some things to do.&lt;/p&gt;

&lt;p&gt;I've just published a development version of &lt;a href=&quot;http://github.com/regilero/drupal_mongodb_statistics&quot;&gt;mongodb-statistics&lt;/a&gt; on github.&lt;/p&gt;

&lt;p&gt;This module is a first try on replacing heavy MySQL operations done by the core statistics module.&lt;/p&gt;

&lt;p&gt;It's copy-and-alter of the core statistics module, with some additions.
So it's not the nicest piece of code I could write :-)&lt;/p&gt;

&lt;p&gt;On the things added :&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;batch migration of previous node_counter statistics if any (not yet for accesslog)&lt;/li&gt;
&lt;li&gt;post-synchronisation of node_counter mongodb table to a sql table (via cron), so that you could query it via views (not for accesslog, are you mad?)&lt;/li&gt;
&lt;li&gt;time based caching of the popular content block&lt;/li&gt;
&lt;li&gt;Still lot of thing to do (see the &lt;a href=&quot;https://github.com/regilero/drupal_mongodb_statistics/blob/master/mongodb_statistics/TODO.txt&quot;&gt;TODO&lt;/a&gt;) but it was a nice way to learn &lt;strong&gt;mongodb&lt;/strong&gt;. I especially like the idea of &lt;a href=&quot;http://nosql.mypopescu.com/post/392418792/translate-sql-to-mongodb-mapreduce&quot;&gt;mapReduce&lt;/a&gt; functions applied for complex &lt;code&gt;GROUP BY&lt;/code&gt; equivalents.&lt;/li&gt;
&lt;/ul&gt;

</description>
				<published>2011-10-18 00:00:00 +0200</published>
				<link>http://regilero.github.io//Drupal/English/2011/10/18/drupal_mongodb_statistics_module_published/</link>
			</item>
		
			<item>
				<title>Separate cache Backends with Drupal6 and Drupal7.</title>
				<description>&lt;p&gt;Drupal use a lot of caches at different levels but all of them are by default stored in the database.&lt;/p&gt;

&lt;p&gt;In this article we'll study how to push all these caches in better places.&lt;/p&gt;

&lt;p&gt;Thi is a new feature of default Drupal7, but simple solutions are available if you want the same thing on a Drupal6 installation.&lt;/p&gt;

&lt;h3&gt;The default situation&lt;/h3&gt;

&lt;p&gt;Take your Drupal Database and check what are the cache tables used, here I'll use a quite basic default Drupal installation on Drupal6:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;sql&quot;&gt;&lt;span class=&quot;n&quot;&gt;mysql&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;show&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tables&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;like&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;cache%&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;---------------------------+&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Tables_in_expat6&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;cache&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;---------------------------+&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;cache&lt;/span&gt;                     &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cache_block&lt;/span&gt;               &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cache_content&lt;/span&gt;             &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cache_filter&lt;/span&gt;              &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cache_form&lt;/span&gt;                &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cache_menu&lt;/span&gt;                &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cache_page&lt;/span&gt;                &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cache_update&lt;/span&gt;              &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cache_views&lt;/span&gt;               &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cache_views_data&lt;/span&gt;          &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cache_admin_menu&lt;/span&gt;          &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;---------------------------+&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Let's try to get more informations on theses tables with a query on the INFORMATION_SCHEMA of MySQL, here a database named mydrupal&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;sql&quot;&gt;&lt;span class=&quot;n&quot;&gt;mysql&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; 
    &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;concat&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;table_schema&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;.&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;table_name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dbtable&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;concat&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;round&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;table_rows&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;K&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;rows&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;concat&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;round&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;data_length&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1024&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1024&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;M&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;DATA&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;concat&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;round&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;index_length&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1024&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1024&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;M&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;indexes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;concat&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;round&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;data_length&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;index_length&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1024&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1024&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;M&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;total_size&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;round&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;index_length&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;data_length&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;idxfrac&lt;/span&gt; 
    &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;  &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;information_schema&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;TABLES&lt;/span&gt; 
    &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;  &lt;span class=&quot;k&quot;&gt;WHERE&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;table_name&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;LIKE&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;cache%&amp;#39;&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;  &lt;span class=&quot;k&quot;&gt;AND&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;table_schema&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;&amp;quot;mydrupal&amp;quot;&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;  &lt;span class=&quot;k&quot;&gt;ORDER&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;BY&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;data_length&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;index_length&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;DESC&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;---------------------------+-------+-------+---------+------------+---------+&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dbtable&lt;/span&gt;                   &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;rows&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;DATA&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;indexes&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;total_size&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;idxfrac&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;---------------------------+-------+-------+---------+------------+---------+&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mydrupal&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cache_menu&lt;/span&gt;       &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;02&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;K&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;19&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;M&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;06&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;M&lt;/span&gt;   &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;26&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;M&lt;/span&gt;      &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;    &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;01&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; 
&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mydrupal&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cache_form&lt;/span&gt;       &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;01&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;K&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;99&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;M&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;01&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;M&lt;/span&gt;   &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;00&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;M&lt;/span&gt;      &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;    &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;00&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; 
&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mydrupal&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cache_update&lt;/span&gt;     &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;00&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;K&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;86&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;M&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;01&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;M&lt;/span&gt;   &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;86&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;M&lt;/span&gt;      &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;    &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;01&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; 
&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mydrupal&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cache_filter&lt;/span&gt;     &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;22&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;K&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;49&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;M&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;03&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;M&lt;/span&gt;   &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;52&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;M&lt;/span&gt;      &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;    &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;06&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; 
&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mydrupal&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;cache&lt;/span&gt;            &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;01&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;K&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;46&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;M&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;01&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;M&lt;/span&gt;   &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;46&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;M&lt;/span&gt;      &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;    &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;01&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; 
&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mydrupal&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cache_content&lt;/span&gt;    &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;17&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;K&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;35&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;M&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;01&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;M&lt;/span&gt;   &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;36&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;M&lt;/span&gt;      &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;    &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;03&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; 
&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mydrupal&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cache_views&lt;/span&gt;      &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;01&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;K&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;23&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;M&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;01&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;M&lt;/span&gt;   &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;23&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;M&lt;/span&gt;      &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;    &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;03&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; 
&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mydrupal&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cache_admin_menu&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;00&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;K&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;00&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;M&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;01&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;M&lt;/span&gt;   &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;01&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;M&lt;/span&gt;      &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;   &lt;span class=&quot;mi&quot;&gt;96&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;00&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; 
&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mydrupal&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cache_page&lt;/span&gt;       &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;00&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;K&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;00&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;M&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;00&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;M&lt;/span&gt;   &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;00&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;M&lt;/span&gt;      &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;    &lt;span class=&quot;k&quot;&gt;NULL&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; 
&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mydrupal&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cache_views_data&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;00&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;K&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;00&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;M&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;00&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;M&lt;/span&gt;   &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;00&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;M&lt;/span&gt;      &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;    &lt;span class=&quot;k&quot;&gt;NULL&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; 
&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mydrupal&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cache_block&lt;/span&gt;      &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;00&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;K&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;00&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;M&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;00&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;M&lt;/span&gt;   &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;00&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;M&lt;/span&gt;      &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;    &lt;span class=&quot;k&quot;&gt;NULL&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; 
&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;---------------------------+-------+-------+---------+------------+---------+&lt;/span&gt;
&lt;span class=&quot;mi&quot;&gt;11&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;rows&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;set&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;00&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sec&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;So, well, here my example is a quite little website. Cache tables are small and not heavily used.
You would get bigger numbers on a big website.
But anyway, the real problem in term of performance here is not on the size of
caches or the size of the indexes, but on the number of read and write queries
running on theses tables.&lt;/p&gt;

&lt;p&gt;When the website will grow you will need to activate more internal caching,
maybe you will use good modules, which make their own cache tables and use them
&amp;amp; the existing ones to avoid recomputing all answers.
You may even use so much the cache that some queries on the website will be answered
by only requesting the cache table (aggressive cache mode with cache_page).&lt;/p&gt;

&lt;p&gt;Soon enough you will ask yourself &quot;Could I use some smarter solutions like Memcache for the cache storage?&quot;.&lt;/p&gt;

&lt;p&gt;And of course some existing modules could help you doing that.
The memcache module, for example.
And the &quot;cache router&quot; module applied some of the ideas we'll study later on this article.&lt;/p&gt;

&lt;p&gt;You may wonder why it is smart to use something which is not the database to perform the caching storage?&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;You could maybe avoid completely the database requests in aggressive mode&lt;/li&gt;
&lt;li&gt;Dedicated storage engine (cache engines) perform faster than a relational database both in write and read operations&lt;/li&gt;
&lt;li&gt;Reducing the number of requests made on MySQL is very important with Drupal, where a single page can be between 50 and 250 requests. With core modules only, adding Panels, some views and some other modules and you could grow up to 600 requests.&lt;/li&gt;
&lt;li&gt;data not managed in MySQl will never impact MySQL memory buffers management (smallest database will have more chances to avoid pagination)&lt;/li&gt;
&lt;li&gt;In some circumstances cache tables can get a lot of write operations and the query_cache for queries on theses tables will be wiped out frequently, which is bad for the query cache ratio and usage. But this is not always true, depends a lot on your Drupal cache usages&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;I said before cache engines can be faster in both write and read operations.
So now you may ask &quot;why don't we use Cache engines for everything?&quot;. And the answer is that a relational database provides more services, it can for example provides a better persitency,
or manage better simultaneous writes, or allow handling relationship between objects.
&lt;strong&gt;Use the right tool for the right thing&lt;/strong&gt;.
But this is still a good question. Drupal 8 studies &amp;amp; discussions are actually requesting whether a document based backend for most Drupal storage wouldn't be  more appropriate than a relational database.
For now we'll just have a look at the cache tables problems.&lt;/p&gt;

&lt;h3&gt;Cache backends with Drupal7&lt;/h3&gt;

&lt;p&gt;Now comes Drupal7. The cache management has been rewritten, using cache router and memcached ideas and try to put the things one step further in the core.
Cache bins are used, for example the bin &lt;strong&gt;'foo'&lt;/strong&gt; will use the cache table &lt;strong&gt;cache_foo&lt;/strong&gt;.
And &lt;strong&gt;for each bin you can specify which storage backend will be used&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Available cache backends are:&lt;/p&gt;
 * Database: the default one, like before
 * File (module filecache): a file-based storage which could be useful with fast disk storage (and a shared disk storage if you have several apache servers)
 * Apc (module apc): APC is not only an opcode (PHP code precompiler) it also  provides a local cache of shared memory. If you have several Apache servers you will have one APC cache per server, but it's not a big one, be careful (and part of the available memory space is occupied by the opcode). In case of full cache (overflow) the cache is completely wiped out, so do not use that for long persistency.
 * Memcache (module memcache): To use the well known memcached daemon. where you could use a basic mono-server setting or a complex multi-servers with replications usage&lt;/p&gt;

&lt;p&gt;But other backends could be written.
And you can already find two Redis backends implementations (&lt;strong&gt;Predis&lt;/strong&gt; &amp;amp; &lt;strong&gt;PhpRedis&lt;/strong&gt;) with the  &lt;a href=&quot;http://drupal.org/project/redis&quot;&gt;redis module&lt;/a&gt; (alpha).
Module maintained by &lt;strong&gt;pounard&lt;/strong&gt;, a Makina Corpus worker.
There is also a &lt;a href=&quot;http://drupal.org/project/mongodb&quot;&gt;MongoDB module&lt;/a&gt; providing a mongodb cache backend (beta2), that I did not test yet, powered by Damien Tournoud.&lt;/p&gt;

&lt;h3&gt;Having a drupal6? Or do you want some configuration details?&lt;/h3&gt;

&lt;p&gt;The only thing we need know is a documentation on how to configure these.
This is always (almost) provided in the module documentation but we will use the &lt;a href=&quot;http://drupal.org/project/cache_backport&quot;&gt;cache backport module&lt;/a&gt; documentation as an example.
This module, again maintained by  &lt;strong&gt;pounard&lt;/strong&gt;, is a backport of Drupal7 cache engine (separating  backends) for Drupal6.
So it's a replacement for Cache Router where you can reuse the cache parts of Drupal7 cache backends in a Drupal6 website.
And One of the good points of this module is that it provides a centralized documentation on several cache backends which is spread on the different modules for Drupal7.&lt;/p&gt;

&lt;p&gt;The first question is &quot;where should I put each separate cache bin (or each cache table for short) ?&quot;&lt;/p&gt;

&lt;p&gt;The &lt;strong&gt;cache&lt;/strong&gt; and &lt;strong&gt;cache_bootstrap&lt;/strong&gt; bins contains short and often used data.
They will love the APC cache backend.&lt;/p&gt;

&lt;p&gt;For all the others bins you could apply a different policy.
You may want to keep some bins in the database, but you should test the memcached/mongodb backend for most bins.
You could also try the filecache backend, with a modern linux kernel often used files will get mapped into memory buffers and you may get good results.&lt;/p&gt;

&lt;p&gt;There is no magic rules, the best tool will depend on your cache usage and on used modules.
MySQL is already working a lot, moving all caches outside of the  database will help MySQL.
But you will need to allow some memory (server?) for these new backends, maybe some of the memory given previously to MySQl or Apache.
Keep in mind that you should never make a server swap.&lt;/p&gt;

&lt;p&gt;Let's look at a complete configuration, for Drupal6 the cache backport module would require these lines:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;php&quot;&gt;&lt;span class=&quot;x&quot;&gt;  // Load the cache backport replacement for cache.inc:&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;  $conf[&amp;#39;cache_inc&amp;#39;] = &amp;#39;sites/all/modules/cache_backport/cache.inc&amp;#39;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;And now for Drupal7 or Drupal6 we would have (of course it depends of the bins available on your installation, check the table created in MySQL to see what bin are requested by the modules):&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;php&quot;&gt;&lt;span class=&quot;x&quot;&gt;  // Define cache engines:&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;  // Database : &amp;#39;DrupalDatabaseCache&amp;#39;&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;  $conf[&amp;#39;cache_backends&amp;#39;][] = &amp;#39;sites/all/modules/cache_backport/database.inc&amp;#39;;&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;  // FileCache : &amp;#39;DrupalFileCache&amp;#39;&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;  $conf[&amp;#39;cache_backends&amp;#39;][] = &amp;#39;sites/all/modules/filecache/filecache.inc&amp;#39;;&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;  // APC : &amp;#39;DrupalAPCCache&amp;#39;&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;  $conf[&amp;#39;cache_backends&amp;#39;][] = &amp;#39;sites/all/modules/apc/drupal_apc_cache.inc&amp;#39;;&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;  // Memcache from drupal 7 : &amp;#39;MemCacheDrupal&amp;#39;&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;  $conf[&amp;#39;cache_backends&amp;#39;][] = &amp;#39;sites/all/modules/memcache/memcache.inc&amp;#39;;&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;  &lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;  // Define cache bins, here&amp;#39;s the magic, deporting several cache on the&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;  // appropriate place depending on usage frequency, size, and others:&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;  // Please consider seriously doing brainstorming and benchmarking on your own&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;  // since this is only an example, and sites performance may vary depending&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;  // on modules and usage.&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;  // Cache name |  Usage/frequency/size&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;  // default    |  any/any/any          select memcache, apc, file or db&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;  $conf[&amp;#39;cache_default_class&amp;#39;]          = &amp;#39;DrupalDatabaseCache&amp;#39;;&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;  // WARNING: this one is &amp;#39;cache_class_cache&amp;#39; and not &amp;#39;cache_class_cache_cache&amp;#39;&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;  // general    |  all/every/medium     select memcache &amp;gt; file &amp;gt; apc &amp;gt; db&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;  $conf[&amp;#39;cache_class_cache&amp;#39;]            = &amp;#39;MemCacheDrupal&amp;#39;;&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;  // bootstrap  |  all/every/medium     select apc &amp;gt; db&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;  $conf[&amp;#39;cache_class_cache_bootstrap&amp;#39;]  = &amp;#39;DrupalAPCCache&amp;#39;;&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;  // block      |  any/often/small      select memcache &amp;gt; db &amp;gt; file&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;  $conf[&amp;#39;cache_class_cache_block&amp;#39;]      = &amp;#39;MemCacheDrupal&amp;#39;;&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;  // field      |  page/some/large      select file &amp;gt; memcache &amp;gt; db&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;  $conf[&amp;#39;cache_class_cache_content&amp;#39;]    = &amp;#39;DrupalFileCache&amp;#39;;&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;  // filter     |  page/some/large      select file &amp;gt; memcache &amp;gt; db&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;  $conf[&amp;#39;cache_class_cache_filter&amp;#39;]     = &amp;#39;DrupalFileCache&amp;#39;;&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;  // form       |  edit/rare/medium     select file &amp;gt; memcache &amp;gt; db&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;  $conf[&amp;#39;cache_class_cache_form&amp;#39;]       = &amp;#39;DrupalFileCache&amp;#39;;&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;  // menu       |  any/often/large      select memcache &amp;gt; db &amp;gt; file&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;  $conf[&amp;#39;cache_class_cache_menu&amp;#39;]       = &amp;#39;MemCacheDrupal&amp;#39;;&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;  // page       |  page/often/large     select memcache &amp;gt; file &amp;gt; db&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;  $conf[&amp;#39;cache_class_cache_page&amp;#39;]       = &amp;#39;MemCacheDrupal&amp;#39;;&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;  // pathdst    |  any/some/medium      select memcache &amp;gt; db &amp;gt; file&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;  $conf[&amp;#39;cache_class_cache_pathdst&amp;#39;]    = &amp;#39;MemCacheDrupal&amp;#39;;&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;  // pathsrc    |  any/some/medium      select memcache &amp;gt; db &amp;gt; file&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;  $conf[&amp;#39;cache_class_cache_pathsrc&amp;#39;]    = &amp;#39;MemCacheDrupal&amp;#39;;&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;  // multiprice |  any/often/medium     select memcache &amp;gt; db &amp;gt; file&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;  $conf[&amp;#39;cache_class_cache_uc_price&amp;#39;]   = &amp;#39;MemCacheDrupal&amp;#39;;&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;  // update     |  system/rare/large,   select file &amp;gt; db&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;  $conf[&amp;#39;cache_class_cache_update&amp;#39;]     = &amp;#39;DrupalFileCache&amp;#39;;&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;  // users      |  any/some/large       select memcache &amp;gt; file &amp;gt; db&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;  $conf[&amp;#39;cache_class_cache_users&amp;#39;]      = &amp;#39;MemCacheDrupal&amp;#39;;&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;  // views      |  any/some/large       select memcache &amp;gt; file &amp;gt; db&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;  $conf[&amp;#39;cache_class_cache_views&amp;#39;]      = &amp;#39;MemCacheDrupal&amp;#39;;&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;  // views data |  any/often/small      select apc &amp;gt; db&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;  $conf[&amp;#39;cache_class_cache_views_data&amp;#39;] = &amp;#39;DrupalAPCCache&amp;#39;;&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;  &lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;  // Define File Cache settings:&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;  // See README.TXT in FileCache directory for configuration details.&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;  $conf[&amp;#39;filecache_fast_pagecache&amp;#39;] = TRUE; // set TRUE to enable fast page serving&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;  // you will need to define your $conf[&amp;#39;file_directory_temp&amp;#39;] = &amp;#39;/something/tmp&amp;#39;;&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;  // before using this line. Put the directory in a place where drupal can write&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;  // (tmp, or files subdirectory) but that is not available via direct web&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;  // access, default Drupal conf protects .ht* directories, so default name is&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;  // .ht.filecache in the files directory if you provide no value for this setting&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;  $conf[&amp;#39;filecache_directory&amp;#39;] = $conf[&amp;#39;file_directory_temp&amp;#39;] . DIRECTORY_SEPARATOR . &amp;#39;filecache&amp;#39;;&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;  &lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;  // Define APC settings.&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;  $conf[&amp;#39;apc_show_debug&amp;#39;] = FALSE; // set TRUE to enable debug mode&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;  // TODO In order to use multiple Drupal instance on the same physical box,&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;  // each site settings.php file should provide a bin name prefix for APC and&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;  // most other bin. Currently APC is managing it internally with request&amp;#39;s&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;  // $_SERVER[&amp;#39;PHP_HOST&amp;#39;]. &lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;  &lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;  // Define Memcache settings.&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;  /* in case you use php-memcached and not php-memcache (for this one use php.ini settings)&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;  $conf[&amp;#39;memcache_options&amp;#39;] = array(&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;    Memcached::OPT_BINARY_PROTOCOL =&amp;gt; FALSE, // set TRUE to enable binary protocol when using memcached &amp;gt;= 1.4&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;    Memcached::OPT_COMPRESSION =&amp;gt; FALSE, // set FALSE to disable compression for improved performance&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;    Memcached::OPT_DISTRIBUTION =&amp;gt; Memcached::DISTRIBUTION_CONSISTENT, // set consistent distribution&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;    Memcached::OPT_HASH =&amp;gt; Memcached::HASH_CRC, // set CRC32 hash method&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;    Memcached::OPT_CONNECT_TIMEOUT =&amp;gt; 1000, // connection timeout in milliseconds&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;    Memcached::OPT_SERVER_FAILURE_LIMIT =&amp;gt; 5, // failure limit for server connection attempts&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;  );*/&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;  // This is not necessary if you have only 1 memcached server on default port&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;  // (11211) but could be used to map &amp;amp; replicate bins between several servers&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;  // (see memcached module documentation).&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;  $conf[&amp;#39;memcache_servers&amp;#39;] = array(&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;    &amp;#39;127.0.0.1:11211&amp;#39; =&amp;gt; &amp;#39;default&amp;#39;,&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;  );&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;  // comment cache bins not used with memcached&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;  $conf[&amp;#39;memcache_bins&amp;#39;] = array(&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;    &amp;#39;cache&amp;#39;            =&amp;gt; &amp;#39;default&amp;#39;,&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;    //&amp;#39;cache_bootstrap&amp;#39;  =&amp;gt; &amp;#39;default&amp;#39;,&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;    &amp;#39;cache_block&amp;#39;      =&amp;gt; &amp;#39;default&amp;#39;,&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;    //&amp;#39;cache_content&amp;#39;    =&amp;gt; &amp;#39;default&amp;#39;,&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;    //&amp;#39;cache_filter&amp;#39;     =&amp;gt; &amp;#39;default&amp;#39;,&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;    //&amp;#39;cache_form&amp;#39;       =&amp;gt; &amp;#39;default&amp;#39;,&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;    &amp;#39;cache_menu&amp;#39;       =&amp;gt; &amp;#39;default&amp;#39;,&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;    &amp;#39;cache_page&amp;#39;       =&amp;gt; &amp;#39;default&amp;#39;,&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;    &amp;#39;cache_pathdst&amp;#39;    =&amp;gt; &amp;#39;default&amp;#39;,&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;    &amp;#39;cache_pathsrc&amp;#39;    =&amp;gt; &amp;#39;default&amp;#39;,&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;    &amp;#39;cache_uc_price&amp;#39;   =&amp;gt; &amp;#39;default&amp;#39;,&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;    //&amp;#39;cache_update&amp;#39;     =&amp;gt; &amp;#39;default&amp;#39;,&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;    &amp;#39;cache_users&amp;#39;      =&amp;gt; &amp;#39;default&amp;#39;,&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;    &amp;#39;cache_views&amp;#39;      =&amp;gt; &amp;#39;default&amp;#39;,&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;    //&amp;#39;cache_views_data&amp;#39; =&amp;gt; &amp;#39;default&amp;#39;,    &lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;  );&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;  &lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;  // Define Drupal cache settings:&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;  // Inactivate database connection if the cache backend doesn&amp;#39;t need it (for&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;  // cache_page bin only). If the page is not cached the db connection will be&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;  // made later.&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;  $conf[&amp;#39;page_cache_without_database&amp;#39;] = TRUE;&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;  // Avoid executing very early hooks in case of page cached (like hook_boot).&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;  $conf[&amp;#39;page_cache_invoke_hooks&amp;#39;]     = TRUE;&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;  // Cached page lifetime.&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;  $conf[&amp;#39;page_cache_maximum_age&amp;#39;]      = 3600;&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;  // Default lifetime for all cache entries (except form and page), if no&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;  // lifetime is specified by the module.&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;  $conf[&amp;#39;cache_lifetime&amp;#39;]              = 0;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;And the sessions?&lt;/h3&gt;

&lt;p&gt;We've just been removing write and read requests from MySQL.
But if you're tracking the request &amp;amp; locks usage in MySQL you will see that the main problem  is not really the cache backends, it's the session managmenent.
Session Management in MySQL implies a very huge number of write operations in the session table.
This single table is used in a very special way, no other table in the database is used with such read/write/delete ratio.
So by definition it's quite hard to perform some fine tunning on the MySQL server if this table is not removed.
To be honest statistics tracking can also make a lot of write requests,  but this is yet another problem&lt;/p&gt;

&lt;p&gt;The Cache Backend management is not responsible of the session storage (at least  by default).
Memcache module is providing a tool for that, Cache Router module  was announcing it as well.
But The use of a new Module called &lt;a href=&quot;http://drupal.org/sandbox/pounard/1263216&quot;&gt;Session Proxy&lt;/a&gt; should be the definitive solution,
allowing usage of a cache backend or usage of PHP native sessions (which can be set to memcache, mongodb, redis, etc.).
Today it's still a sandboxed  module, no official release. available only with Drupal7.&lt;/p&gt;

&lt;p&gt;More on this module when released (like how to manage session locks, how to configure the cache backend for sessions, etc).&lt;/p&gt;

&lt;p&gt;We could also talk about the lock API in Drupal (lock.inc), with a default implementation using MySQL.
Some modules provides lock alternatives which are faster (like the Redis module)...&lt;/p&gt;
</description>
				<published>2011-10-03 00:00:00 +0200</published>
				<link>http://regilero.github.io//Drupal/English/2011/10/03/separate_cache_backends_d6_and_d7/</link>
			</item>
		
			<item>
				<title>Nice Webapps and tools using canvas</title>
				<description>&lt;p&gt;Doing some research on HTML5/Canvas usage I found theses tools on the web:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://pencil.evolus.vn/en-US/Home.aspx&quot;&gt;Pencil Project&lt;/a&gt;: graphic editor, nice replacement for dia&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.websequencediagrams.com/&quot;&gt;Web Sequence Diagrams&lt;/a&gt;: simple and useful UML sequence diagrams tool, I also like the &lt;a href=&quot;http://zwibbler.com/&quot;&gt;Human Drawing editor&lt;/a&gt; from the same author, nice code.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://typeface.neocracy.org/&quot;&gt;Typeface&lt;/a&gt; , &lt;a href=&quot;http://cufon.shoqolate.com&quot;&gt;Cufon&lt;/a&gt;, &lt;a href=&quot;http://www.netzgesta.de/dev/text/&quot;&gt;StrokeText&lt;/a&gt;: 3 libraries used to add embeded font support on a page (and for other js usage).&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.benjoffe.com/code/all&quot;&gt;demos there&lt;/a&gt;, I especially like the '3D walker'&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://code.google.com/p/iecanvas/&quot;&gt;http://code.google.com/p/iecanvas/&lt;/a&gt;, &lt;a href=&quot;http://code.google.com/p/explorercanvas/&quot;&gt;http://code.google.com/p/explorercanvas/&lt;/a&gt; some libs to try adding canvas support in IE&lt;/li&gt;
&lt;/ul&gt;

</description>
				<published>2010-08-16 00:00:00 +0200</published>
				<link>http://regilero.github.io//Js/English/2010/08/16/nice_webapps_and_tools_using_canvas/</link>
			</item>
		
			<item>
				<title>More on Static file redirector</title>
				<description>&lt;p&gt;So On &lt;a href=&quot;/Apache/English/2009/11/05/use_rewrite_map_to_prevent_proxying_for_some_static_contents/&quot;&gt;a previous blog entry&lt;/a&gt;
I presented the basics for a rewriteRule settings to serve some targeted plone static files directly from apache and
without proxying to Plone.&lt;/p&gt;

&lt;p&gt;This article, in short introduce apache as a proxy for most pages but as a direct file server for static ressources,
having a map of application url to filesystem real files stored in a text file and served via RewriteMap.&lt;/p&gt;

&lt;p&gt;No let's make this solution even better.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;use a &lt;strong&gt;hash map&lt;/strong&gt; for url mappings&lt;/li&gt;
&lt;li&gt;create a virtual &lt;code&gt;/static&lt;/code&gt; url and apply some cache managment rules on his contents&lt;/li&gt;
&lt;li&gt;allow the use of the &lt;code&gt;/satic/&lt;/code&gt; url directly&lt;/li&gt;
&lt;li&gt;ensure only mapped static files are served via this static directory&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;So first thing to change, we used a simple text file for the mapping, mod_rewrite allows us to use a &lt;strong&gt;hash file&lt;/strong&gt;.&lt;br/&gt;
Simply change:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;apache&quot;&gt;&lt;span class=&quot;nb&quot;&gt;RewriteMap&lt;/span&gt; statics txt:/var/www/proxyplone/etc/staticplonefiles.txt
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;by:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;apache&quot;&gt;&lt;span class=&quot;c&quot;&gt;# RewriteMap statics txt:/var/www/proxyplone//etc/staticplonefiles.txt&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# to generate hash version of previous file use (do not forget the rm):&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# rm /var/www/proxyplone//etc/staticplonefiles.map; &lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# httxt2dbm -i /var/www/proxyplone/etc/staticplonefiles.txt -o /var/www/proxyplone/etc/staticplonefiles.map&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;RewriteMap&lt;/span&gt; statics dbm:/var/www/proxyplone/etc/staticplonefiles.map
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;And to generate the .map file simply read the comments. &lt;br/&gt;
One important point, if you do not remove the old map before generating the new one,
old entries are still in the .map, to see it without too much garbage use :&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;apache&quot;&gt;&lt;span class=&quot;nb&quot;&gt;strings&lt;/span&gt; &lt;span class=&quot;sx&quot;&gt;/var/www/proxyplone/etc/staticplonefiles.map&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Ok, so now let's look the current RewriteRule,
for matched elements the rewrite is done and the file is directly served.
We would like to add some apache settings to theses files,
the solution is to add the &lt;code&gt;[PT]&lt;/code&gt; (pass-through) option to the rewrite rule.&lt;br/&gt;
Then Apache will continue to analyse the resulting url as if it were an original
requested url. &lt;br/&gt;
That mean the proxy settings for example will be applied on it.&lt;br/&gt;
So we will as well add a &lt;code&gt;/satic&lt;/code&gt; on the resulting url and prevent &lt;code&gt;/static&lt;/code&gt; to be served by the Proxy.&lt;br/&gt;
The rewriteRule is now:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;apache&quot;&gt;&lt;span class=&quot;nb&quot;&gt;RewriteRule&lt;/span&gt; ^/(.*\.(ico|png|gif|jpg|jpeg|bmp|css|js)) &lt;span class=&quot;sx&quot;&gt;/static/&lt;/span&gt;${statics:$1} [NC,L,handler=default-handler,PT]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;And we add this ProxyPass exception:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;apache&quot;&gt;&lt;span class=&quot;nb&quot;&gt;ProxyPass&lt;/span&gt;       &lt;span class=&quot;sx&quot;&gt;/static&lt;/span&gt;  !
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;We now have a virtual &lt;code&gt;/static&lt;/code&gt; directory with all theses mapped contents inside.
We can use it to getBack the original DocumentRoot,
and to use an alias to point &lt;code&gt;/static&lt;/code&gt; to our webapp sources (here &lt;code&gt;/opt/plone/source&lt;/code&gt;).
And then we can add Expires settings from mod_expires on this &lt;code&gt;/static&lt;/code&gt; location... &lt;br/&gt;
well in fact mod_expires requires a Directory directive so it will be on the &lt;code&gt;/opt/plone/source&lt;/code&gt; directory.&lt;/p&gt;

&lt;p&gt;Reset DocumentRoot:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;apache&quot;&gt;&lt;span class=&quot;nb&quot;&gt;DocumentRoot&lt;/span&gt; &lt;span class=&quot;sx&quot;&gt;/var/www/proxyplone/htdocs&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Remove this line:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;apache&quot;&gt;&lt;span class=&quot;nb&quot;&gt;Alias&lt;/span&gt; / &lt;span class=&quot;sx&quot;&gt;/opt/plone/source/&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;And add theses settings:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;apache&quot;&gt;&lt;span class=&quot;nb&quot;&gt;Alias&lt;/span&gt; &lt;span class=&quot;sx&quot;&gt;/static&lt;/span&gt; &lt;span class=&quot;sx&quot;&gt;/opt/plone/source/&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;Location&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;/static&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nb&quot;&gt;Options&lt;/span&gt; FollowSymLinks
    &lt;span class=&quot;nb&quot;&gt;Order&lt;/span&gt; deny,allow
    &lt;span class=&quot;nb&quot;&gt;Allow&lt;/span&gt; from &lt;span class=&quot;k&quot;&gt;all&lt;/span&gt;
    &lt;span class=&quot;nb&quot;&gt;DirectoryIndex&lt;/span&gt; index.html
    &lt;span class=&quot;c&quot;&gt;# avoid execution of PHP  scripts&lt;/span&gt;
    &lt;span class=&quot;nb&quot;&gt;AddType&lt;/span&gt; text/plain .php
    &lt;span class=&quot;nb&quot;&gt;AddType&lt;/span&gt; text/plain .php3
    &lt;span class=&quot;nb&quot;&gt;AddType&lt;/span&gt; text/plain .phps
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/Location&amp;gt;&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# adding some cache handling for static files&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;Directory&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;/opt/plone/source&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nb&quot;&gt;order&lt;/span&gt; allow,deny
    &lt;span class=&quot;nb&quot;&gt;allow&lt;/span&gt; from &lt;span class=&quot;k&quot;&gt;all&lt;/span&gt;
    &lt;span class=&quot;nb&quot;&gt;ExpiresActive&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;On&lt;/span&gt;
    &lt;span class=&quot;nb&quot;&gt;ExpiresDefault&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;access plus 1 month&amp;quot;&lt;/span&gt;
    &lt;span class=&quot;nb&quot;&gt;ExpiresByType&lt;/span&gt; text/css &lt;span class=&quot;s2&quot;&gt;&amp;quot;access plus 1 day&amp;quot;&lt;/span&gt;
    &lt;span class=&quot;nb&quot;&gt;ExpiresByType&lt;/span&gt; text/javascript &lt;span class=&quot;s2&quot;&gt;&amp;quot;access plus 1 day&amp;quot;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/Directory&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;That's done. &lt;strong&gt;Now we have a big security Hole :-(&lt;/strong&gt;.&lt;br/&gt;
Most files from &lt;code&gt;/opt/plone/source&lt;/code&gt; are available via the &lt;code&gt;/static&lt;/code&gt; url. &lt;br/&gt;
As &lt;code&gt;/static&lt;/code&gt; is not proxied anymore and is now an alias on the filesystem directory where we have an allow from all ...&lt;br/&gt;
So we should add some rewriteRules to check which files are allowed via direct access on static.
And by default it should be *none&lt;strong&gt;.
But that's sad, it would be nice to promote good behaviour for theses wtf programmers which aren't admins,
we should let them use &lt;code&gt;/static&lt;/code&gt; urls for files known to be static.
And maybe one day they'll think it's a good idea to make the distinction between known static files and dynamic content... &lt;br/&gt;
So we'll ask developpers to add some entries in the &lt;/strong&gt;staticplonefiles.txt** making a mapping from static/files to real files this way (see, every entry is present 2 times):&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;apache&quot;&gt;&lt;span class=&quot;c&quot;&gt;# staticplonefiles.txt&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# url =&amp;gt; real filesystem file, from an arbitray root&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;zonea/images/clean&lt;/span&gt;.&lt;span class=&quot;nb&quot;&gt;png&lt;/span&gt; foo/bar/img/clean.png
&lt;span class=&quot;err&quot;&gt;/static/foo/bar/img/clean&lt;/span&gt;.&lt;span class=&quot;nb&quot;&gt;png&lt;/span&gt; foo/bar/img/clean.png
&lt;span class=&quot;err&quot;&gt;zonea/images/logo&lt;/span&gt;.&lt;span class=&quot;nb&quot;&gt;jpg&lt;/span&gt; foo/src/module/foo/images/logo.png
&lt;span class=&quot;err&quot;&gt;/static/foo/src/module/foo/images/logo&lt;/span&gt;.&lt;span class=&quot;nb&quot;&gt;png&lt;/span&gt; foo/src/module/foo/images/logo.png
&lt;span class=&quot;err&quot;&gt;/module/bar/images/people&lt;/span&gt;.&lt;span class=&quot;nb&quot;&gt;png&lt;/span&gt; foo/src/module/bar/v1.2.5-5/images/people.png
&lt;span class=&quot;err&quot;&gt;/static/foo/src/module/bar/v1&lt;/span&gt;.&lt;span class=&quot;err&quot;&gt;2&lt;/span&gt;.&lt;span class=&quot;err&quot;&gt;5-5/images/people&lt;/span&gt;.&lt;span class=&quot;nb&quot;&gt;png&lt;/span&gt; foo/src/module/bar/v1.2.5-5/images/people.png
&lt;span class=&quot;c&quot;&gt;# ... to be continued&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;And now our 3 static examples are available as well with the /static url. Well in fact do not forget to add this rule:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;apache&quot;&gt;&lt;span class=&quot;c&quot;&gt;# Security for uri containing our /static shortcut we should check only&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# listed files from rewritemap are served, as&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# in this current case the static directory contins as well&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# some unsecure files... yep.&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;RewriteCond&lt;/span&gt; %{REQUEST_URI} ^/static/ [NC]
&lt;span class=&quot;nb&quot;&gt;RewriteCond&lt;/span&gt; ${statics:$1} =&lt;span class=&quot;s2&quot;&gt;&amp;quot;&amp;quot;&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# F : force forbidden 403 response&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;RewriteRule&lt;/span&gt; ^(.*)$ - [F,L]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;This will check that all directly accessed files via &lt;code&gt;/static&lt;/code&gt; are present in our mapping.
And it's all done.
Like for the previous post you should really activate &lt;code&gt;RewriteLog&lt;/code&gt; and look at what he does
for several different files, but now you should as well adjust Apache logLevel for this
VirtualHost and check the errorLog to observe what is done After the rewrite.&lt;/p&gt;

&lt;p&gt;As an example of debug here are some debug outputs for:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;a matched image&lt;/li&gt;
&lt;/ul&gt;


&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;apache&quot;&gt;&lt;span class=&quot;err&quot;&gt;(2)&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;init&lt;/span&gt; rewrite engine with requested uri &lt;span class=&quot;sx&quot;&gt;/images/people.png&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;(3)&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;applying&lt;/span&gt; pattern &amp;#39;^/(.*\.(ico|png|gif|jpg|jpeg|bmp|css|js))&amp;#39; to uri &amp;#39;/images/people.png&amp;#39;
&lt;span class=&quot;err&quot;&gt;(6)&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;cache&lt;/span&gt; lookup FAILED, forcing new map lookup
&lt;span class=&quot;err&quot;&gt;(5)&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;map&lt;/span&gt; lookup OK: map=statics[dbm] key=images/people.png -&amp;gt; val=test/img/clean.png
&lt;span class=&quot;err&quot;&gt;(4)&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;RewriteCond:&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;input=&amp;#39;test/img/clean&lt;/span&gt;.&lt;span class=&quot;err&quot;&gt;png&amp;#39;&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;pattern=&amp;#39;!=&amp;#39;&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;matched&lt;/span&gt;
(5) cache lookup OK: map=statics[dbm] key=images/people.png -&amp;gt; val=test/img/clean.png
&lt;span class=&quot;err&quot;&gt;(2)&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;rewrite&lt;/span&gt; &amp;#39;/images/people.png&amp;#39; -&amp;gt; &amp;#39;/static/test/img/clean.png&amp;#39;
&lt;span class=&quot;err&quot;&gt;(2)&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;remember&lt;/span&gt; &lt;span class=&quot;sx&quot;&gt;/static/test/img/clean.png&lt;/span&gt; to have Content-handler &amp;#39;default-handler&amp;#39;
&lt;span class=&quot;err&quot;&gt;(2)&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;forcing&lt;/span&gt; &amp;#39;/static/test/img/clean.png&amp;#39; to get passed through to next API URI-to-filename handler
&lt;span class=&quot;err&quot;&gt;(1)&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;force&lt;/span&gt; filename &lt;span class=&quot;sx&quot;&gt;/tmp/htdocs/test/img/clean.png&lt;/span&gt; to have the Content-handler &amp;#39;default-handler&amp;#39;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;index.php which wont be proxified after&lt;/li&gt;
&lt;/ul&gt;


&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;apache&quot;&gt;&lt;span class=&quot;err&quot;&gt;(2)&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;init&lt;/span&gt; rewrite engine with requested uri &lt;span class=&quot;sx&quot;&gt;/index.php&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;(3)&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;applying&lt;/span&gt; pattern &amp;#39;^/(.*\.(ico|png|gif|jpg|jpeg|bmp|css|js))&amp;#39; to uri &amp;#39;/index.php&amp;#39;
&lt;span class=&quot;err&quot;&gt;(3)&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;applying&lt;/span&gt; pattern &amp;#39;^(.*)$&amp;#39; to uri &amp;#39;/index.php&amp;#39;
&lt;span class=&quot;err&quot;&gt;(4)&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;RewriteCond:&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;input=&amp;#39;/index&lt;/span&gt;.&lt;span class=&quot;err&quot;&gt;php&amp;#39;&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;pattern=&amp;#39;^/static/&amp;#39;&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;[NC]&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;not-&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;matched&lt;/span&gt;
(1) pass through &lt;span class=&quot;sx&quot;&gt;/index.php&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;the / base uri, which will be proxified&lt;/li&gt;
&lt;/ul&gt;


&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;apache&quot;&gt;&lt;span class=&quot;err&quot;&gt;(2)&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;init&lt;/span&gt; rewrite engine with requested uri /
&lt;span class=&quot;err&quot;&gt;(3)&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;applying&lt;/span&gt; pattern &amp;#39;^/(.*\.(ico|png|gif|jpg|jpeg|bmp|css|js))&amp;#39; to uri &amp;#39;/&amp;#39;
&lt;span class=&quot;err&quot;&gt;(3)&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;applying&lt;/span&gt; pattern &amp;#39;^(.*)$&amp;#39; to uri &amp;#39;/&amp;#39;
&lt;span class=&quot;err&quot;&gt;(4)&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;RewriteCond:&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;input=&amp;#39;/&amp;#39;&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;pattern=&amp;#39;^/static/&amp;#39;&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;[NC]&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;not-&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;matched&lt;/span&gt;
(1) pass through /
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;an unmapped image&lt;/li&gt;
&lt;/ul&gt;


&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;apache&quot;&gt;&lt;span class=&quot;err&quot;&gt;(2)&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;init&lt;/span&gt; rewrite engine with requested uri &lt;span class=&quot;sx&quot;&gt;/images/crystal/32/personal.png&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;(3)&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;applying&lt;/span&gt; pattern &amp;#39;^/(.*\.(ico|png|gif|jpg|jpeg|bmp|css|js))&amp;#39; to uri &amp;#39;/images/crystal/32/personal.png&amp;#39;
&lt;span class=&quot;err&quot;&gt;(6)&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;cache&lt;/span&gt; lookup FAILED, forcing new map lookup
&lt;span class=&quot;err&quot;&gt;(5)&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;map&lt;/span&gt; lookup FAILED: map=statics[dbm] key=images/crystal/32/personal.png
&lt;span class=&quot;err&quot;&gt;(4)&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;RewriteCond:&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;input=&amp;#39;&amp;#39;&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;pattern=&amp;#39;!=&amp;#39;&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;not-&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;matched&lt;/span&gt;
(3) applying pattern &amp;#39;^(.*)$&amp;#39; to uri &amp;#39;/images/crystal/32/personal.png&amp;#39;
&lt;span class=&quot;err&quot;&gt;(4)&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;RewriteCond:&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;input=&amp;#39;/images/crystal/32/personal&lt;/span&gt;.&lt;span class=&quot;err&quot;&gt;png&amp;#39;&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;pattern=&amp;#39;^/static/&amp;#39;&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;[NC]&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;not-&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;matched&lt;/span&gt;
(1) pass through &lt;span class=&quot;sx&quot;&gt;/images/crystal/32/personal.png&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;a direct access via /static for a forbidden file&lt;/li&gt;
&lt;/ul&gt;


&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;apache&quot;&gt;&lt;span class=&quot;err&quot;&gt;(2)&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;init&lt;/span&gt; rewrite engine with requested uri &lt;span class=&quot;sx&quot;&gt;/static/config/config.ini&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;(3)&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;applying&lt;/span&gt; pattern &amp;#39;^/(.*\.(ico|png|gif|jpg|jpeg|bmp|css|js))&amp;#39; to uri &amp;#39;/static/config/config.ini&amp;#39;
&lt;span class=&quot;err&quot;&gt;(3)&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;applying&lt;/span&gt; pattern &amp;#39;^(.*)$&amp;#39; to uri &amp;#39;/static/config/config.ini&amp;#39;
&lt;span class=&quot;err&quot;&gt;(4)&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;RewriteCond:&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;input=&amp;#39;/static/config/config&lt;/span&gt;.&lt;span class=&quot;err&quot;&gt;ini&amp;#39;&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;pattern=&amp;#39;^/static/&amp;#39;&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;[NC]&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;matched&lt;/span&gt;
(6) cache lookup FAILED, forcing new map lookup
&lt;span class=&quot;err&quot;&gt;(5)&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;map&lt;/span&gt; lookup FAILED: map=statics[dbm] key=/static/config/config.ini
&lt;span class=&quot;err&quot;&gt;(4)&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;RewriteCond:&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;input=&amp;#39;&amp;#39;&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;pattern=&amp;#39;=&amp;#39;&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;matched&lt;/span&gt;
(2) forcing responsecode &lt;span class=&quot;m&quot;&gt;403&lt;/span&gt; for &lt;span class=&quot;sx&quot;&gt;/static/config/config.ini&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Quite readable isn't it? But &lt;strong&gt;do not forget to remove debug&lt;/strong&gt; for production env.&lt;/p&gt;
</description>
				<published>2009-11-06 00:00:00 +0100</published>
				<link>http://regilero.github.io//Apache/English/2009/11/06/more_on_static_file_redirector/</link>
			</item>
		
			<item>
				<title>Use RewriteMap to prevent proxying for some static contents</title>
				<description>&lt;p&gt;Let's say we would like to prevent an application server to serve static content.
And let's take a complex example, &lt;strong&gt;Plone&lt;/strong&gt;.
Plone is a Zope based application server and is not using a clean url-map for static contents.&lt;/p&gt;

&lt;p&gt;We'll take Plone as an example but it's not the only app which is not handling static files outside general uri-application-mapping.
With url prefixed by a &lt;code&gt;/static/&lt;/code&gt; it would be quite easy to redirect apache handler for theses urls on the default-handler
(static content handler) and prevent proxy settings from redirecting theses requests to the application server he is proxying
(as in our case this app server is behind an Apache httpd proxy).&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;apache&quot;&gt;    &lt;span class=&quot;err&quot;&gt;Apache-&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;HTTPD&lt;/span&gt;
    /            \
&lt;span class=&quot;nb&quot;&gt;filesystem&lt;/span&gt;       proxied webapp
&lt;span class=&quot;err&quot;&gt;static-&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;files&lt;/span&gt;     dynamic-pages
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;So lets say we know something like 100 or 150 files which are css files,
some js and somes images which are actually served by this plone server,
on a lot of different url &lt;code&gt;/foo/bar/toto.png&lt;/code&gt;, &lt;code&gt;/foobar/main.css&lt;/code&gt; which
represents some directories where we do not have only static contents.
And we want to prevent the webapp from handling theses known files.&lt;/p&gt;

&lt;p&gt;Here's a nice solution based on &lt;strong&gt;mod_rewrite&lt;/strong&gt;, and especially
&lt;a href=&quot;http://httpd.apache.org/docs/current/rewrite/rewritemap.html&quot;&gt;rewriteMap&lt;/a&gt;,
where all theses contents will be served by Apache directly from the filesystem,
with some content-expiration settings and without openning back-doors to neighbour
content which should certainly not be available statically
(like for example python source code files).&lt;br/&gt;
So first let's have a basic plone proxy setting for an apache Virtualhost,
we serve &lt;code&gt;plone.from.outside.net&lt;/code&gt; which is a proxy on &lt;code&gt;plone.inside.lan&lt;/code&gt;.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;apache&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;VirtualHost&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;*:80&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nb&quot;&gt;ServerName&lt;/span&gt;  plone.from.outside.net

    &lt;span class=&quot;c&quot;&gt;# in case apache is not set in utf-8&lt;/span&gt;
    &lt;span class=&quot;nb&quot;&gt;AddDefaultCharset&lt;/span&gt; UTF-8

    &lt;span class=&quot;nb&quot;&gt;DocumentRoot&lt;/span&gt; &lt;span class=&quot;sx&quot;&gt;/var/www/proxyplone/htdocs&lt;/span&gt;

    &lt;span class=&quot;nb&quot;&gt;LogLevel&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;info&lt;/span&gt;
    &lt;span class=&quot;c&quot;&gt;#LogLevel debug&lt;/span&gt;
    &lt;span class=&quot;nb&quot;&gt;ErrorLog&lt;/span&gt; &lt;span class=&quot;sx&quot;&gt;/var/www/proxyplone/var/log/error.log&lt;/span&gt;
    &lt;span class=&quot;nb&quot;&gt;CustomLog&lt;/span&gt; &lt;span class=&quot;sx&quot;&gt;/var/www/proxyplone/var/log/access.log&lt;/span&gt; combined
    &lt;span class=&quot;c&quot;&gt;## uncomment below to enter maintenance mode&lt;/span&gt;
    &lt;span class=&quot;c&quot;&gt;#ErrorDocument 503 /htdocs/err/503.html&lt;/span&gt;
    &lt;span class=&quot;c&quot;&gt;#RedirectMatch 503 ^/(?!err/)&lt;/span&gt;

    &lt;span class=&quot;nt&quot;&gt;&amp;lt;IfModule&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;mod_proxy.c&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;c&quot;&gt;#&lt;/span&gt;
            &lt;span class=&quot;c&quot;&gt;# No open proxy&lt;/span&gt;
            &lt;span class=&quot;nb&quot;&gt;ProxyRequests&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;off&lt;/span&gt;
            &lt;span class=&quot;nt&quot;&gt;&amp;lt;Proxy&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
                    &lt;span class=&quot;nb&quot;&gt;Order&lt;/span&gt; allow,deny
                    &lt;span class=&quot;nb&quot;&gt;Allow&lt;/span&gt; from &lt;span class=&quot;k&quot;&gt;all&lt;/span&gt;
            &lt;span class=&quot;nt&quot;&gt;&amp;lt;/Proxy&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;nb&quot;&gt;ProxyTimeout&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1200&lt;/span&gt;
            &lt;span class=&quot;c&quot;&gt;#exceptions, do not proxy theses ones&lt;/span&gt;
            &lt;span class=&quot;nb&quot;&gt;ProxyPass&lt;/span&gt;       &lt;span class=&quot;sx&quot;&gt;/server-status&lt;/span&gt;  !
            &lt;span class=&quot;nb&quot;&gt;ProxyPass&lt;/span&gt;       &lt;span class=&quot;sx&quot;&gt;/index.php&lt;/span&gt; !
            &lt;span class=&quot;nb&quot;&gt;ProxyPass&lt;/span&gt;       &lt;span class=&quot;sx&quot;&gt;/err/&lt;/span&gt; !
            &lt;span class=&quot;c&quot;&gt;#Proxy rewriting&lt;/span&gt;
            &lt;span class=&quot;nb&quot;&gt;ProxyPass&lt;/span&gt;       /       &amp;lt;a href=&lt;span class=&quot;s2&quot;&gt;&amp;quot;http://plone.inside.lan/here/be/dragons/like/virtualhostmonster/settings/&amp;quot;&lt;/span&gt; title=&lt;span class=&quot;s2&quot;&gt;&amp;quot;http://plone.inside.lan/here/be/dragons/like/virtualhostmonster/settings/&amp;quot;&lt;/span&gt;&amp;gt;http://plone.inside.lan/here/be/dragons/like/virtualhostmonster/settings/&amp;lt;/a&amp;gt;
            &lt;span class=&quot;nb&quot;&gt;ProxyPassReverse&lt;/span&gt; /      &amp;lt;a href=&lt;span class=&quot;s2&quot;&gt;&amp;quot;http://plone.inside.lan/here/be/dragons/like/virtualhostmonster/settings/&amp;quot;&lt;/span&gt; title=&lt;span class=&quot;s2&quot;&gt;&amp;quot;http://plone.inside.lan/here/be/dragons/like/virtualhostmonster/settings/&amp;quot;&lt;/span&gt;&amp;gt;http://plone.inside.lan/here/be/dragons/like/virtualhostmonster/settings/&amp;lt;/a&amp;gt;
            &lt;span class=&quot;c&quot;&gt;###########&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;/IfModule&amp;gt;&lt;/span&gt;

    &lt;span class=&quot;nt&quot;&gt;&amp;lt;Directory&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nb&quot;&gt;Options&lt;/span&gt; FollowSymLinks
        &lt;span class=&quot;c&quot;&gt;# prevent .htaccess reads on all the filesystem&lt;/span&gt;
        &lt;span class=&quot;nb&quot;&gt;AllowOverride&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;None&lt;/span&gt;
        &lt;span class=&quot;nb&quot;&gt;order&lt;/span&gt; allow,deny
        &lt;span class=&quot;nb&quot;&gt;deny&lt;/span&gt; from &lt;span class=&quot;k&quot;&gt;all&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;/Directory&amp;gt;&lt;/span&gt;

    &lt;span class=&quot;nt&quot;&gt;&amp;lt;Directory&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;/var/www/proxyplone/htdocs&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nb&quot;&gt;order&lt;/span&gt; allow,deny
        &lt;span class=&quot;nb&quot;&gt;Allow&lt;/span&gt; from &lt;span class=&quot;k&quot;&gt;All&lt;/span&gt;
        &lt;span class=&quot;nb&quot;&gt;DirectoryIndex&lt;/span&gt; index.php
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;/Directory&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/Virtualhost&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Ouch, in fact I've added a few more settings to be able to serve an index.php
page from this same virtualhost, and being a proxy for anything else, just to
have something more 'real-life wtf'.&lt;br/&gt;
Oh and as well I've added a nice trick for maintenance mode via &lt;strong&gt;RedirectMatch&lt;/strong&gt;,
for the happy few.&lt;/p&gt;

&lt;h3&gt;And now what about static files handling?&lt;/h3&gt;

&lt;p&gt;Let's do it in 2 steps.&lt;br/&gt;
We'll make a simple one first,
redirecting targeted files on direct static handling and then next time we'll add a &lt;strong&gt;virtual /static directory&lt;/strong&gt;
(like serious apps).
So the app dev will build for us a nice rewriteMap file.
This file will map all static urls to the real filesystem file. In this way:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;apache&quot;&gt;&lt;span class=&quot;c&quot;&gt;# staticplonefiles.txt&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# url =&amp;gt; real filesystem file, from an arbitray root&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;zonea/images/clean&lt;/span&gt;.&lt;span class=&quot;nb&quot;&gt;png&lt;/span&gt; foo/bar/img/clean.png
&lt;span class=&quot;err&quot;&gt;zonea/images/logo&lt;/span&gt;.&lt;span class=&quot;nb&quot;&gt;jpg&lt;/span&gt; foo/src/module/foo/images/logo.png
&lt;span class=&quot;err&quot;&gt;/module/bar/images/people&lt;/span&gt;.&lt;span class=&quot;nb&quot;&gt;png&lt;/span&gt; foo/src/module/bar/v1.2.5-5/images/people.png
&lt;span class=&quot;c&quot;&gt;# ... to be continued&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;We will store this file in &lt;strong&gt;/var/www/proxyplone/etc/staticplonefiles.txt&lt;/strong&gt; and reference it in the apache configuration.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;apache&quot;&gt;&lt;span class=&quot;nb&quot;&gt;RewriteMap&lt;/span&gt; statics txt:/var/www/proxyplone/etc/staticplonefiles.txt
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Then we can pass any url in &lt;code&gt;${static:/here/the/url}&lt;/code&gt; and obtain the filesystem mapping as the result.
Let's look at a rewriteRule catching potientially static contents
with a regex like that: &lt;code&gt;^/(.*\.(ico|png|gif|jpg|jpeg|bmp|css|js))&lt;/code&gt;.&lt;br/&gt;
Catched urls will be available in the next part of the rewrite rule,
or in preceding RewriteConds as &lt;em&gt;$1&lt;/em&gt;.
We will serve the static contents from the plone source code base,
which is available in the server at &lt;em&gt;/opt/plone/source&lt;/em&gt;.
So the &lt;em&gt;foo/bar/img/clean.png&lt;/em&gt; in the rewritemap file is
in fact &lt;em&gt;/opt/plone/source/foo/bar/img/clean.png&lt;/em&gt;.&lt;br/&gt;
Here you see Apache needs direct access to the files via is filesystem,
if real files aren't directly there you should ensure they will.
You can use &lt;strong&gt;rsync&lt;/strong&gt; or &lt;strong&gt;NFS&lt;/strong&gt; for example,
but &lt;strong&gt;the apache server must have direct access to theses files&lt;/strong&gt;,
as he will not proxy them.&lt;/p&gt;

&lt;p&gt;Starting with a rule:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;apache&quot;&gt;&lt;span class=&quot;nb&quot;&gt;RewriteRule&lt;/span&gt; ^/(.*\.(ico|png|gif|jpg|jpeg|bmp|css|js)) &lt;span class=&quot;sx&quot;&gt;/opt/plone/source/&lt;/span&gt;${statics:$1}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;wont work, as the rewrite engine will prefix the final destination with the current documentRoot. So we should better use:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;apache&quot;&gt;&lt;span class=&quot;nb&quot;&gt;RewriteRule&lt;/span&gt; ^/(.*\.(ico|png|gif|jpg|jpeg|bmp|css|js)) ${statics:$1}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;and change the DocumentRoot to:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;apache&quot;&gt;&lt;span class=&quot;nb&quot;&gt;DocumentRoot&lt;/span&gt; &lt;span class=&quot;sx&quot;&gt;/opt/plone/source&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;And to do it we must fix accordingly previous content like our index.php,
which is not anymore in the documentRoot.
To keep the same fonctionnal DocumentRoot we can add a rule:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;apache&quot;&gt;&lt;span class=&quot;nb&quot;&gt;Alias&lt;/span&gt; / &lt;span class=&quot;sx&quot;&gt;/var/www/proxyplone/htdocs/&lt;/span&gt; (do not forget last &amp;#39;/&amp;#39;)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Now a finished rule must always contains some flags at the end. here we'll use:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;apache&quot;&gt;&lt;span class=&quot;err&quot;&gt;[NC,L,handler=default-handler]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;&lt;code&gt;NC&lt;/code&gt; will make the match-rule case-insensitive (to catch .PNG for example)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;L&lt;/code&gt; will stop rewrite execution on succesfull match&lt;/li&gt;
&lt;li&gt;and the &lt;code&gt;handler&lt;/code&gt; is just a security, we force apache to treat static contents as static contents :-)&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;And last but not least we'll need a RewriteCond juste before this rule, to ensure unmatched documents
(static files not listed in the rewrite map) won't be handled by our rewriteRule
and will still be served by the app server.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;apache&quot;&gt;&lt;span class=&quot;nb&quot;&gt;RewriteCond&lt;/span&gt; ${statics:$1} !=&lt;span class=&quot;s2&quot;&gt;&amp;quot;&amp;quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;will do that for us,
it ensure the result is not empty,
and &lt;em&gt;$1&lt;/em&gt; is the matching content from the related rewriteRule.
Let's note as well the rewriteMap is stored in a cache
and not re-read at each request.&lt;/p&gt;

&lt;p&gt;Put it all together we have:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;apache&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;VirtualHost&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;*:80&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nb&quot;&gt;ServerName&lt;/span&gt;  plone.from.outside.net
    
    &lt;span class=&quot;c&quot;&gt;# in case apache is not set in utf-8&lt;/span&gt;
    &lt;span class=&quot;nb&quot;&gt;AddDefaultCharset&lt;/span&gt; UTF-8
 
    &lt;span class=&quot;nb&quot;&gt;DocumentRoot&lt;/span&gt; &lt;span class=&quot;sx&quot;&gt;/opt/plone/source&lt;/span&gt;
    &lt;span class=&quot;nb&quot;&gt;LogLevel&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;info&lt;/span&gt;
    &lt;span class=&quot;c&quot;&gt;#LogLevel debug&lt;/span&gt;
    &lt;span class=&quot;nb&quot;&gt;ErrorLog&lt;/span&gt; &lt;span class=&quot;sx&quot;&gt;/var/www/proxyplone/var/log/error.log&lt;/span&gt;
    &lt;span class=&quot;nb&quot;&gt;CustomLog&lt;/span&gt; &lt;span class=&quot;sx&quot;&gt;/var/www/proxyplone/var/log/access.log&lt;/span&gt; combined
    &lt;span class=&quot;c&quot;&gt;## uncomment below to enter maintenance mode&lt;/span&gt;
    &lt;span class=&quot;c&quot;&gt;#ErrorDocument 503 /htdocs/err/503.html&lt;/span&gt;
    &lt;span class=&quot;c&quot;&gt;#RedirectMatch 503 ^/(?!err/)&lt;/span&gt;

    &lt;span class=&quot;c&quot;&gt;# REWRITER for Static files managment rules&lt;/span&gt;
    &lt;span class=&quot;c&quot;&gt;# we need:&lt;/span&gt;
    &lt;span class=&quot;nb&quot;&gt;RewriteEngine&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;on&lt;/span&gt;
    &lt;span class=&quot;c&quot;&gt;#RewriteLog /var/www/proxyplone/var/log/rewrite.log&lt;/span&gt;
    &lt;span class=&quot;c&quot;&gt;# from 0 to 9&lt;/span&gt;
    &lt;span class=&quot;c&quot;&gt;#RewriteLogLevel 9&lt;/span&gt;
    &lt;span class=&quot;nb&quot;&gt;RewriteMap&lt;/span&gt; statics txt:/var/www/proxyplone/etc/staticplonefiles.txt
    &lt;span class=&quot;c&quot;&gt;# only apply the rewriterule for entries listed in the rewritemap, $1 refers to the $1 from next rewriteRule&lt;/span&gt;
    &lt;span class=&quot;nb&quot;&gt;RewriteCond&lt;/span&gt; ${statics:$1} !=&lt;span class=&quot;s2&quot;&gt;&amp;quot;&amp;quot;&lt;/span&gt;
    &lt;span class=&quot;c&quot;&gt;# prevent rewritemap parsing for URI not containing static file extensions&lt;/span&gt;
    &lt;span class=&quot;c&quot;&gt;# NC: case insensitive in comparison of testString and Pattern&lt;/span&gt;
    &lt;span class=&quot;c&quot;&gt;# L: stop rewriting&lt;/span&gt;
    &lt;span class=&quot;nb&quot;&gt;RewriteRule&lt;/span&gt; ^/(.*\.(ico|png|gif|jpg|jpeg|bmp|css|js)) /${statics:$1} [NC,L,handler=default-handler]

    &lt;span class=&quot;nt&quot;&gt;&amp;lt;IfModule&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;mod_proxy.c&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;c&quot;&gt;#&lt;/span&gt;
            &lt;span class=&quot;c&quot;&gt;# No open proxy&lt;/span&gt;
            &lt;span class=&quot;nb&quot;&gt;ProxyRequests&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;off&lt;/span&gt;
            &lt;span class=&quot;nt&quot;&gt;&amp;lt;Proxy&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
                    &lt;span class=&quot;nb&quot;&gt;Order&lt;/span&gt; allow,deny
                    &lt;span class=&quot;nb&quot;&gt;Allow&lt;/span&gt; from &lt;span class=&quot;k&quot;&gt;all&lt;/span&gt;
            &lt;span class=&quot;nt&quot;&gt;&amp;lt;/Proxy&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;nb&quot;&gt;ProxyTimeout&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1200&lt;/span&gt;
            &lt;span class=&quot;c&quot;&gt;#exceptions, do not proxy theses ones&lt;/span&gt;
            &lt;span class=&quot;nb&quot;&gt;ProxyPass&lt;/span&gt;       &lt;span class=&quot;sx&quot;&gt;/server-status&lt;/span&gt;  !
            &lt;span class=&quot;nb&quot;&gt;ProxyPass&lt;/span&gt;       &lt;span class=&quot;sx&quot;&gt;/index.php&lt;/span&gt; !
            &lt;span class=&quot;nb&quot;&gt;ProxyPass&lt;/span&gt;       &lt;span class=&quot;sx&quot;&gt;/err/&lt;/span&gt; !
            &lt;span class=&quot;c&quot;&gt;#Proxy rewriting&lt;/span&gt;
            &lt;span class=&quot;nb&quot;&gt;ProxyPass&lt;/span&gt;       /       &amp;lt;a href=&lt;span class=&quot;s2&quot;&gt;&amp;quot;http://plone.inside.lan/here/be/dragons/like/virtualhostmonster/settings/&amp;quot;&lt;/span&gt; title=&lt;span class=&quot;s2&quot;&gt;&amp;quot;http://plone.inside.lan/here/be/dragons/like/virtualhostmonster/settings/&amp;quot;&lt;/span&gt;&amp;gt;http://plone.inside.lan/here/be/dragons/like/virtualhostmonster/settings/&amp;lt;/a&amp;gt;
            &lt;span class=&quot;nb&quot;&gt;ProxyPassReverse&lt;/span&gt; /      &amp;lt;a href=&lt;span class=&quot;s2&quot;&gt;&amp;quot;http://plone.inside.lan/here/be/dragons/like/virtualhostmonster/settings/&amp;quot;&lt;/span&gt; title=&lt;span class=&quot;s2&quot;&gt;&amp;quot;http://plone.inside.lan/here/be/dragons/like/virtualhostmonster/settings/&amp;quot;&lt;/span&gt;&amp;gt;http://plone.inside.lan/here/be/dragons/like/virtualhostmonster/settings/&amp;lt;/a&amp;gt;
            &lt;span class=&quot;c&quot;&gt;###########&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;/IfModule&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;Directory&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nb&quot;&gt;Options&lt;/span&gt; FollowSymLinks
        &lt;span class=&quot;c&quot;&gt;# prevent .htaccess reads on all the filesystem&lt;/span&gt;
        &lt;span class=&quot;nb&quot;&gt;AllowOverride&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;None&lt;/span&gt;
        &lt;span class=&quot;nb&quot;&gt;order&lt;/span&gt; allow,deny
        &lt;span class=&quot;nb&quot;&gt;deny&lt;/span&gt; from &lt;span class=&quot;k&quot;&gt;all&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;/Directory&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nb&quot;&gt;Alias&lt;/span&gt; / &lt;span class=&quot;sx&quot;&gt;/var/www/proxyplone/htdocs/&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;Directory&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;/var/www/proxyplone/htdocs&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nb&quot;&gt;order&lt;/span&gt; allow,deny
        &lt;span class=&quot;nb&quot;&gt;Allow&lt;/span&gt; from &lt;span class=&quot;k&quot;&gt;All&lt;/span&gt;
        &lt;span class=&quot;nb&quot;&gt;DirectoryIndex&lt;/span&gt; index.php
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;/Directory&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;Directory&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;/opt/plone/source&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nb&quot;&gt;order&lt;/span&gt; allow,deny
        &lt;span class=&quot;nb&quot;&gt;Allow&lt;/span&gt; from &lt;span class=&quot;k&quot;&gt;All&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;/Directory&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/Virtualhost&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;And &lt;strong&gt;it works&lt;/strong&gt;, at this point you should note the rewriteRule
is a endpoint for matching content,
no other apache rule can be applied,
but at least you need a Directory directive
to allow content from your plone source to be acceded.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;No security Hole&lt;/strong&gt;, as some could think with the documentRoot
in plone source,&lt;br/&gt;
asking for &lt;code&gt;/&lt;/code&gt; url wont serve your source content as:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;there's an &lt;strong&gt;alias on /&lt;/strong&gt; redirecting to /var/www/proxyplone/htdocs/&lt;/li&gt;
&lt;li&gt;there's a &lt;strong&gt;proxy on /&lt;/strong&gt; redirecting to plone app server.&lt;/li&gt;
&lt;li&gt;but &lt;strong&gt;do not&lt;/strong&gt; remove mod_alias and mod_proxy from apache :-)&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;Do not hesitate to uncomment RewriteLog and RewriteLogLevel directives to see what is done.
Next time we'll make a static virtual directory and we'll be able to apply
some more rule from Apache after the rewrite part.&lt;/p&gt;
</description>
				<published>2009-11-05 00:00:00 +0100</published>
				<link>http://regilero.github.io//Apache/English/2009/11/05/use_rewrite_map_to_prevent_proxying_for_some_static_contents/</link>
			</item>
		
			<item>
				<title>Relative/Absolute URL and Proxies</title>
				<description>&lt;p&gt;If you develop a web application you'll come soon at the moment of building your URLs.&lt;br/&gt;
The best thing to do, either, is handling relative URL.&lt;/p&gt;

&lt;p&gt;If your app can behave with &lt;strong&gt;relative URL&lt;/strong&gt; and handle a &lt;strong&gt;base_url&lt;/strong&gt; prefix for sites installed in sub-directories
(like &lt;code&gt;'/myapp/is/here/'&lt;/code&gt;) you'll be friend with sysadmins. -- if you use Zend Framework have a look at the &lt;code&gt;setBaseUrl()&lt;/code&gt; router function--&lt;br/&gt;
But most app do not handle &lt;code&gt;URL&lt;/code&gt;s this way, and &lt;strong&gt;absolute urls&lt;/strong&gt; are used, sad world.&lt;br/&gt;
Then you'll find theses &lt;code&gt;URL&lt;/code&gt; in HTML content, in css, in javascript, and every object generated by your web application.&lt;br/&gt;
 That's hell for admins. So lets look deeper.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;First &lt;strong&gt;moving&lt;/strong&gt; your app on a &lt;strong&gt;different domain&lt;/strong&gt; will maybe be harder
(especially if you're a bad coder and this absolute URL is not written once in a &lt;strong&gt;config file&lt;/strong&gt;).&lt;/li&gt;
&lt;li&gt;Then &lt;strong&gt;serving&lt;/strong&gt; your app with &lt;strong&gt;different domains&lt;/strong&gt; in the &lt;strong&gt;same time&lt;/strong&gt; won't be possible.&lt;/li&gt;
&lt;li&gt;And harder, you'll &lt;strong&gt;break proxy rewriting&lt;/strong&gt;.&lt;/li&gt;
&lt;/ul&gt;


&lt;h3&gt;Exemple and workarounds&lt;/h3&gt;

&lt;p&gt;The job of the proxy is to serve your web application on a different namespace.
Maybe you have a &lt;strong&gt;myapp.localnetwork.net&lt;/strong&gt; application, that every people in &lt;strong&gt;localnetwork.net&lt;/strong&gt; will see.&lt;br/&gt;
The proxy will server &lt;strong&gt;myapp.publicdomain.com&lt;/strong&gt; or even &lt;strong&gt;publicdomain.com/myapp/is/here&lt;/strong&gt;.&lt;br/&gt;
And the &lt;strong&gt;job of the proxy is only handling HTTP headers&lt;/strong&gt;. &lt;br/&gt;
That means it will only rewrite things like &lt;strong&gt;redirections&lt;/strong&gt; (which is a code and url in headers of the response, not in the HTTP content).&lt;/p&gt;

&lt;pre&gt;
browser
\-&gt;myapp.publicdomain.com (proxy)
\-&gt;myapp.anotherproxy.domain.com (proxy)
\-&gt;myapp.localnetwork.net
&lt;/pre&gt;


&lt;p&gt;So you'll maybe ask the proxy maintainer to rewrite things on the &lt;strong&gt;content&lt;/strong&gt; as well.&lt;br/&gt;
OK, this can be done with &lt;strong&gt;mod_proxy_html&lt;/strong&gt; for example in Apache.
But this as 2 drawbacks:
 * this module is parsing every content and rewriting it, that's really slower.
 * And this module cannot handle all content, it will maybe forget one of your unknow &lt;code&gt;localnetwork.net&lt;/code&gt; url in a javascript file... big bugs.&lt;/p&gt;

&lt;h3&gt;Real app Solutions&lt;/h3&gt;

&lt;p&gt;So... if you either use &lt;strong&gt;absolute_url&lt;/strong&gt;, then you should test if any proxy is between you
and the guy requesting the page.&lt;br/&gt;
This is given by Apache to PHP in the &lt;strong&gt;HTTP_X_FORWARDED_HOST&lt;/strong&gt; parameter (or something similar
if you're not in PHP, that means it's something your webserver knows by HTTP headers of the request).&lt;br/&gt;
There you'll find a list of proxy used (if any) between you and the browser. &lt;strong&gt;Be careful&lt;/strong&gt;, it's a &lt;strong&gt;coma separated list&lt;/strong&gt;, with &lt;strong&gt;spaces&lt;/strong&gt;.&lt;br/&gt;
The name you should use as the base name of your site is the &lt;strong&gt;first name of this list&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;In our example we'll have: &lt;code&gt;&quot;myapp.publicdomain.com, myapp.anotherproxy.domain.com&quot;&lt;/code&gt; and your absolute url to use is &lt;code&gt;http://myapp.publicdomain.com&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;With that name overriding your default base name you'll have a better app.
But the problem is not really completly fixed in fact. What you have is the &lt;strong&gt;host name&lt;/strong&gt;,
but you do not have any information about the &lt;strong&gt;protocol&lt;/strong&gt;.&lt;br/&gt;
Maybe you'll prefix the name with &lt;strong&gt;'http://'&lt;/strong&gt; and it will be ok,
but maybe the proxy is using &lt;strong&gt;ssl&lt;/strong&gt;
(because using ssl for a public filtering proxy before intranet
application is something used a lot). And the protocol should be &lt;strong&gt;'https://'&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;If you decide to handle this in a config file of your application you'll obtain &lt;strong&gt;'https://'&lt;/strong&gt; even in your local network,
where you should'nt. &lt;br/&gt;
Your only solution will be to tell your app which protocol to use for which name. Quite dirty.&lt;br/&gt;
Well, in fact there's a solution, the proxy can set:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;apache&quot;&gt;&lt;span class=&quot;nb&quot;&gt;RequestHeader&lt;/span&gt; set X-Forwarded-Proto &lt;span class=&quot;s2&quot;&gt;&amp;quot;https&amp;quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;On his SSL configuration and you'll have &lt;strong&gt;HTTP_X_FORWARDED_PROTO&lt;/strong&gt; available on your code.&lt;/p&gt;

&lt;p&gt;All theses things works because of 'de facto' http headers added by mod_proxy on Apache.
You'll maybe wont have them, and your application will rely on proxy configuration. Remember &lt;strong&gt;relative URL&lt;/strong&gt; is still the best solution.&lt;/p&gt;
</description>
				<published>2009-06-03 00:00:00 +0200</published>
				<link>http://regilero.github.io//Apache/English/2009/06/03/relative_absolute_urls_and_proxies/</link>
			</item>
		
			<item>
				<title>6 nice things not know enough about PostgreSQL</title>
				<description>&lt;p&gt;With the new PostgreSQL server versions in place (8.2 and 8.3) and in a more general way with the 8.x series
some nice fonctionnalities have benn added.&lt;/p&gt;

&lt;p&gt;Let's have a short look at som interesting ones:&lt;br/&gt;
&lt;code&gt;FILLFACTOR=50&lt;/code&gt;, Id on &lt;code&gt;INSERT&lt;/code&gt;, &lt;code&gt;TOAST&lt;/code&gt; fields, &lt;code&gt;TABLE INHERITANCE&lt;/code&gt;, &lt;code&gt;TABLE PARTITIONNING&lt;/code&gt;, &lt;code&gt;NOTIFY&lt;/code&gt; and &lt;code&gt;LISTEN&lt;/code&gt;.&lt;/p&gt;

&lt;h3&gt;WITH FILLFACTOR=50 in CREATE TABLE instructions (since 8.2):&lt;/h3&gt;

&lt;p&gt;FILLFACTOR is 100% by default and is a good default setting for tables
where the basic usage is &lt;code&gt;INSERT&lt;/code&gt;s (and select).&lt;br/&gt;
But when you know that you'll make a lot of &lt;code&gt;UPDATE&lt;/code&gt;s on your rows you should decrease this factor.&lt;/p&gt;

&lt;p&gt;This way &lt;strong&gt;some space on the table will be reserved near your inserted rows&lt;/strong&gt;.
This space will then be used as a work zone when you'll make an &lt;code&gt;UPDATE&lt;/code&gt; on the row.&lt;br/&gt;
And the magic effect is that this work zone won't be at the end of the table but near your row,
in the same page in memory.&lt;/p&gt;

&lt;p&gt;see &lt;a href=&quot;http://www.postgresql.org/docs/8.3/interactive/sql-createtable.html#SQL-CREATETABLE-STORAGE-PARAMETERS&quot;&gt;postgreSQL documentation page&lt;/a&gt; for details.&lt;/p&gt;

&lt;h3&gt;2) RETURNING on INSERT INTO to get your INSERTED Id (since 8.2):&lt;/h3&gt;

&lt;p&gt;The classical way to get your &lt;strong&gt;'last insert Id'&lt;/strong&gt; in PostgreSQl as always been using &lt;code&gt;currval(SEQUENCE)&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;This is right and secure as &lt;code&gt;PRIMARY KEYS&lt;/code&gt; are usually defined as &lt;code&gt;SEQUENCE&lt;/code&gt;s with &lt;code&gt;DEFAULT nextval(SEQUENCE)&lt;/code&gt;.&lt;br/&gt;
And &lt;code&gt;currvall&lt;/code&gt; renders the last value set by &lt;code&gt;nextval&lt;/code&gt; in the current session (others concurrent sessions cannot interfere with it).&lt;/p&gt;

&lt;p&gt;But that's not something easy to understand for newbies and very bad examples with &lt;code&gt;max(id)&lt;/code&gt; can always be found googling around.&lt;/p&gt;

&lt;p&gt;Now you can add a &lt;strong&gt;RETURNING MyId&lt;/strong&gt; code on your &lt;code&gt;INSERT&lt;/code&gt; query and the result of your insert won't be the row &lt;code&gt;OID&lt;/code&gt; anymore
but your &lt;code&gt;Id&lt;/code&gt; (or anything else if you want).&lt;/p&gt;

&lt;p&gt;Consult &lt;a href=&quot;http://www.postgresql.org/docs/8.3/interactive/sql-insert.html&quot;&gt;postgreSQL documentation page&lt;/a&gt; for details.&lt;/p&gt;

&lt;h3&gt;3) TOAST FIELDS:&lt;/h3&gt;

&lt;p&gt;&lt;code&gt;TOAST&lt;/code&gt; means &lt;strong&gt;'The Oversized-Attribute Storage Technique'.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;You can set up to &lt;strong&gt;1Gb&lt;/strong&gt; in &lt;strong&gt;one field&lt;/strong&gt; of your &lt;strong&gt;row&lt;/strong&gt;.&lt;br/&gt;
This column won't be saved in the same physical file as the others. Another file will be created to store
such big fields.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.postgresql.org/docs/8.3/interactive/storage-toast.html&quot;&gt;PostgreSQL documentation page&lt;/a&gt; is still the best reference.&lt;/p&gt;

&lt;p&gt;If you wonder about the size of your tables and the physical files on your filesystem you should not.
Your tables are always split in files of &lt;strong&gt;2Gb&lt;/strong&gt;. And Toast values are stored on their own files.&lt;/p&gt;

&lt;h3&gt;4) TABLE INHERITANCE:&lt;/h3&gt;

&lt;p&gt;You can define a &lt;strong&gt;table B as child of table A&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Request on table &lt;code&gt;A&lt;/code&gt; will then render rows from &lt;code&gt;A&lt;/code&gt; and &lt;code&gt;B&lt;/code&gt; tables.&lt;br/&gt;
With &lt;code&gt;ONLY&lt;/code&gt; keyword you can limit requests on &lt;code&gt;A&lt;/code&gt; with &lt;code&gt;A&lt;/code&gt; rows.&lt;br/&gt;
&lt;code&gt;A&lt;/code&gt; could have several tables (B, C, D, etc). Indexes are done tables by table, and are by this way shorter.&lt;/p&gt;

&lt;p&gt;This is quite powerfull but you'll have some problems with &lt;strong&gt;contraints&lt;/strong&gt;. &lt;code&gt;UNIQUE&lt;/code&gt; constraints for example
are done for each table. You cannot ensure &lt;code&gt;A+B+C+D&lt;/code&gt; rows will not share the same value for this &lt;strong&gt;'UNIQUE'&lt;/strong&gt; constraint.&lt;/p&gt;

&lt;p&gt;Setting Referential integrity from one of this table to a &lt;code&gt;Z&lt;/code&gt; table is easy (but should be done for each table).&lt;br/&gt;
But setting the reverse relation from &lt;code&gt;Z&lt;/code&gt; to &lt;code&gt;A+B+C+D&lt;/code&gt; isn't possible.&lt;/p&gt;

&lt;p&gt;You should really look &lt;a href=&quot;http://www.postgresql.org/docs/8.3/interactive/ddl-inherit.html&quot;&gt;postgreSQL documentation page&lt;/a&gt;, as always.&lt;/p&gt;

&lt;h3&gt;5) TABLE PARTITIONNING:&lt;/h3&gt;

&lt;p&gt;One of the most powerfull thing you can do with &lt;code&gt;INHERITANCE&lt;/code&gt; is table &lt;code&gt;PARTITIONNING&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Using &lt;code&gt;TABLESPACE&lt;/code&gt;s you can define several different physical storage locations for your databases.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;TABLESPACES&lt;/code&gt; can easily be used for a database, a table, or even for an index (or the WAL sync log).&lt;br/&gt;
This is fine. You can use several storage devices with different characteristics, each one fitting
your differents needs (capacity, speed, sync/async, etc).&lt;br/&gt;
But this combined with &lt;code&gt;INHERITANCE&lt;/code&gt; becomes even more powerfull:&lt;br/&gt;
Define table &lt;code&gt;A&lt;/code&gt; as an empty table.&lt;br/&gt;
Define table &lt;code&gt;B&lt;/code&gt; and &lt;code&gt;C&lt;/code&gt; as child tables of &lt;code&gt;A&lt;/code&gt;, and use different tablespaces for &lt;code&gt;B&lt;/code&gt; and &lt;code&gt;C&lt;/code&gt;.&lt;br/&gt;
You then have a &lt;strong&gt;virtual A table&lt;/strong&gt; with his content spread on diferent storage devices
(or not, you could use the TABLESPACE on the same storage but you'll lose most of the power of the 'thing').&lt;/p&gt;

&lt;p&gt;Your benefits? &lt;strong&gt;smaller indexes&lt;/strong&gt;, on different devices, which can run in &lt;strong&gt;parallel&lt;/strong&gt;,
some problems with constraints as with previous part,
but this is not a problem for all tables, and for a huge table this &lt;code&gt;TABLESPACE&lt;/code&gt; splitting could be
a cool thing to study.&lt;/p&gt;

&lt;p&gt;Have a look at &lt;a href=&quot;http://www.postgresql.org/docs/8.3/interactive/ddl-partitioning.html&quot;&gt;postgreSQL documentation page&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;One last point, you'll have to defined how the rows are splitted with the different tables
(ranges, or domains, or anything else),
you'll maybe have to check &lt;code&gt;RULES&lt;/code&gt; as well, even with simple &lt;code&gt;INHERITANCE&lt;/code&gt;, because &lt;code&gt;INSERT&lt;/code&gt;
for example should be done on the child table, and &lt;code&gt;INSERT&lt;/code&gt; on the main &lt;code&gt;TABLE&lt;/code&gt; should be redirected elsewhere.&lt;/p&gt;

&lt;h3&gt;6) NOTIFY/LISTEN:&lt;/h3&gt;

&lt;p&gt;PostgreSQL has a builtin fonctionnality for &lt;strong&gt;Observer/observable Design Pattern&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;You can &lt;code&gt;NOTIFY&lt;/code&gt; something, as an &lt;code&gt;SQL&lt;/code&gt; command and at the end of your transaction
(or directly if you're not in a transaction) others SQL sessions which have registered this notification with &lt;code&gt;LISTEN&lt;/code&gt;
will get your notification (&lt;a href=&quot;http://www.postgresql.org/docs/8.1/interactive/libpq-notify.html&quot;&gt;the doc&lt;/a&gt;).&lt;br/&gt;
Usefull with server processes (while true processes), a cli process in PHP for example with builtin &lt;a href=&quot;http://www.php.net/manual/en/function.pg-get-notify.php&quot;&gt;pg lib&lt;/a&gt;
but not with PDO actually.&lt;/p&gt;

&lt;p&gt;Here is as well a &lt;a href=&quot;http://jdbc.postgresql.org/documentation/83/listennotify.html&quot;&gt;Java example&lt;/a&gt; and examples in &lt;a href=&quot;http://pypgsql.cvs.sourceforge.net/viewvc/pypgsql/pypgsql/examples/&quot;&gt;python, the demo2a/b&lt;/a&gt; files.&lt;/p&gt;
</description>
				<published>2008-10-30 00:00:00 +0100</published>
				<link>http://regilero.github.io//PostgreSQL/English/2008/10/30/6_nice_things_not_known_enough_about_postgresql/</link>
			</item>
		
			<item>
				<title>Autocomplete Ajax search with Dojo and Zend Framework</title>
				<description>&lt;p&gt;With the new Zend Framework 1.6 we've these nice Dojo widgets.&lt;/p&gt;

&lt;p&gt;New things lacks documentations most of times. &lt;br/&gt;
So if you want to build something really usefull like theses nice autocomplete search combobox this example could save you a lot of time.&lt;/p&gt;

&lt;p&gt;We'll assume you have Dojo already installed and activated on your views,
and that acl verifications are done elsewhere, on your Controller plugins for example.&lt;/p&gt;

&lt;p&gt;First let's see HTML code (in your view):&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;html&quot;&gt;  &lt;span class=&quot;nt&quot;&gt;&amp;lt;script &lt;/span&gt;&lt;span class=&quot;na&quot;&gt;type=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;text/javascript&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;dojo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;dojo.parser&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;dojo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;dojox.data.QueryReadStore&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;dojo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;dijit.form.ComboBox&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;dojo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;dijit.form.FilteringSelect&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;dojo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;custom.FindAutoCompleteReadStore&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;dojo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;dijit.form.Form&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;dojo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;dijit.form.Button&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;form&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;Find_Form&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;action=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;/module/foo/edit&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;method=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;get&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;dojoType=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;dijit.form.Form&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;dojoType=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;custom.FindAutoCompleteReadStore&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;jsId=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;NameStore&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;url=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;/module/foo/find/format/json&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;requestMethod=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;get&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;label&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;for=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;id&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;optional&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;Recherchez un nom:&lt;span class=&quot;nt&quot;&gt;&amp;lt;/label&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;span&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;formelement&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;select&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;id&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;FindByName&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;hasDownArrow=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;store=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;NameStore&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;size=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;25&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;tabindex=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;99&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;autocomplete=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;1&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;dojoType=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;dijit.form.FilteringSelect&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;pageSize=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;10&amp;quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/select&amp;gt;&amp;lt;/span&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;span&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;actionbuttons&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;input&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;Find_go&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;Find_go&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;value=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;Go:&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;type=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;submit&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;label=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;go:&amp;quot;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;dojoType=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;dijit.form.Button&amp;quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&amp;lt;/span&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;/form&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;As we can see you'll need an additional custom js: &lt;strong&gt;custom.FindAutoCompleteReadStore&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;This is a really simple js to write, create your custom directory in the same level
as dojo or dijit directory and create &lt;code&gt;FindAutoCompleteReadStore.js&lt;/code&gt; like that:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;js&quot;&gt;&lt;span class=&quot;nx&quot;&gt;dojo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;provide&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;custom.FindAutoCompleteReadStore&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;dojo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;dojox.data.QueryReadStore&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;dojo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;declare&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;custom.FindAutoCompleteReadStore&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;dojox&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;QueryReadStore&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;fetch&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;request&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;request&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;serverQuery&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Find&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;request&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;query&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// cal superclass fecth&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;inherited&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;fetch&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;arguments&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Now you'll need to serve the requested Ajax query
(requested by the Dojo store linked with our FilteringSelect or Combobox) : &lt;code&gt;/module/foo/find/format/json&lt;/code&gt;&lt;br/&gt;
This is the method &lt;strong&gt;'findAction'&lt;/strong&gt; in the Controller &lt;strong&gt;'foo'&lt;/strong&gt; on module &lt;strong&gt;'module'&lt;/strong&gt;.&lt;br/&gt;
But first let's see the preDispatch function of this controller where we handle the &lt;code&gt;format/json&lt;/code&gt; instruction to switch in Ajax mode:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;php&quot;&gt;&lt;span class=&quot;x&quot;&gt;public function preDispatch()&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;    $contextSwitch =   $this-&amp;gt;_helper-&amp;gt;getHelper(&amp;#39;contextSwitch&amp;#39;);&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;    $contextSwitch-&amp;gt;setAutoJsonSerialization( true );&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;    $contextSwitch-&amp;gt;addActionContext(&amp;#39;find&amp;#39;, &amp;#39;json&amp;#39;);&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;    $contextSwitch-&amp;gt;initContext();&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;So now let's write the find function:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;php&quot;&gt;&lt;span class=&quot;x&quot;&gt;  public function findAction()&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;  {&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;      // handle filtering of recieved data&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;      $replacer = new Zend_Filter_pregReplace(&amp;#39;/\*/&amp;#39;,&amp;#39;%&amp;#39;);&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;      // emulate alpha+num filter with some more characters enabled&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;      //**** &amp;lt;a href=&amp;quot;http://www.regular-expressions.info/unicode.html&amp;quot; title=&amp;quot;http://www.regular-expressions.info/unicode.html&amp;quot;&amp;gt;http://www.regular-expressions.info/unicode.html&amp;lt;/a&amp;gt; ****&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;      // \p{N} --&amp;gt; numeric chars of any language&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;      // \s -&amp;gt; withespace&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;      //\x0027 : APOSTROPHE&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;      //\x002C : COMMA&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;      //\x0025% : % in UTF-8 and not in utf-8&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;      //\x002D : HYPHEN / MINUS&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;      //\x005F : UNDERSCORE&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;      //\. DOT&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;      $mylimit = new Zend_Filter_pregReplace(&amp;#39;/[^\p{L}\p{N}\s\x0027\x002C\x002D\x005F\x0025%\.]/u&amp;#39;,&amp;#39;&amp;#39;);&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;      $filters = array(&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;              &amp;#39;*&amp;#39; =&amp;gt; &amp;#39;StringTrim&amp;#39;&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;              ,&amp;#39;Find&amp;#39; =&amp;gt; array(&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;              &amp;#39;StripNewlines&amp;#39;&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;              ,$replacer&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;              ,$mylimit&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;              ,&amp;#39;StripTags&amp;#39;&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;          )&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;          ,&amp;#39;start&amp;#39; =&amp;gt; &amp;#39;Int&amp;#39;&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;          ,&amp;#39;count&amp;#39; =&amp;gt; &amp;#39;Int&amp;#39;&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;      );&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;      $validators =array();&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;      $input = new Zend_Filter_Input($filters, $validators, $_GET);&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;      $find = $input-&amp;gt;getUnescaped(&amp;#39;Find&amp;#39;);&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;      if (empty($find)) $find = &amp;#39;%&amp;#39;;&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;      $start = intval($input-&amp;gt;getUnescaped(&amp;#39;start&amp;#39;));&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;      if (empty($start)) $start = 0;&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;      $count = intval($input-&amp;gt;getUnescaped(&amp;#39;count&amp;#39;));&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;      if (empty($count)) $count = 3;&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;      // get the model, here you should adjust with the way you work&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;      // then make your query with limits&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;      $this-&amp;gt;_modeltable = new My_Zend_Db_Table_Foo($this-&amp;gt;db)&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;      $fieldid = &amp;#39;my_id_field&amp;#39;;&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;      $fieldident = &amp;#39;my_name_field&amp;#39;;&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;      $select = $this-&amp;gt;_modeltable-&amp;gt;select();&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;      $db = $this-&amp;gt;_modeltable-&amp;gt;getAdapter();&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;      $select-&amp;gt;where($db-&amp;gt;quoteinto($db-&amp;gt;quoteIdentifier($fieldident).&amp;#39; LIKE ?&amp;#39;, $find));&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;      $select-&amp;gt;limit($count, $start);&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;      $rows= $this-&amp;gt;_modeltable-&amp;gt;fetchAll($select);&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;      $rowsarray = $rows-&amp;gt;ToArray();&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;      $finalarray=array();&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;      foreach ($rowsarray as $row)&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;      {&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;          $key = $row[$fieldid];&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;          $finalarray[$key] = $row[$fieldident];&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;      }&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;      //Zend_Debug::dump($finalarray);&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;      //die(__METHOD__);&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;      $this-&amp;gt;_helper-&amp;gt;autoCompleteDojo($finalarray);&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;  }&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;And it should be sufficient, pffiuu.&lt;br/&gt;
But... there's one remaining problem after that.
We put the search autocomplete inside a form and we wanted the &lt;strong&gt;'go'&lt;/strong&gt; button to send a request to something like that:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;/module/foo/edit/id/1245&lt;/code&gt; OR &lt;code&gt;/module/foo/edit?id=1245&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;But we'll have something like:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;/module/foo/edit?id=THE NAME&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;too bad...&lt;/p&gt;

&lt;p&gt;To get it done I had to change one thing in Zend Framework library on the Zend/Controller/Action/Helper/AutoCompleteDojo.php Helper:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;php&quot;&gt;&lt;span class=&quot;x&quot;&gt;  public function prepareAutoCompletion($data, $keepLayouts = false)&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;  {&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;    $items = array();&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;    foreach ($data as $key =&amp;gt; $value) {&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;      $items[] = array(&amp;#39;label&amp;#39; =&amp;gt; $value, &amp;#39;name&amp;#39; =&amp;gt; $value, &amp;#39;key&amp;#39; =&amp;gt; $key);&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;    }&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;    $final = array(&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;      &amp;#39;identifier&amp;#39; =&amp;gt; &amp;#39;key&amp;#39;,&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;      &amp;#39;items&amp;#39; =&amp;gt; $items,&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;     );&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;    return $this-&amp;gt;encodeJson($final, $keepLayouts);&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;  }&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Line 66 &lt;code&gt;'key'&lt;/code&gt; is added on the item and line 69 &lt;code&gt;'identifier'&lt;/code&gt; is set to &lt;code&gt;'key'&lt;/code&gt; and not &lt;code&gt;'name'&lt;/code&gt;.&lt;br/&gt;
&lt;code&gt;'identifier'&lt;/code&gt; is used by the Dojo Filtering Select to decide which field will be used for the form,
for more info see &lt;a href=&quot;http://dojotoolkit.org/reference-guide/1.9/&quot;&gt;dojo book page&lt;/a&gt; and search &lt;code&gt;'abbreviation'&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;There's also a bug talking about that for Zend Framework,
to get other solutions or info on the way it will be fixed later look &lt;a href=&quot;http://framework.zend.com/issues/browse/ZF-4494&quot;&gt;there&lt;/a&gt;.&lt;/p&gt;
</description>
				<published>2008-10-26 00:00:00 +0200</published>
				<link>http://regilero.github.io//Zend%20Framework/English/2008/10/26/autocomplete_ajax_search_dojo_zend_framework/</link>
			</item>
		
			<item>
				<title>Force HTTP/1.0 Apache response when PHP is there...</title>
				<description>&lt;p&gt;Recently I had to force an &lt;code&gt;HTTP/1.0&lt;/code&gt; response with Apache because of a bad Java Parser.&lt;br/&gt;
This parser/browser was asking for &lt;code&gt;HTTP/1.1&lt;/code&gt; responses but did'nt understood &lt;a href=&quot;http://en.wikipedia.org/wiki/Chunked_transfer_encoding&quot;&gt;chunked content encoding&lt;/a&gt;.&lt;br/&gt;
And so giving me a nice Sax exception &quot;content not allowed in prolog&quot;.&lt;/p&gt;

&lt;p&gt;So, well, I won't fix this #$*%! code.&lt;br/&gt;
Better trying to talk to this special User Agent in &lt;code&gt;HTTP/1.0,&lt;/code&gt; he might handle it in a better way.&lt;br/&gt;
Here's what a &lt;strong&gt;chunked&lt;/strong&gt; content looks like. See the &lt;strong&gt;306c&lt;/strong&gt; hexa lenght code before the body of the response?&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;http&quot;&gt;&lt;span class=&quot;kr&quot;&gt;HTTP&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;1.1&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;207&lt;/span&gt; &lt;span class=&quot;ne&quot;&gt;Multi-Status&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;(...&lt;/span&gt; &lt;span class=&quot;l&quot;&gt;lot of headers, but no lenght one ...)&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;Content-Type&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;l&quot;&gt;text/xml; charset=&amp;quot;utf-8&amp;quot;&lt;/span&gt;

306c
&lt;span class=&quot;cp&quot;&gt;&amp;lt;?xml version=&amp;quot;1.0&amp;quot; encoding=&amp;quot;utf-8&amp;quot;?&amp;gt;&lt;/span&gt;
(... here the content ...)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;So I have the user agent of this Java HTTP Client, let's call it 'NoobieJavaParser'.&lt;br/&gt;
I simply wrote in my apache virtualhost config file:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;apache&quot;&gt;&lt;span class=&quot;nb&quot;&gt;BrowserMatch&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;^NoobieJavaParser&amp;quot;&lt;/span&gt; nokeepalive force-response-1.0 downgrade-1.0
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;And it &lt;strong&gt;should be sufficient&lt;/strong&gt;.&lt;br/&gt;
In fact it's not because of a &lt;strong&gt;very old PHP bug&lt;/strong&gt; (saw first bug report in 2004, &lt;a href=&quot;https://bugs.php.net/bug.php?id=16218&quot;&gt;#16218&lt;/a&gt;,&lt;a href=&quot;https://bugs.php.net/bug.php?id=39927&quot;&gt;#39927&lt;/a&gt;,&lt;a href=&quot;https://bugs.php.net/bug.php?id=45947&quot;&gt;#45947&lt;/a&gt;).
PHP is building is &lt;code&gt;$_SERVER&lt;/code&gt; variable by reading Apache env, and PHP doesn't want any
dot in this parsed content. The &lt;code&gt;downgrade-1.0&lt;/code&gt; env name seem malicious for PHP.&lt;br/&gt;
So the env setting looks like that in PHP:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;php&quot;&gt;&lt;span class=&quot;x&quot;&gt;echo $_SERVER[&amp;#39;downgrade-1_0&amp;#39;];&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;-&amp;gt; 1&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;See the dots is now a &lt;code&gt;_&lt;/code&gt;. It should not hurt anyone, except &lt;strong&gt;PHP changed this env name in Apache as well&lt;/strong&gt;.&lt;br/&gt;
So when apache is sending the response, he does not care anymore about this &lt;code&gt;downgrade-1_0&lt;/code&gt; settings.
If you want Apache to have the real behaviour, i.e: sending &lt;code&gt;HTTP/1.0&lt;/code&gt; responses for this 'NoobieJavaParser' User Agent
you must &lt;strong&gt;re-set the env&lt;/strong&gt; of Apache in PHP, with something like that:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;php&quot;&gt;&lt;span class=&quot;x&quot;&gt;if ($_SERVER[&amp;#39;downgrade-1_0&amp;#39;]){&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;        apache_setenv(&amp;#39;downgrade-1.0&amp;#39;,&amp;#39;true&amp;#39;);&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;if ($_SERVER[&amp;#39;force-response-1_0&amp;#39;]){&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;        apache_setenv(&amp;#39;force-response-1.0&amp;#39;,&amp;#39;true&amp;#39;);&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Ugly, but it's PHP's fault.&lt;br/&gt;
And no more chunked content after that.
And the nice thing is that apache_setenv is not changing $_SERVER, so PHP still does not have this &lt;em&gt;malicious&lt;/em&gt; dot.&lt;/p&gt;
</description>
				<published>2008-08-29 00:00:00 +0200</published>
				<link>http://regilero.github.io//Apache/English/2008/08/29/force_http_1.0_response_when_php_is_there/</link>
			</item>
		
			<item>
				<title>Temps de réponse réél d'une page web avec ... netcat</title>
				<description>&lt;p&gt;Bon, j'imagine que la plupart des gens (heu.. d'un certain type) savent qu'on peut faire du web &lt;strong&gt;à la main&lt;/strong&gt; avec telnet ou netcat.
Et bien on peut. Donc.
Je voulais me servir de cela pour tracer quelques temps de réponse de pages html précises.
Le tout en une seule ligne histoire de se servir de l'historique et pas de mon cerveau pour la retaper.&lt;/p&gt;

&lt;p&gt;Commencons par un telnet sur &lt;a href=&quot;http://www.google.com&quot;&gt;www.google.com&lt;/a&gt; sur le port 80 (web).
On tape la requète comme si nous étions un navigateur web (très basique le navigateur). La requète HTTP va donc être:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;http&quot;&gt;&lt;span class=&quot;err&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;GET&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;/&lt;/span&gt; &lt;span class=&quot;kr&quot;&gt;HTTP&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;1.0&lt;/span&gt;
 &lt;span class=&quot;l&quot;&gt; &lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Remarquez qu'il y a une ligne vide (donc deux fois entrée).&lt;/p&gt;

&lt;p&gt;Cela donne en résultat une page de redirection vers le site français de google, parfait.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;  nii:~&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;telnet www.google.com 80
  Trying 209.85.129.147...
  Connected to www.l.google.com.
  Escape character is &lt;span class=&quot;s1&quot;&gt;&amp;#39;^]&amp;#39;&lt;/span&gt;.
  GET / HTTP/1.0
  .
  HTTP/1.0 302 Found
  Location: http://www.google.fr/
  &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;.. je vous passe le reste ...&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
  Connection closed by foreign host.
  nii:~&lt;span class=&quot;err&quot;&gt;$&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Bon, maintenant je veux mesurer le temps de réponse. Avec tout bètement la commande 'time'.
Pour faire cela l'idéal est de taper ma commande en une seule fois,
et là telnet n'est plus très souple pour automatiser la saisie utilisateur On va commencer par tester la même chose avec netcat (nc)&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;http&quot;&gt;&lt;span class=&quot;err&quot;&gt;  nii:~$ printf &amp;#39;GET / HTTP/1.0\n\n&amp;#39; | \&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;  nc -w 10 www.exemple.com 80&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;On avance. Par contre on a de fortes chances de ne pas tomber sur la page web que l'on recherche vraiment.
On a de très fortes chances de tomber sur le VirtualHost par défaut du serveur HTTP
à l'autre bout.
Mais pour servir le bon site il faut taper du &lt;strong&gt;HTTP/1.1&lt;/strong&gt; au lieu de 1.0 et ajouter un header à notre
requète indiquant au serveur le nom du site que l'on veut (parmi ceux qu'il héberge),
revoyez le protocole &lt;a href=&quot;http://en.wikipedia.org/wiki/HTTP#Request_Message&quot;&gt;http version 1.1&lt;/a&gt; si vous ne comprenez rien à ce que je dis.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;http&quot;&gt;&lt;span class=&quot;err&quot;&gt;  nii:~$ printf &amp;#39;GET / HTTP/1.1\nHost:www.exemple.com\n\n&amp;#39; | \&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;  nc -w 10 -q 10 www.exemple.com 80&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Et maintenant pour avoir le temps de la commande je rajoute time au début et je fais sauter le temps d'affichage de la réponse...&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;http&quot;&gt;&lt;span class=&quot;err&quot;&gt;  nii:~$ time printf &amp;#39;GET / HTTP/1.1\nHost:www.exemple.com\n\n&amp;#39; | \&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;  nc -w 10 -q 10 www.exemple.com 80 1&amp;gt;/dev/null&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;  .&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;  real    0m0.627s&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;  user    0m0.000s&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;  sys     0m0.004s&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;  nc -w 10 -q 10 www.exemple.com 80&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;strong&gt;Mais...&lt;/strong&gt;&lt;br/&gt;
Il y a une grosse erreur.
On se prends &lt;strong&gt;le temps d'une requète DNS&lt;/strong&gt; de la machine sur laquelle on est qui cherche l'adresse IP de l'hôte
que l'on a donné à netcat (après le nc -w 10) pour aller ouvrir une connexion tcp sur le port 80 de cet hôte.
Ce temps DNS ne sert à rien, il fausse notre résultat (et c'est souvent très long le DNS).
Il faut utiliser l'adresse IP du serveur web directement.
De toutes façons c'est à l'intérieur du protocole HTTP, avec notre entête &lt;strong&gt;Host:&lt;/strong&gt; que l'on indique le site web
demandé au serveur, et pas du tout avec le nom DNS utilisé pour résoudre l'adresse IP du serveur web.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;http&quot;&gt;&lt;span class=&quot;err&quot;&gt;  nii:~$ nslookup ww.exemple.com&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;  66.116.125.121&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;  nii:~$ time printf &amp;#39;GET / HTTP/1.1\nHost:www.exemple.com\n\n&amp;#39; | \&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;  nc -w 10 -q 10 66.116.125.121 80 1&amp;gt;/dev/null&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;  .&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;  real    0m0.408s&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;  user    0m0.004s&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;  sys     0m0.000s&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;strong&gt;0.408s&lt;/strong&gt; est déjà plus proche du temps de réponse réèl du site (depuis le point du réseau où on se trouve,
 il y a des pertes dues au réseau, forcément).&lt;/p&gt;

&lt;p&gt;PS: vive les sites &lt;a href=&quot;http://www.dgate.org/~brg/bvtelnet80/&quot;&gt;Best Viewed with telnet to port 80&lt;/a&gt;&lt;/p&gt;
</description>
				<published>2008-05-25 00:00:00 +0200</published>
				<link>http://regilero.github.io//Monitoring/Francais/2008/05/25/temps_de_reponse_reel_d_une_page_web_avec_netcat/</link>
			</item>
		
	</channel>
</rss>
